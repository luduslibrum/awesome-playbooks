{
  "kom": {
    "komandVersion": "1.111.4-0-gb43d1",
    "komFileVersion": "2.0.0",
    "exportedAt": "2022-09-03T12:35:37.803983752Z",
    "workflowVersions": [
      {
        "name": "Check Monitored Domains with DomainTools PhishEye from Slack",
        "type": "runnable",
        "version": "",
        "description": "# Description\n\nThis workflow accepts a Slack command containing a DomainTools PhishEye search term. It will search PhishEye and return the results of matching domains back to Slack.\n\nSample Slack Trigger Commands:\n\n`@Rapid7 InsightConnect check-phisheye example`\n\n# Key Features\n\n* Check for phishing domains related to a search term\n\n# Requirements\n\n* [Slack connection](https://insightconnect.help.rapid7.com/docs/configure-slack-for-chatops)\n* DomainTools PhishEye API key and username\n\n# Documentation\n\n## Setup\n\nImport the workflow from the Rapid7 Extension Library and proceed through the Import Workflow wizard in InsightConnect. Import plugins, create or select connections, and rename the workflow as a part of the Import Workflow wizard as necessary.\n\nOnce the workflow has been imported, **Update the first step with the channel name to suit your Slack environment!** by editing the input with the preset text of `change_me` to match the channel to monitor.\nThe workflow is set to search back 1 day but this value can be changed in the _Search PhishEye_ step.\n\nTo run the workflow, @ your Slackbot in the chosen channel or in a direct message along with the command \"check-phisheye <term>\". The workflow will post responses in a thread.\n\n## Technical Details\n\nPlugins utilized by workflow:\n\n|Plugin|Version|Count|\n|----|----|--------|\n|DomainTools PhishEye|1.0.0|1|\n\n## Troubleshooting\n\n_There is no troubleshooting information at this time_\n\n# Version History\n\n* 1.0.0 - Initial workflow\n\n# Links\n\n## References\n\n* [DomainTools Phisheye](https://www.domaintools.com/products/phisheye/)\n* [Slack](https://slack.com)\n",
        "graph": {
          "edges": {
            "272110fb-5823-41e3-9777-01b243e789b0": {
              "id": "272110fb-5823-41e3-9777-01b243e789b0",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "0766b90c-dddd-4984-8384-443f61972686",
              "toNodeId": "3972572a-1884-4f97-818a-3b96e8edc1d2"
            },
            "27c28b9a-3de6-4506-95ad-c9bc9030e2ab": {
              "id": "27c28b9a-3de6-4506-95ad-c9bc9030e2ab",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "3972572a-1884-4f97-818a-3b96e8edc1d2",
              "toNodeId": ""
            },
            "2b90f926-9f3e-4b66-bb82-f56ef43423eb": {
              "id": "2b90f926-9f3e-4b66-bb82-f56ef43423eb",
              "name": "No",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "60e7bc8a-229f-4319-8a79-0cf6add2f7ad",
              "toNodeId": "e123c0cc-e0fa-458f-bb71-843818e2bddb"
            },
            "516fff67-fbee-4171-ad3e-406b6838cf1a": {
              "id": "516fff67-fbee-4171-ad3e-406b6838cf1a",
              "name": "Yes",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b",
              "toNodeId": "69170604-abd4-4b55-bcab-b67796400a22"
            },
            "51ccba6a-a01d-4dcf-a7d7-b9b084acc496": {
              "id": "51ccba6a-a01d-4dcf-a7d7-b9b084acc496",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "e123c0cc-e0fa-458f-bb71-843818e2bddb",
              "toNodeId": "82e839af-e635-4561-8d26-3ef6b6e1bcf9"
            },
            "62989008-7025-4ff0-9f84-baecd6d71a6a": {
              "id": "62989008-7025-4ff0-9f84-baecd6d71a6a",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd",
              "toNodeId": "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b"
            },
            "6f233aed-8bf5-4280-a246-e130e6326d78": {
              "id": "6f233aed-8bf5-4280-a246-e130e6326d78",
              "name": "Yes",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "60e7bc8a-229f-4319-8a79-0cf6add2f7ad",
              "toNodeId": "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd"
            },
            "741d5e2a-1618-484f-8c10-7629b89616aa": {
              "id": "741d5e2a-1618-484f-8c10-7629b89616aa",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "283d0211-013a-4a62-9850-82f325a51126",
              "toNodeId": "70479be1-a5f3-47ef-8423-f30ad35b9785"
            },
            "a0135124-362c-40a6-9d13-2c9436ed45f2": {
              "id": "a0135124-362c-40a6-9d13-2c9436ed45f2",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "f5e3ff95-055a-4174-a86e-c02dfc0e73de",
              "toNodeId": "60e7bc8a-229f-4319-8a79-0cf6add2f7ad"
            },
            "bdf2f5a2-72a7-4241-bf54-9514d16462ad": {
              "id": "bdf2f5a2-72a7-4241-bf54-9514d16462ad",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "70479be1-a5f3-47ef-8423-f30ad35b9785",
              "toNodeId": "f5e3ff95-055a-4174-a86e-c02dfc0e73de"
            },
            "db36a6ac-f395-4cd6-917c-318123c21c2a": {
              "id": "db36a6ac-f395-4cd6-917c-318123c21c2a",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "d13691c5-9f68-4d92-a958-e3931dd704ad",
              "toNodeId": ""
            },
            "e7a2e4a6-38fa-417a-ad48-eb26c71cf593": {
              "id": "e7a2e4a6-38fa-417a-ad48-eb26c71cf593",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "82e839af-e635-4561-8d26-3ef6b6e1bcf9",
              "toNodeId": ""
            },
            "f9de74f7-2102-4e93-863e-67c3733dbf9f": {
              "id": "f9de74f7-2102-4e93-863e-67c3733dbf9f",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "69170604-abd4-4b55-bcab-b67796400a22",
              "toNodeId": "d13691c5-9f68-4d92-a958-e3931dd704ad"
            },
            "fe50ca21-c460-4bad-bebc-33eaf184eb86": {
              "id": "fe50ca21-c460-4bad-bebc-33eaf184eb86",
              "name": "No",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b",
              "toNodeId": "0766b90c-dddd-4984-8384-443f61972686"
            }
          },
          "nodes": {
            "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b": {
              "id": "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b",
              "parentNodeId": ""
            },
            "0766b90c-dddd-4984-8384-443f61972686": {
              "id": "0766b90c-dddd-4984-8384-443f61972686",
              "parentNodeId": ""
            },
            "283d0211-013a-4a62-9850-82f325a51126": {
              "id": "283d0211-013a-4a62-9850-82f325a51126",
              "parentNodeId": ""
            },
            "3972572a-1884-4f97-818a-3b96e8edc1d2": {
              "id": "3972572a-1884-4f97-818a-3b96e8edc1d2",
              "parentNodeId": ""
            },
            "60e7bc8a-229f-4319-8a79-0cf6add2f7ad": {
              "id": "60e7bc8a-229f-4319-8a79-0cf6add2f7ad",
              "parentNodeId": ""
            },
            "69170604-abd4-4b55-bcab-b67796400a22": {
              "id": "69170604-abd4-4b55-bcab-b67796400a22",
              "parentNodeId": ""
            },
            "70479be1-a5f3-47ef-8423-f30ad35b9785": {
              "id": "70479be1-a5f3-47ef-8423-f30ad35b9785",
              "parentNodeId": ""
            },
            "82e839af-e635-4561-8d26-3ef6b6e1bcf9": {
              "id": "82e839af-e635-4561-8d26-3ef6b6e1bcf9",
              "parentNodeId": ""
            },
            "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd": {
              "id": "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd",
              "parentNodeId": ""
            },
            "d13691c5-9f68-4d92-a958-e3931dd704ad": {
              "id": "d13691c5-9f68-4d92-a958-e3931dd704ad",
              "parentNodeId": ""
            },
            "e123c0cc-e0fa-458f-bb71-843818e2bddb": {
              "id": "e123c0cc-e0fa-458f-bb71-843818e2bddb",
              "parentNodeId": ""
            },
            "f5e3ff95-055a-4174-a86e-c02dfc0e73de": {
              "id": "f5e3ff95-055a-4174-a86e-c02dfc0e73de",
              "parentNodeId": ""
            }
          }
        },
        "steps": {
          "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b": {
            "nodeId": "03f41dd9-68fc-42fc-b8ba-e1fbadeb0c3b",
            "name": "Check Success",
            "type": "automated_decision",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "defaultEdgeId": "516fff67-fbee-4171-ad3e-406b6838cf1a",
              "stepControlParams": [
                {
                  "edgeId": "516fff67-fbee-4171-ad3e-406b6838cf1a",
                  "expression": {},
                  "expressionText": ""
                },
                {
                  "edgeId": "fe50ca21-c460-4bad-bebc-33eaf184eb86",
                  "expression": {
                    "left": {
                      "name": "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd.$success",
                      "type": "variable"
                    },
                    "op": "=",
                    "right": {
                      "type": "literal",
                      "value": false
                    },
                    "type": "binary"
                  },
                  "expressionText": "{{[b3a284d6-83d5-49dc-9d68-8c5c06ea17cd].[$success]}} = false"
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/automated-decision.svg",
            "connectionType": "NONE"
          },
          "0766b90c-dddd-4984-8384-443f61972686": {
            "nodeId": "0766b90c-dddd-4984-8384-443f61972686",
            "name": "Failure Results",
            "type": "artifact",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "content": "The action failed for *{{[f5e3ff95-055a-4174-a86e-c02dfc0e73de].[term]}}*.\n\nThe most likely causes are that your connection credentials are not correct, unauthorized, or that you entered a query term that was not enabled in PhishEye. Check the Search PhishEye step's log for a list of allowed query terms {{[$job].[URL]}}.\n\n"
              },
              "type": "markdown"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/artifact.svg",
            "connectionType": "NONE"
          },
          "283d0211-013a-4a62-9850-82f325a51126": {
            "nodeId": "283d0211-013a-4a62-9850-82f325a51126",
            "name": "Command Received",
            "description": "Trigger workflow from one of the following commands in Slack:\n!check-domains\ncheck-domains\n",
            "type": "trigger",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "matchChannel": "change_me",
                "matchText": "check-phisheye",
                "type": "any"
              }
            },
            "triggerId": "e6ab9139-0ba7-4374-9395-d43755deede4",
            "defaultInputJSONSchema": {
              "properties": {
                "matchChannel": {
                  "description": "Regex to match for channel name",
                  "order": 1,
                  "title": "Match Channel",
                  "type": "string"
                },
                "matchText": {
                  "description": "Regex to match for Slack message content",
                  "order": 2,
                  "title": "Match Text",
                  "type": "string"
                },
                "type": {
                  "default": "any",
                  "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
                  "enum": [
                    "any",
                    "direct",
                    "group"
                  ],
                  "order": 3,
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "hashes": {
                  "properties": {
                    "md5_hashes": {
                      "description": "MD5 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "MD5 Hashes",
                      "type": "array"
                    },
                    "sha1_hashes": {
                      "description": "SHA1 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "SHA1 Hashes",
                      "type": "array"
                    },
                    "sha256_hashes": {
                      "description": "SHA256 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 3,
                      "title": "SHA256 Hashes",
                      "type": "array"
                    }
                  },
                  "title": "Hashes",
                  "type": "object"
                },
                "indicators": {
                  "properties": {
                    "domains": {
                      "description": "Domains found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "Domains",
                      "type": "array"
                    },
                    "email_addresses": {
                      "description": "Email addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 4,
                      "title": "Email Addresses",
                      "type": "array"
                    },
                    "hashes": {
                      "$ref": "#/definitions/hashes",
                      "description": "Hashes found within the message",
                      "order": 5,
                      "title": "Hashes"
                    },
                    "ip_addresses": {
                      "$ref": "#/definitions/ip_addresses",
                      "description": "IP addresses found within the message",
                      "order": 7,
                      "title": "IP Addresses"
                    },
                    "mac_addresses": {
                      "description": "MAC addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 6,
                      "title": "MAC Addresses",
                      "type": "array"
                    },
                    "parent_domains": {
                      "description": "Parent domains found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "Parent Domains",
                      "type": "array"
                    },
                    "urls": {
                      "description": "URLs found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 3,
                      "title": "URLs",
                      "type": "array"
                    }
                  },
                  "title": "Indicators",
                  "type": "object"
                },
                "ip_addresses": {
                  "properties": {
                    "ipv4_addresses": {
                      "description": "IPv4 addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "IPv4 Addresses",
                      "type": "array"
                    },
                    "ipv6_addresses": {
                      "description": "IPv6 addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "IPv6 Addresses",
                      "type": "array"
                    }
                  },
                  "title": "IP Addresses",
                  "type": "object"
                },
                "message": {
                  "properties": {
                    "channel": {
                      "description": "Channel name",
                      "order": 3,
                      "title": "Channel",
                      "type": "string"
                    },
                    "channel_id": {
                      "description": "Slack channel ID",
                      "order": 4,
                      "title": "Channel ID",
                      "type": "string"
                    },
                    "first_word": {
                      "description": "First word of the message, for example a chat command (ignoring mentions)",
                      "order": 5,
                      "title": "First Word",
                      "type": "string"
                    },
                    "indicators": {
                      "$ref": "#/definitions/indicators",
                      "description": "Potential threat indicators found within the message",
                      "order": 7,
                      "title": "Indicators"
                    },
                    "text": {
                      "description": "Text",
                      "order": 5,
                      "title": "Text",
                      "type": "string"
                    },
                    "ts": {
                      "description": "Timestamp",
                      "order": 6,
                      "title": "Ts",
                      "type": "string"
                    },
                    "user": {
                      "description": "User name",
                      "order": 1,
                      "title": "User",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Slack User ID",
                      "order": 2,
                      "title": "User ID",
                      "type": "string"
                    },
                    "words": {
                      "description": "The message split by spaces into a list of words. This list makes finding and using parameters in chat commands easier",
                      "items": {
                        "type": "string"
                      },
                      "order": 6,
                      "title": "Words",
                      "type": "array"
                    }
                  },
                  "title": "Message",
                  "type": "object"
                }
              },
              "properties": {
                "display_name": {
                  "description": "User display name",
                  "order": 4,
                  "title": "Display Name",
                  "type": "string"
                },
                "message": {
                  "$ref": "#/definitions/message",
                  "description": "Message",
                  "order": 1,
                  "title": "Message"
                },
                "timestamp": {
                  "description": "Timestamp",
                  "order": 3,
                  "title": "Timestamp",
                  "type": "string"
                },
                "type": {
                  "description": "Message Type",
                  "order": 2,
                  "title": "Type",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/chatops.svg",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "message"
          },
          "3972572a-1884-4f97-818a-3b96e8edc1d2": {
            "nodeId": "3972572a-1884-4f97-818a-3b96e8edc1d2",
            "name": "Post Failure Message",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": ":exclamation: *Workflow failed*\n\n{{[0766b90c-dddd-4984-8384-443f61972686].[content]}}",
                "recipient": "{{[283d0211-013a-4a62-9850-82f325a51126].[message].[channel]}}",
                "thread_ts": "{{[283d0211-013a-4a62-9850-82f325a51126].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "60e7bc8a-229f-4319-8a79-0cf6add2f7ad": {
            "nodeId": "60e7bc8a-229f-4319-8a79-0cf6add2f7ad",
            "name": "Command Found",
            "type": "automated_decision",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "defaultEdgeId": "6f233aed-8bf5-4280-a246-e130e6326d78",
              "stepControlParams": [
                {
                  "edgeId": "6f233aed-8bf5-4280-a246-e130e6326d78",
                  "expression": {},
                  "expressionText": ""
                },
                {
                  "edgeId": "2b90f926-9f3e-4b66-bb82-f56ef43423eb",
                  "expression": {
                    "left": {
                      "name": "f5e3ff95-055a-4174-a86e-c02dfc0e73de.$matched",
                      "type": "variable"
                    },
                    "op": "=",
                    "right": {
                      "type": "literal",
                      "value": false
                    },
                    "type": "binary"
                  },
                  "expressionText": "{{[f5e3ff95-055a-4174-a86e-c02dfc0e73de].[$matched]}} = false"
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/automated-decision.svg",
            "connectionType": "NONE"
          },
          "69170604-abd4-4b55-bcab-b67796400a22": {
            "nodeId": "69170604-abd4-4b55-bcab-b67796400a22",
            "name": "Success Results",
            "type": "artifact",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "content": "Search term was {{[b3a284d6-83d5-49dc-9d68-8c5c06ea17cd].[term]}} and PhishEye data is from {{[b3a284d6-83d5-49dc-9d68-8c5c06ea17cd].[date]}} and the following related domains were found:\n\n{{#each [b3a284d6-83d5-49dc-9d68-8c5c06ea17cd].[domains]}}\n:exclamation: Match Found :exclamation:\n{{#each .}}\n*{{@key}}*: {{.}}\n{{/each}}\n{{/each}}"
              },
              "type": "markdown"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/artifact.svg",
            "connectionType": "NONE"
          },
          "70479be1-a5f3-47ef-8423-f30ad35b9785": {
            "nodeId": "70479be1-a5f3-47ef-8423-f30ad35b9785",
            "name": "Post Request Received",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "Request received! Running PhishEye workflow...",
                "recipient": "{{[283d0211-013a-4a62-9850-82f325a51126].[message].[channel]}}",
                "thread_ts": "{{[283d0211-013a-4a62-9850-82f325a51126].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "82e839af-e635-4561-8d26-3ef6b6e1bcf9": {
            "nodeId": "82e839af-e635-4561-8d26-3ef6b6e1bcf9",
            "name": "Post Usage Message",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": ":book: *Usage* :book:\n\n{{[e123c0cc-e0fa-458f-bb71-843818e2bddb].[content]}}",
                "recipient": "{{[283d0211-013a-4a62-9850-82f325a51126].[message].[channel]}}",
                "thread_ts": "{{[283d0211-013a-4a62-9850-82f325a51126].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd": {
            "nodeId": "b3a284d6-83d5-49dc-9d68-8c5c06ea17cd",
            "name": "Search PhishEye",
            "type": "action",
            "plugin": {
              "name": "DomainTools PhishEye",
              "slugVendor": "rapid7",
              "slugName": "domaintools_phisheye",
              "slugVersion": "1.0.0",
              "imageData": "https://eu.cdn-assets.connect.insight.rapid7.com/icons/rapid7/domaintools_phisheye/1.0.0/icon.png"
            },
            "identifier": "domain_list",
            "continueOnFailure": true,
            "isDisabled": false,
            "isCloud": false,
            "parameters": {
              "input": {
                "days_back": 1,
                "query": "{{[f5e3ff95-055a-4174-a86e-c02dfc0e73de].[term]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "days_back": {
                  "description": "Use this parameter in exceptional circumstances where you need to find domains up to seven days prior to the current date. Set the value to an integer in the range of 1-7",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "order": 2,
                  "title": "Days Back",
                  "type": "integer"
                },
                "query": {
                  "description": "Term for which the day's domains are desired",
                  "order": 1,
                  "title": "Query",
                  "type": "string"
                }
              },
              "required": [
                "query"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "domains": {
                  "properties": {
                    "created_date": {
                      "description": "Date when domain created",
                      "order": 3,
                      "title": "Created Date",
                      "type": "string"
                    },
                    "domain": {
                      "description": "Links to WHOIS page for the domain",
                      "order": 1,
                      "title": "Domain",
                      "type": "string"
                    },
                    "ip_addresses": {
                      "description": "IPv4 addresses",
                      "items": {
                        "$ref": "#/definitions/ip_addresses"
                      },
                      "order": 5,
                      "title": "IP Addresses",
                      "type": "array"
                    },
                    "name_servers": {
                      "description": "Name servers used by domain",
                      "items": {
                        "type": "string"
                      },
                      "order": 6,
                      "title": "Name Servers",
                      "type": "array"
                    },
                    "registrant_email": {
                      "description": "Email used for register",
                      "order": 4,
                      "title": "Registrant Email",
                      "type": "string"
                    },
                    "registrar_name": {
                      "description": "Registrar name where domain was registered",
                      "order": 7,
                      "title": "Registrar Name",
                      "type": "string"
                    },
                    "risk_score": {
                      "description": "Calculated by the Domain Risk Score",
                      "order": 8,
                      "title": "Risk Score",
                      "type": "integer"
                    },
                    "tld": {
                      "description": "TLD domain",
                      "order": 2,
                      "title": "TLD",
                      "type": "string"
                    }
                  },
                  "required": [
                    "domain",
                    "tld"
                  ],
                  "title": "Domains",
                  "type": "object"
                },
                "ip_addresses": {
                  "properties": {
                    "country_code": {
                      "description": "Country code",
                      "order": 2,
                      "title": "Country Code",
                      "type": "string"
                    },
                    "ip": {
                      "description": "IPv4 address",
                      "order": 1,
                      "title": "IPv4",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ip",
                    "country_code"
                  ],
                  "title": "Ip Addresses",
                  "type": "object"
                }
              },
              "properties": {
                "date": {
                  "description": "Date when query run",
                  "order": 2,
                  "title": "Date",
                  "type": "string"
                },
                "domains": {
                  "description": "Domains for query",
                  "items": {
                    "$ref": "#/definitions/domains"
                  },
                  "order": 3,
                  "title": "Domains",
                  "type": "array"
                },
                "term": {
                  "description": "Query term",
                  "order": 1,
                  "title": "Term",
                  "type": "string"
                }
              },
              "required": [
                "term",
                "domains"
              ],
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "CONNECTION"
          },
          "d13691c5-9f68-4d92-a958-e3931dd704ad": {
            "nodeId": "d13691c5-9f68-4d92-a958-e3931dd704ad",
            "name": "Post Success Message",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": ":white_check_mark: *Workflow complete*\n\n{{[69170604-abd4-4b55-bcab-b67796400a22].[content]}}\n\n\n\n\n\n\n",
                "recipient": "{{[283d0211-013a-4a62-9850-82f325a51126].[message].[channel]}}",
                "thread_ts": "{{[70479be1-a5f3-47ef-8423-f30ad35b9785].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "e123c0cc-e0fa-458f-bb71-843818e2bddb": {
            "nodeId": "e123c0cc-e0fa-458f-bb71-843818e2bddb",
            "name": "Usage",
            "type": "artifact",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "content": "This workflow will list the domains for a PhishEye search term. To use this workflow, provide the command with an enabled search term such as your company name.\n\nFor example:\n\n`@Rapid7 InsightConnect !check-phisheye example`"
              },
              "type": "markdown"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/artifact.svg",
            "connectionType": "NONE"
          },
          "f5e3ff95-055a-4174-a86e-c02dfc0e73de": {
            "nodeId": "f5e3ff95-055a-4174-a86e-c02dfc0e73de",
            "name": "Extract Term",
            "type": "pattern_match",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "captureAll": false,
              "expressionText": "<.*> check-phisheye {{term:/.*/}}",
              "expressions": [
                {
                  "type": "text",
                  "value": "<.*> check-phisheye "
                },
                {
                  "type": "variable",
                  "value": {
                    "ident": "term",
                    "regex": ".*"
                  }
                }
              ],
              "ignoreCase": false,
              "input": "{{[283d0211-013a-4a62-9850-82f325a51126].[message].[text]}}"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/pattern-match.svg",
            "connectionType": "NONE"
          }
        },
        "tags": [
          "Domaintools",
          "Slack",
          "Threat Intelligence"
        ],
        "humanCostSeconds": 0,
        "humanCostDisplayUnit": "",
        "parameters": {
          "definitionSchema": null
        },
        "summary": ""
      }
    ],
    "triggers": [
      {
        "id": "e6ab9139-0ba7-4374-9395-d43755deede4",
        "name": "Command Received",
        "description": "Trigger workflow from one of the following commands in Slack:\n!check-domains\ncheck-domains\n",
        "input": {
          "matchChannel": "change_me",
          "matchText": "check-phisheye",
          "type": "any"
        },
        "inputJsonSchema": {
          "properties": {
            "matchChannel": {
              "description": "Regex to match for channel name",
              "order": 1,
              "title": "Match Channel",
              "type": "string"
            },
            "matchText": {
              "description": "Regex to match for Slack message content",
              "order": 2,
              "title": "Match Text",
              "type": "string"
            },
            "type": {
              "default": "any",
              "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
              "enum": [
                "any",
                "direct",
                "group"
              ],
              "order": 3,
              "title": "Type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Variables",
          "type": "object"
        },
        "outputJsonSchema": {
          "definitions": {
            "hashes": {
              "properties": {
                "md5_hashes": {
                  "description": "MD5 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "MD5 Hashes",
                  "type": "array"
                },
                "sha1_hashes": {
                  "description": "SHA1 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "SHA1 Hashes",
                  "type": "array"
                },
                "sha256_hashes": {
                  "description": "SHA256 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 3,
                  "title": "SHA256 Hashes",
                  "type": "array"
                }
              },
              "title": "Hashes",
              "type": "object"
            },
            "indicators": {
              "properties": {
                "domains": {
                  "description": "Domains found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "Domains",
                  "type": "array"
                },
                "email_addresses": {
                  "description": "Email addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 4,
                  "title": "Email Addresses",
                  "type": "array"
                },
                "hashes": {
                  "$ref": "#/definitions/hashes",
                  "description": "Hashes found within the message",
                  "order": 5,
                  "title": "Hashes"
                },
                "ip_addresses": {
                  "$ref": "#/definitions/ip_addresses",
                  "description": "IP addresses found within the message",
                  "order": 7,
                  "title": "IP Addresses"
                },
                "mac_addresses": {
                  "description": "MAC addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 6,
                  "title": "MAC Addresses",
                  "type": "array"
                },
                "parent_domains": {
                  "description": "Parent domains found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "Parent Domains",
                  "type": "array"
                },
                "urls": {
                  "description": "URLs found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 3,
                  "title": "URLs",
                  "type": "array"
                }
              },
              "title": "Indicators",
              "type": "object"
            },
            "ip_addresses": {
              "properties": {
                "ipv4_addresses": {
                  "description": "IPv4 addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "IPv4 Addresses",
                  "type": "array"
                },
                "ipv6_addresses": {
                  "description": "IPv6 addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "IPv6 Addresses",
                  "type": "array"
                }
              },
              "title": "IP Addresses",
              "type": "object"
            },
            "message": {
              "properties": {
                "channel": {
                  "description": "Channel name",
                  "order": 3,
                  "title": "Channel",
                  "type": "string"
                },
                "channel_id": {
                  "description": "Slack channel ID",
                  "order": 4,
                  "title": "Channel ID",
                  "type": "string"
                },
                "first_word": {
                  "description": "First word of the message, for example a chat command (ignoring mentions)",
                  "order": 5,
                  "title": "First Word",
                  "type": "string"
                },
                "indicators": {
                  "$ref": "#/definitions/indicators",
                  "description": "Potential threat indicators found within the message",
                  "order": 7,
                  "title": "Indicators"
                },
                "text": {
                  "description": "Text",
                  "order": 5,
                  "title": "Text",
                  "type": "string"
                },
                "ts": {
                  "description": "Timestamp",
                  "order": 6,
                  "title": "Ts",
                  "type": "string"
                },
                "user": {
                  "description": "User name",
                  "order": 1,
                  "title": "User",
                  "type": "string"
                },
                "user_id": {
                  "description": "Slack User ID",
                  "order": 2,
                  "title": "User ID",
                  "type": "string"
                },
                "words": {
                  "description": "The message split by spaces into a list of words. This list makes finding and using parameters in chat commands easier",
                  "items": {
                    "type": "string"
                  },
                  "order": 6,
                  "title": "Words",
                  "type": "array"
                }
              },
              "title": "Message",
              "type": "object"
            }
          },
          "properties": {
            "display_name": {
              "description": "User display name",
              "order": 4,
              "title": "Display Name",
              "type": "string"
            },
            "message": {
              "$ref": "#/definitions/message",
              "description": "Message",
              "order": 1,
              "title": "Message"
            },
            "timestamp": {
              "description": "Timestamp",
              "order": 3,
              "title": "Timestamp",
              "type": "string"
            },
            "type": {
              "description": "Message Type",
              "order": 2,
              "title": "Type",
              "type": "string"
            }
          },
          "title": "Variables",
          "type": "object"
        },
        "tags": [],
        "type": "trigger_chatops",
        "chatOpsAppName": "slack",
        "chatOpsIdentifier": "message"
      }
    ]
  }
}