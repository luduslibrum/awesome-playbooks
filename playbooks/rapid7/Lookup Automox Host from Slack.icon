{
  "kom": {
    "komandVersion": "1.111.4-0-gb43d1",
    "komFileVersion": "2.0.0",
    "exportedAt": "2022-09-03T12:52:23.97783471Z",
    "workflowVersions": [
      {
        "name": "Lookup Automox Host from Slack",
        "type": "runnable",
        "version": "",
        "description": "# Description\nThis workflow provides fast, convenient access to information about a given host from Automox by fetching device details \nfrom Automox and posting them in a Slack thread. Host information includes hostname, IP addresses, operating system, \nhost status, and patch status details. Lookup can be performed by either hostname or IP address.\n\n# Key Features\n\n* Fetch host information from Automox quickly in Slack\n* Determine when the system last checked in with the Automox platform\n* Quickly identify the number of upcoming patch count along with patch time \n* Positively identify a system by looking up its IP or hostname\n\n# Requirements\n\n* Automox API key\n* InsightConnect license\n* [Slack](https://docs.rapid7.com/insightconnect/configure-slack-for-chatops/)\n\n# Documentation\n\n## Setup\n\nImport the workflow from the Rapid7 Extension Library and proceed through the Import Workflow wizard in InsightConnect. \nImport plugins, create or select connections, and rename the workflow as a part of the Import Workflow wizard as necessary.\n\nThere are two workflow parameters you will need to configure in order to complete setup of your workflow:\n* `Automox Organization ID`: The Automox organization used for performing host lookups\n* `Slack Channel`: The Slack channel name in your environment where the workflow should be triggered\n\n## Usage\n\n*This workflow will only trigger in the channel specified in the Slack workflow steps.*\n\nTo run the workflow, @ your Slackbot in the specific Slack channel along with the command \"lookup-host\" followed by the IP address or hostname.\n\nFor example:\n\n* `@Rapid7 InsightConnect lookup-host hostname1`\n* `@Rapid7 InsightConnect lookup-host 127.0.0.1`\n\nThe workflow will post responses in a thread of the original message.\n\n## Technical Details\n\nPlugins utilized by workflow:\n\n|Plugin|Version|Count|\n|----|----|--------|\n|Automox|1.1.0|2|\n\n## Troubleshooting\n\n_There is no troubleshooting information at this time_\n\n# Version History\n\n* 1.0.0 - Initial workflow\n\n# Links\n\n## References\n\n* [Automox](https://www.automox.com/)\n* [Slack](https://www.slack.com)\n",
        "graph": {
          "edges": {
            "13824fbf-9ea5-4f5e-b325-708d5c3534ea": {
              "id": "13824fbf-9ea5-4f5e-b325-708d5c3534ea",
              "name": "IP Address",
              "description": "Automox managed host will be looked up by IP address",
              "parentNodeId": "",
              "fromNodeId": "4d631ced-bc6c-4069-ae64-db43a1c3ac9d",
              "toNodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e"
            },
            "27b13b43-f2b5-40b1-811a-317ecf1321e6": {
              "id": "27b13b43-f2b5-40b1-811a-317ecf1321e6",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e",
              "toNodeId": "32e3b64e-a706-4b43-8d70-96c8078a80a0"
            },
            "2ac9695c-c435-4eba-88c6-a13e147b2652": {
              "id": "2ac9695c-c435-4eba-88c6-a13e147b2652",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "b8747610-63bb-4d4f-8aae-0a8e167ae7bb",
              "toNodeId": "4d631ced-bc6c-4069-ae64-db43a1c3ac9d"
            },
            "5190a59f-fc52-42ae-98f9-e320bf264898": {
              "id": "5190a59f-fc52-42ae-98f9-e320bf264898",
              "name": "Hostname",
              "description": "Automox managed host will be looked up by hostname",
              "parentNodeId": "",
              "fromNodeId": "4d631ced-bc6c-4069-ae64-db43a1c3ac9d",
              "toNodeId": "e1b85ba6-5360-4148-8f43-eec87128e882"
            },
            "6405ba76-f71f-41ad-8a5f-6f79c66396d5": {
              "id": "6405ba76-f71f-41ad-8a5f-6f79c66396d5",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "baf98401-3b07-4ab0-ae5b-e63ffb3c997b",
              "toNodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4"
            },
            "6862ddd3-4250-4144-9b1b-cada6361745f": {
              "id": "6862ddd3-4250-4144-9b1b-cada6361745f",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "e1b85ba6-5360-4148-8f43-eec87128e882",
              "toNodeId": "32e3b64e-a706-4b43-8d70-96c8078a80a0"
            },
            "746a4f42-27a0-4cdd-91f6-9ad469188965": {
              "id": "746a4f42-27a0-4cdd-91f6-9ad469188965",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
              "toNodeId": "baf98401-3b07-4ab0-ae5b-e63ffb3c997b"
            },
            "75371ed3-766e-4e87-81ac-276d5c755898": {
              "id": "75371ed3-766e-4e87-81ac-276d5c755898",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "32e3b64e-a706-4b43-8d70-96c8078a80a0",
              "toNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1"
            },
            "78ee22cd-6b02-4443-a369-b1e6ce2d087d": {
              "id": "78ee22cd-6b02-4443-a369-b1e6ce2d087d",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
              "toNodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028"
            },
            "79c7a1d6-04a6-4469-80b8-9ca0482ee533": {
              "id": "79c7a1d6-04a6-4469-80b8-9ca0482ee533",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028",
              "toNodeId": "b8747610-63bb-4d4f-8aae-0a8e167ae7bb"
            },
            "8e507bb4-57db-487a-9f5b-c4bba87bb8f1": {
              "id": "8e507bb4-57db-487a-9f5b-c4bba87bb8f1",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
              "toNodeId": ""
            },
            "9fd9b028-abfa-49cb-ba52-e673ff26217a": {
              "id": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
              "name": "Host Not Found",
              "description": "Host was not found in Automox",
              "parentNodeId": "",
              "fromNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "toNodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434"
            },
            "c20b633e-f9ed-4a8b-9f11-83e37e42364c": {
              "id": "c20b633e-f9ed-4a8b-9f11-83e37e42364c",
              "name": "Host Found",
              "description": "Host was found in Automox",
              "parentNodeId": "",
              "fromNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "toNodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036"
            },
            "d11bdcc2-53a6-412f-b657-9b28c2dbf810": {
              "id": "d11bdcc2-53a6-412f-b657-9b28c2dbf810",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434",
              "toNodeId": "baf98401-3b07-4ab0-ae5b-e63ffb3c997b"
            }
          },
          "nodes": {
            "083c5e17-52fc-49f3-a5e4-a8288f944434": {
              "id": "083c5e17-52fc-49f3-a5e4-a8288f944434",
              "parentNodeId": ""
            },
            "1a20436a-d71c-4732-8b36-0dc6ad7012b4": {
              "id": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
              "parentNodeId": ""
            },
            "32e3b64e-a706-4b43-8d70-96c8078a80a0": {
              "id": "32e3b64e-a706-4b43-8d70-96c8078a80a0",
              "parentNodeId": ""
            },
            "4d631ced-bc6c-4069-ae64-db43a1c3ac9d": {
              "id": "4d631ced-bc6c-4069-ae64-db43a1c3ac9d",
              "parentNodeId": ""
            },
            "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99": {
              "id": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
              "parentNodeId": ""
            },
            "931acedc-cff6-4f18-b348-3ff465c997c1": {
              "id": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "parentNodeId": ""
            },
            "aa8aef01-53a9-436c-9bca-d6a25121c028": {
              "id": "aa8aef01-53a9-436c-9bca-d6a25121c028",
              "parentNodeId": ""
            },
            "b8747610-63bb-4d4f-8aae-0a8e167ae7bb": {
              "id": "b8747610-63bb-4d4f-8aae-0a8e167ae7bb",
              "parentNodeId": ""
            },
            "baf98401-3b07-4ab0-ae5b-e63ffb3c997b": {
              "id": "baf98401-3b07-4ab0-ae5b-e63ffb3c997b",
              "parentNodeId": ""
            },
            "c1c59f37-375c-4dc4-a6eb-9c8190061036": {
              "id": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
              "parentNodeId": ""
            },
            "d79b7dd3-bc74-4649-8e24-67680740b43e": {
              "id": "d79b7dd3-bc74-4649-8e24-67680740b43e",
              "parentNodeId": ""
            },
            "e1b85ba6-5360-4148-8f43-eec87128e882": {
              "id": "e1b85ba6-5360-4148-8f43-eec87128e882",
              "parentNodeId": ""
            }
          }
        },
        "steps": {
          "083c5e17-52fc-49f3-a5e4-a8288f944434": {
            "nodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434",
            "name": "Host Not Found Message",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "No results matching `{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}` were found in Automox.\nhttps://media.giphy.com/media/3osxYC89Dw8RHY19OE/giphy.gif\n\nView your workflow job <{{[$job].[URL]}}|here>.",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[ts]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "1a20436a-d71c-4732-8b36-0dc6ad7012b4": {
            "nodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
            "name": "Final Report",
            "type": "artifact",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "content": "# Trigger\n_{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[user]}}_ started Lookup Automox Host from Slack workflow with the search term _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}_ in the _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel]}}_ channel.\n\n# Search Results\n{{#if [32e3b64e-a706-4b43-8d70-96c8078a80a0].[success]}}\n_{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}_ was successfully found in Automox.\nDevice ID: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[id]}}\nHostname: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[name]}}\nLast Refresh Time: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[last_refresh_time]}}\n{{else}}\n_{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}_ was not found in Automox and is not currently managed. To install the agent please reference the Automox Agent Installation instructions: https://support.automox.com/help/automox-agent-installation-overview\n{{/if}}\n\n# Outcome\nPosted results to the _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel]}}_ channel in Slack."
              },
              "type": "markdown"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/artifact.svg",
            "connectionType": "NONE"
          },
          "32e3b64e-a706-4b43-8d70-96c8078a80a0": {
            "nodeId": "32e3b64e-a706-4b43-8d70-96c8078a80a0",
            "name": "Lookup Host",
            "type": "join",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "decisionEdgeIds": [
                "6862ddd3-4250-4144-9b1b-cada6361745f",
                "27b13b43-f2b5-40b1-811a-317ecf1321e6"
              ],
              "variableSets": [
                {
                  "arrayType": null,
                  "inputBuilderSchemas": null,
                  "name": "host",
                  "type": "object",
                  "variables": {
                    "27b13b43-f2b5-40b1-811a-317ecf1321e6": "{{[d79b7dd3-bc74-4649-8e24-67680740b43e].[device]}}",
                    "6862ddd3-4250-4144-9b1b-cada6361745f": "{{[e1b85ba6-5360-4148-8f43-eec87128e882].[device]}}"
                  }
                },
                {
                  "arrayType": null,
                  "inputBuilderSchemas": null,
                  "name": "success",
                  "type": "boolean",
                  "variables": {
                    "27b13b43-f2b5-40b1-811a-317ecf1321e6": "{{[d79b7dd3-bc74-4649-8e24-67680740b43e].[$success]}}",
                    "6862ddd3-4250-4144-9b1b-cada6361745f": "{{[e1b85ba6-5360-4148-8f43-eec87128e882].[$success]}}"
                  }
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": {
              "properties": {
                "host": {
                  "description": "Emitted variable \"host\"",
                  "order": 1,
                  "title": "host",
                  "type": "object"
                },
                "success": {
                  "description": "Emitted variable \"success\"",
                  "order": 2,
                  "title": "success",
                  "type": "boolean"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": {
              "properties": {
                "host": {
                  "description": "Emitted variable \"host\"",
                  "order": 1,
                  "title": "host",
                  "type": "object"
                },
                "success": {
                  "description": "Emitted variable \"success\"",
                  "order": 2,
                  "title": "success",
                  "type": "boolean"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "defaultImageData": "",
            "connectionType": "NONE"
          },
          "4d631ced-bc6c-4069-ae64-db43a1c3ac9d": {
            "nodeId": "4d631ced-bc6c-4069-ae64-db43a1c3ac9d",
            "name": "If IP Address",
            "type": "automated_decision",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "defaultEdgeId": "5190a59f-fc52-42ae-98f9-e320bf264898",
              "stepControlParams": [
                {
                  "edgeId": "13824fbf-9ea5-4f5e-b325-708d5c3534ea",
                  "expression": {
                    "name": "b8747610-63bb-4d4f-8aae-0a8e167ae7bb.$matched",
                    "type": "variable"
                  },
                  "expressionText": "{{[b8747610-63bb-4d4f-8aae-0a8e167ae7bb].[$matched]}}"
                },
                {
                  "edgeId": "5190a59f-fc52-42ae-98f9-e320bf264898",
                  "expression": {},
                  "expressionText": ""
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/automated-decision.svg",
            "connectionType": "NONE"
          },
          "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99": {
            "nodeId": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
            "name": "lookup-host Trigger",
            "description": "Trigger this workflow by entering a Slack command in the following format:\n\"@Rapid7 InsightConnect lookup-host workstation123\"\nOR\n\"@Rapid7 InsightConnect lookup-host 192.168.1.2\"",
            "type": "trigger",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "matchChannel": "{{$workflow.[Slack Channel]}}",
                "matchText": "(?i)lookup-host",
                "type": "any"
              }
            },
            "triggerId": "c3358d06-1ae6-4bb4-83ed-b5ab9045119f",
            "defaultInputJSONSchema": {
              "properties": {
                "matchChannel": {
                  "description": "Regex to match for channel name",
                  "order": 1,
                  "title": "Match Channel",
                  "type": "string"
                },
                "matchText": {
                  "description": "Regex to match for Slack message content",
                  "order": 2,
                  "title": "Match Text",
                  "type": "string"
                },
                "type": {
                  "default": "any",
                  "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
                  "enum": [
                    "any",
                    "direct",
                    "group"
                  ],
                  "order": 3,
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "hashes": {
                  "properties": {
                    "md5_hashes": {
                      "description": "MD5 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "MD5 Hashes",
                      "type": "array"
                    },
                    "sha1_hashes": {
                      "description": "SHA1 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "SHA1 Hashes",
                      "type": "array"
                    },
                    "sha256_hashes": {
                      "description": "SHA256 hashes found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 3,
                      "title": "SHA256 Hashes",
                      "type": "array"
                    }
                  },
                  "title": "Hashes",
                  "type": "object"
                },
                "indicators": {
                  "properties": {
                    "domains": {
                      "description": "Domains found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "Domains",
                      "type": "array"
                    },
                    "email_addresses": {
                      "description": "Email addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 4,
                      "title": "Email Addresses",
                      "type": "array"
                    },
                    "hashes": {
                      "$ref": "#/definitions/hashes",
                      "description": "Hashes found within the message",
                      "order": 5,
                      "title": "Hashes"
                    },
                    "ip_addresses": {
                      "$ref": "#/definitions/ip_addresses",
                      "description": "IP addresses found within the message",
                      "order": 7,
                      "title": "IP Addresses"
                    },
                    "mac_addresses": {
                      "description": "MAC addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 6,
                      "title": "MAC Addresses",
                      "type": "array"
                    },
                    "parent_domains": {
                      "description": "Parent domains found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "Parent Domains",
                      "type": "array"
                    },
                    "urls": {
                      "description": "URLs found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 3,
                      "title": "URLs",
                      "type": "array"
                    }
                  },
                  "title": "Indicators",
                  "type": "object"
                },
                "ip_addresses": {
                  "properties": {
                    "ipv4_addresses": {
                      "description": "IPv4 addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 1,
                      "title": "IPv4 Addresses",
                      "type": "array"
                    },
                    "ipv6_addresses": {
                      "description": "IPv6 addresses found within the message",
                      "items": {
                        "type": "string"
                      },
                      "order": 2,
                      "title": "IPv6 Addresses",
                      "type": "array"
                    }
                  },
                  "title": "IP Addresses",
                  "type": "object"
                },
                "message": {
                  "properties": {
                    "channel": {
                      "description": "Channel name",
                      "order": 3,
                      "title": "Channel",
                      "type": "string"
                    },
                    "channel_id": {
                      "description": "Slack channel ID",
                      "order": 4,
                      "title": "Channel ID",
                      "type": "string"
                    },
                    "first_word": {
                      "description": "First word of the message, for example a chat command (ignoring mentions)",
                      "order": 5,
                      "title": "First Word",
                      "type": "string"
                    },
                    "indicators": {
                      "$ref": "#/definitions/indicators",
                      "description": "Potential threat indicators found within the message",
                      "order": 7,
                      "title": "Indicators"
                    },
                    "text": {
                      "description": "Text",
                      "order": 5,
                      "title": "Text",
                      "type": "string"
                    },
                    "ts": {
                      "description": "Timestamp",
                      "order": 6,
                      "title": "Ts",
                      "type": "string"
                    },
                    "user": {
                      "description": "User name",
                      "order": 1,
                      "title": "User",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Slack User ID",
                      "order": 2,
                      "title": "User ID",
                      "type": "string"
                    },
                    "words": {
                      "description": "The message split by spaces into a list of words. This list makes finding and using parameters in chat commands easier",
                      "items": {
                        "type": "string"
                      },
                      "order": 6,
                      "title": "Words",
                      "type": "array"
                    }
                  },
                  "title": "Message",
                  "type": "object"
                }
              },
              "properties": {
                "display_name": {
                  "description": "User display name",
                  "order": 4,
                  "title": "Display Name",
                  "type": "string"
                },
                "message": {
                  "$ref": "#/definitions/message",
                  "description": "Message",
                  "order": 1,
                  "title": "Message"
                },
                "timestamp": {
                  "description": "Timestamp",
                  "order": 3,
                  "title": "Timestamp",
                  "type": "string"
                },
                "type": {
                  "description": "Message Type",
                  "order": 2,
                  "title": "Type",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/chatops.svg",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "message"
          },
          "931acedc-cff6-4f18-b348-3ff465c997c1": {
            "nodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
            "name": "Host Found?",
            "type": "automated_decision",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "defaultEdgeId": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
              "stepControlParams": [
                {
                  "edgeId": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
                  "expression": {},
                  "expressionText": ""
                },
                {
                  "edgeId": "c20b633e-f9ed-4a8b-9f11-83e37e42364c",
                  "expression": {
                    "left": {
                      "name": "32e3b64e-a706-4b43-8d70-96c8078a80a0.success",
                      "type": "variable"
                    },
                    "op": "=",
                    "right": {
                      "type": "literal",
                      "value": true
                    },
                    "type": "binary"
                  },
                  "expressionText": "{{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[success]}} = true"
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/automated-decision.svg",
            "connectionType": "NONE"
          },
          "aa8aef01-53a9-436c-9bca-d6a25121c028": {
            "nodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028",
            "name": "Searching Notification",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "_Searching for `{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}` in Automox..._",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[ts]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "b8747610-63bb-4d4f-8aae-0a8e167ae7bb": {
            "nodeId": "b8747610-63bb-4d4f-8aae-0a8e167ae7bb",
            "name": "Match IP Address",
            "type": "pattern_match",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "captureAll": true,
              "expressionText": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
              "expressions": [
                {
                  "type": "text",
                  "value": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
                }
              ],
              "ignoreCase": true,
              "input": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://eu.cdn-assets.connect.insight.rapid7.com/step-type-icons/pattern-match.svg",
            "connectionType": "NONE"
          },
          "baf98401-3b07-4ab0-ae5b-e63ffb3c997b": {
            "nodeId": "baf98401-3b07-4ab0-ae5b-e63ffb3c997b",
            "name": "Result Sent",
            "type": "join",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "decisionEdgeIds": [
                "d11bdcc2-53a6-412f-b657-9b28c2dbf810",
                "746a4f42-27a0-4cdd-91f6-9ad469188965"
              ],
              "variableSets": []
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": {
              "properties": {},
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": {
              "properties": {},
              "title": "Variables",
              "type": "object"
            },
            "defaultImageData": "",
            "connectionType": "NONE"
          },
          "c1c59f37-375c-4dc4-a6eb-9c8190061036": {
            "nodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
            "name": "Post Host Details to Slack",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": ":computer: *Host Info*\nHostname: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[name]}}\nIP Addresses:\n{{#each [32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[ip_addrs]}}\n* {{this}}\n{{/each}}\nOperating System: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[os_family]}} {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[os_name]}}\n\n:mag:*Host Status*\nAgent Status: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[status].[agent_status]}}\nPolicy Status: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[status].[policy_status]}}\nLast Refresh Time: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[last_refresh_time]}}\n\n:adhesive_bandage:*Patch Details*\nNumber of Pending Patches: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[pending_patches]}}\nNext Patch Time: {{[32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[next_patch_time]}}\nAssigned Policies:\n{{#each [32e3b64e-a706-4b43-8d70-96c8078a80a0].[host].[policy_status]}}\n* {{this.[policy_name]}} [{{this.[policy_type_name]}}]\n{{/each}}\n\nView your workflow job <{{[$job].[URL]}}|here>.",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see Help for documentation",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "parent_message_timestamp": {
                  "description": "The timestamp of the parent message or of the current message if there is no parent. Used to post messages to a thread.",
                  "order": 3,
                  "title": "Parent Message Timestamp",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "d79b7dd3-bc74-4649-8e24-67680740b43e": {
            "nodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e",
            "name": "Lookup Host by IP Address",
            "type": "action",
            "plugin": {
              "name": "Automox",
              "slugVendor": "automox",
              "slugName": "automox",
              "slugVersion": "1.1.0",
              "imageData": "https://eu.cdn-assets.connect.insight.rapid7.com/icons/automox/automox/1.1.0/icon.png"
            },
            "identifier": "get_device_by_ip",
            "continueOnFailure": true,
            "isDisabled": false,
            "isCloud": false,
            "parameters": {
              "input": {
                "ip_address": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}",
                "org_id": "{{$workflow.[Automox Organization ID]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "ip_address": {
                  "description": "IP address of device",
                  "order": 2,
                  "title": "IP Address",
                  "type": "string"
                },
                "org_id": {
                  "description": "Identifier of organization to restrict results",
                  "order": 1,
                  "title": "Organization ID",
                  "type": "integer"
                }
              },
              "required": [
                "ip_address"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "device": {
                  "properties": {
                    "agent_version": {
                      "description": "The agent version of a device",
                      "order": 18,
                      "title": "Agent Version",
                      "type": "string"
                    },
                    "compliant": {
                      "description": "Whether a device is compliant",
                      "order": 23,
                      "title": "Compliant",
                      "type": "boolean"
                    },
                    "connected": {
                      "description": "Whether a device is currently connected to the Automox platform",
                      "order": 26,
                      "title": "Connected",
                      "type": "boolean"
                    },
                    "create_time": {
                      "description": "The time a device was created in the Automox platform",
                      "order": 10,
                      "title": "Create Time",
                      "type": "string"
                    },
                    "custom_name": {
                      "description": "The custom name of a device",
                      "order": 19,
                      "title": "Custom Name",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Whether a device is deleted",
                      "order": 9,
                      "title": "Deleted",
                      "type": "boolean"
                    },
                    "details": {
                      "description": "Additional details of a device",
                      "order": 17,
                      "title": "Details",
                      "type": "object"
                    },
                    "display_name": {
                      "description": "The display name of a device",
                      "order": 24,
                      "title": "Display Name",
                      "type": "string"
                    },
                    "id": {
                      "description": "The device ID",
                      "order": 1,
                      "title": "Device ID",
                      "type": "integer"
                    },
                    "ip_addrs": {
                      "description": "List of IP addresses for a device",
                      "items": {
                        "type": "string"
                      },
                      "order": 14,
                      "title": "IP Addresses",
                      "type": "array"
                    },
                    "ip_addrs_private": {
                      "description": "List of private IP addresses for a device",
                      "items": {
                        "type": "string"
                      },
                      "order": 15,
                      "title": "Private IP Addresses",
                      "type": "array"
                    },
                    "is_compatible": {
                      "description": "Whether a device is compatible with the Automox platform",
                      "order": 20,
                      "title": "Is Compatible",
                      "type": "boolean"
                    },
                    "is_delayed_by_notification": {
                      "description": "Whether patching is delayed by a device notificiation",
                      "order": 28,
                      "title": "Is Delayed by Notification",
                      "type": "boolean"
                    },
                    "is_delayed_by_user": {
                      "description": "Whether patching is delayed by a user",
                      "order": 30,
                      "title": "Is Delayed By User",
                      "type": "boolean"
                    },
                    "last_disconnect_time": {
                      "description": "The last time a device disconnected from the Automox platform",
                      "order": 32,
                      "title": "Last Disconnect Time",
                      "type": "string"
                    },
                    "last_logged_in_user": {
                      "description": "The last logged in user of a device",
                      "order": 36,
                      "title": "Last Logged In User",
                      "type": "string"
                    },
                    "last_refresh_time": {
                      "description": "The last time a device was refreshed",
                      "order": 6,
                      "title": "Last Refresh Time",
                      "type": "string"
                    },
                    "last_scan_failed": {
                      "description": "Whether the last scan failed on a device",
                      "order": 21,
                      "title": "Last Scan Failed",
                      "type": "boolean"
                    },
                    "last_update_time": {
                      "description": "The last time a device was updated in the Automox platform",
                      "order": 5,
                      "title": "Last Update Time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The device name",
                      "order": 4,
                      "title": "Device Name",
                      "type": "string"
                    },
                    "needs_attention": {
                      "description": "Whether a device currently needs attention",
                      "order": 33,
                      "title": "Needs Attention",
                      "type": "boolean"
                    },
                    "needs_reboot": {
                      "description": "Whether a device needs rebooted",
                      "order": 7,
                      "title": "Needs Reboot",
                      "type": "boolean"
                    },
                    "next_patch_time": {
                      "description": "The time for the next device patch",
                      "order": 27,
                      "title": "Next Patch Time",
                      "type": "string"
                    },
                    "organization_id": {
                      "description": "The organization identifier of a device",
                      "order": 3,
                      "title": "Organization ID",
                      "type": "integer"
                    },
                    "os_family": {
                      "description": "The operating system family of a device",
                      "order": 13,
                      "title": "Operating System Family",
                      "type": "string"
                    },
                    "os_name": {
                      "description": "The name of the operating system of a device",
                      "order": 12,
                      "title": "Operating System",
                      "type": "string"
                    },
                    "os_version": {
                      "description": "The operating system version of a device",
                      "order": 11,
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "patches": {
                      "description": "The number of patches currently identified for a device",
                      "order": 16,
                      "title": "Patches",
                      "type": "integer"
                    },
                    "pending": {
                      "description": "Whether work is pending on a device",
                      "order": 22,
                      "title": "Pending",
                      "type": "boolean"
                    },
                    "pending_patches": {
                      "description": "The number of pending patches for a device",
                      "order": 25,
                      "title": "Pending Patches",
                      "type": "integer"
                    },
                    "reboot_is_delayed_by_notification": {
                      "description": "Whether rebooting is delayed by a device notification",
                      "order": 29,
                      "title": "Reboot Is Delayed By Notification",
                      "type": "boolean"
                    },
                    "reboot_is_delayed_by_user": {
                      "description": "Whether rebooting is delayed by a user",
                      "order": 31,
                      "title": "Reboot Is Delayed By User",
                      "type": "boolean"
                    },
                    "serial_number": {
                      "description": "The serial number of a device",
                      "order": 34,
                      "title": "Serial Number",
                      "type": "string"
                    },
                    "server_group_id": {
                      "description": "The server group identifier of a device",
                      "order": 2,
                      "title": "Server Group ID",
                      "type": "integer"
                    },
                    "status": {
                      "$ref": "#/definitions/device_status_details",
                      "description": "The device status details",
                      "order": 35,
                      "title": "Status"
                    },
                    "tags": {
                      "description": "List of tags",
                      "items": {
                        "type": "string"
                      },
                      "order": 8,
                      "title": "Tags",
                      "type": "array"
                    }
                  },
                  "required": [
                    "id",
                    "organization_id",
                    "server_group_id",
                    "name"
                  ],
                  "title": "Device",
                  "type": "object"
                },
                "device_policy_status": {
                  "properties": {
                    "compliant": {
                      "description": "Whether a device is compliant to given status",
                      "order": 2,
                      "title": "Compliant",
                      "type": "boolean"
                    },
                    "id": {
                      "description": "The identifier of the policy",
                      "order": 1,
                      "title": "Policy ID",
                      "type": "integer"
                    }
                  },
                  "title": "Device Policy Status",
                  "type": "object"
                },
                "device_status_details": {
                  "properties": {
                    "agent_status": {
                      "description": "The status of a device agent",
                      "order": 2,
                      "title": "Agent Status",
                      "type": "string"
                    },
                    "device_status": {
                      "description": "The status of a device",
                      "order": 1,
                      "title": "Device Status",
                      "type": "string"
                    },
                    "policy_status": {
                      "description": "The overall status of all policies assigned to a device",
                      "order": 3,
                      "title": "Policy Status",
                      "type": "string"
                    },
                    "policy_statuses": {
                      "description": "A list of policy statuses with compliant details",
                      "items": {
                        "$ref": "#/definitions/device_policy_status"
                      },
                      "order": 4,
                      "title": "Policy Statuses",
                      "type": "array"
                    }
                  },
                  "title": "Device Status Details",
                  "type": "object"
                }
              },
              "properties": {
                "device": {
                  "$ref": "#/definitions/device",
                  "description": "The matched Automox device",
                  "order": 1,
                  "title": "Device"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "CONNECTION"
          },
          "e1b85ba6-5360-4148-8f43-eec87128e882": {
            "nodeId": "e1b85ba6-5360-4148-8f43-eec87128e882",
            "name": "Lookup Host by Hostname",
            "type": "action",
            "plugin": {
              "name": "Automox",
              "slugVendor": "automox",
              "slugName": "automox",
              "slugVersion": "1.1.0",
              "imageData": "https://eu.cdn-assets.connect.insight.rapid7.com/icons/automox/automox/1.1.0/icon.png"
            },
            "identifier": "get_device_by_hostname",
            "continueOnFailure": true,
            "isDisabled": false,
            "isCloud": false,
            "parameters": {
              "input": {
                "hostname": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[words].[1]}}",
                "org_id": "{{$workflow.[Automox Organization ID]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "hostname": {
                  "description": "Hostname of device",
                  "order": 2,
                  "title": "Hostname",
                  "type": "string"
                },
                "org_id": {
                  "description": "Identifier of organization to restrict results",
                  "order": 1,
                  "title": "Organization ID",
                  "type": "integer"
                }
              },
              "required": [
                "hostname"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "device": {
                  "properties": {
                    "agent_version": {
                      "description": "The agent version of a device",
                      "order": 18,
                      "title": "Agent Version",
                      "type": "string"
                    },
                    "compliant": {
                      "description": "Whether a device is compliant",
                      "order": 23,
                      "title": "Compliant",
                      "type": "boolean"
                    },
                    "connected": {
                      "description": "Whether a device is currently connected to the Automox platform",
                      "order": 26,
                      "title": "Connected",
                      "type": "boolean"
                    },
                    "create_time": {
                      "description": "The time a device was created in the Automox platform",
                      "order": 10,
                      "title": "Create Time",
                      "type": "string"
                    },
                    "custom_name": {
                      "description": "The custom name of a device",
                      "order": 19,
                      "title": "Custom Name",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Whether a device is deleted",
                      "order": 9,
                      "title": "Deleted",
                      "type": "boolean"
                    },
                    "details": {
                      "description": "Additional details of a device",
                      "order": 17,
                      "title": "Details",
                      "type": "object"
                    },
                    "display_name": {
                      "description": "The display name of a device",
                      "order": 24,
                      "title": "Display Name",
                      "type": "string"
                    },
                    "id": {
                      "description": "The device ID",
                      "order": 1,
                      "title": "Device ID",
                      "type": "integer"
                    },
                    "ip_addrs": {
                      "description": "List of IP addresses for a device",
                      "items": {
                        "type": "string"
                      },
                      "order": 14,
                      "title": "IP Addresses",
                      "type": "array"
                    },
                    "ip_addrs_private": {
                      "description": "List of private IP addresses for a device",
                      "items": {
                        "type": "string"
                      },
                      "order": 15,
                      "title": "Private IP Addresses",
                      "type": "array"
                    },
                    "is_compatible": {
                      "description": "Whether a device is compatible with the Automox platform",
                      "order": 20,
                      "title": "Is Compatible",
                      "type": "boolean"
                    },
                    "is_delayed_by_notification": {
                      "description": "Whether patching is delayed by a device notificiation",
                      "order": 28,
                      "title": "Is Delayed by Notification",
                      "type": "boolean"
                    },
                    "is_delayed_by_user": {
                      "description": "Whether patching is delayed by a user",
                      "order": 30,
                      "title": "Is Delayed By User",
                      "type": "boolean"
                    },
                    "last_disconnect_time": {
                      "description": "The last time a device disconnected from the Automox platform",
                      "order": 32,
                      "title": "Last Disconnect Time",
                      "type": "string"
                    },
                    "last_logged_in_user": {
                      "description": "The last logged in user of a device",
                      "order": 36,
                      "title": "Last Logged In User",
                      "type": "string"
                    },
                    "last_refresh_time": {
                      "description": "The last time a device was refreshed",
                      "order": 6,
                      "title": "Last Refresh Time",
                      "type": "string"
                    },
                    "last_scan_failed": {
                      "description": "Whether the last scan failed on a device",
                      "order": 21,
                      "title": "Last Scan Failed",
                      "type": "boolean"
                    },
                    "last_update_time": {
                      "description": "The last time a device was updated in the Automox platform",
                      "order": 5,
                      "title": "Last Update Time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The device name",
                      "order": 4,
                      "title": "Device Name",
                      "type": "string"
                    },
                    "needs_attention": {
                      "description": "Whether a device currently needs attention",
                      "order": 33,
                      "title": "Needs Attention",
                      "type": "boolean"
                    },
                    "needs_reboot": {
                      "description": "Whether a device needs rebooted",
                      "order": 7,
                      "title": "Needs Reboot",
                      "type": "boolean"
                    },
                    "next_patch_time": {
                      "description": "The time for the next device patch",
                      "order": 27,
                      "title": "Next Patch Time",
                      "type": "string"
                    },
                    "organization_id": {
                      "description": "The organization identifier of a device",
                      "order": 3,
                      "title": "Organization ID",
                      "type": "integer"
                    },
                    "os_family": {
                      "description": "The operating system family of a device",
                      "order": 13,
                      "title": "Operating System Family",
                      "type": "string"
                    },
                    "os_name": {
                      "description": "The name of the operating system of a device",
                      "order": 12,
                      "title": "Operating System",
                      "type": "string"
                    },
                    "os_version": {
                      "description": "The operating system version of a device",
                      "order": 11,
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "patches": {
                      "description": "The number of patches currently identified for a device",
                      "order": 16,
                      "title": "Patches",
                      "type": "integer"
                    },
                    "pending": {
                      "description": "Whether work is pending on a device",
                      "order": 22,
                      "title": "Pending",
                      "type": "boolean"
                    },
                    "pending_patches": {
                      "description": "The number of pending patches for a device",
                      "order": 25,
                      "title": "Pending Patches",
                      "type": "integer"
                    },
                    "reboot_is_delayed_by_notification": {
                      "description": "Whether rebooting is delayed by a device notification",
                      "order": 29,
                      "title": "Reboot Is Delayed By Notification",
                      "type": "boolean"
                    },
                    "reboot_is_delayed_by_user": {
                      "description": "Whether rebooting is delayed by a user",
                      "order": 31,
                      "title": "Reboot Is Delayed By User",
                      "type": "boolean"
                    },
                    "serial_number": {
                      "description": "The serial number of a device",
                      "order": 34,
                      "title": "Serial Number",
                      "type": "string"
                    },
                    "server_group_id": {
                      "description": "The server group identifier of a device",
                      "order": 2,
                      "title": "Server Group ID",
                      "type": "integer"
                    },
                    "status": {
                      "$ref": "#/definitions/device_status_details",
                      "description": "The device status details",
                      "order": 35,
                      "title": "Status"
                    },
                    "tags": {
                      "description": "List of tags",
                      "items": {
                        "type": "string"
                      },
                      "order": 8,
                      "title": "Tags",
                      "type": "array"
                    }
                  },
                  "required": [
                    "id",
                    "organization_id",
                    "server_group_id",
                    "name"
                  ],
                  "title": "Device",
                  "type": "object"
                },
                "device_policy_status": {
                  "properties": {
                    "compliant": {
                      "description": "Whether a device is compliant to given status",
                      "order": 2,
                      "title": "Compliant",
                      "type": "boolean"
                    },
                    "id": {
                      "description": "The identifier of the policy",
                      "order": 1,
                      "title": "Policy ID",
                      "type": "integer"
                    }
                  },
                  "title": "Device Policy Status",
                  "type": "object"
                },
                "device_status_details": {
                  "properties": {
                    "agent_status": {
                      "description": "The status of a device agent",
                      "order": 2,
                      "title": "Agent Status",
                      "type": "string"
                    },
                    "device_status": {
                      "description": "The status of a device",
                      "order": 1,
                      "title": "Device Status",
                      "type": "string"
                    },
                    "policy_status": {
                      "description": "The overall status of all policies assigned to a device",
                      "order": 3,
                      "title": "Policy Status",
                      "type": "string"
                    },
                    "policy_statuses": {
                      "description": "A list of policy statuses with compliant details",
                      "items": {
                        "$ref": "#/definitions/device_policy_status"
                      },
                      "order": 4,
                      "title": "Policy Statuses",
                      "type": "array"
                    }
                  },
                  "title": "Device Status Details",
                  "type": "object"
                }
              },
              "properties": {
                "device": {
                  "$ref": "#/definitions/device",
                  "description": "The matched Automox device",
                  "order": 1,
                  "title": "Device"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "CONNECTION"
          }
        },
        "tags": [
          "automox",
          "endpoint",
          "patch",
          "remediation",
          "slack"
        ],
        "humanCostSeconds": 600,
        "humanCostDisplayUnit": "minutes",
        "parameters": {
          "definitionSchema": {
            "type": "object",
            "required": [],
            "properties": {
              "Slack Channel": {
                "type": "string",
                "description": "The Slack channel used for the workflow"
              },
              "Automox Organization ID": {
                "type": "integer",
                "description": "The Automox organization ID"
              }
            },
            "definitions": {}
          }
        },
        "summary": "This workflow provides fast, convenient access to information about a given host from Automox by fetching device details from Automo and posting them in a Slack thread. Host info includes hostname, IP address, operating system, and last refresh time. Lookup can be performed by either hostname or IP address."
      }
    ],
    "triggers": [
      {
        "id": "c3358d06-1ae6-4bb4-83ed-b5ab9045119f",
        "name": "lookup-host Trigger",
        "description": "Trigger this workflow by entering a Slack command in the following format:\n\"@Rapid7 InsightConnect lookup-host workstation123\"\nOR\n\"@Rapid7 InsightConnect lookup-host 192.168.1.2\"",
        "input": {
          "matchChannel": "{{$workflow.[Slack Channel]}}",
          "matchText": "(?i)lookup-host",
          "type": "any"
        },
        "inputJsonSchema": {
          "properties": {
            "matchChannel": {
              "description": "Regex to match for channel name",
              "order": 1,
              "title": "Match Channel",
              "type": "string"
            },
            "matchText": {
              "description": "Regex to match for Slack message content",
              "order": 2,
              "title": "Match Text",
              "type": "string"
            },
            "type": {
              "default": "any",
              "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
              "enum": [
                "any",
                "direct",
                "group"
              ],
              "order": 3,
              "title": "Type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Variables",
          "type": "object"
        },
        "outputJsonSchema": {
          "definitions": {
            "hashes": {
              "properties": {
                "md5_hashes": {
                  "description": "MD5 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "MD5 Hashes",
                  "type": "array"
                },
                "sha1_hashes": {
                  "description": "SHA1 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "SHA1 Hashes",
                  "type": "array"
                },
                "sha256_hashes": {
                  "description": "SHA256 hashes found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 3,
                  "title": "SHA256 Hashes",
                  "type": "array"
                }
              },
              "title": "Hashes",
              "type": "object"
            },
            "indicators": {
              "properties": {
                "domains": {
                  "description": "Domains found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "Domains",
                  "type": "array"
                },
                "email_addresses": {
                  "description": "Email addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 4,
                  "title": "Email Addresses",
                  "type": "array"
                },
                "hashes": {
                  "$ref": "#/definitions/hashes",
                  "description": "Hashes found within the message",
                  "order": 5,
                  "title": "Hashes"
                },
                "ip_addresses": {
                  "$ref": "#/definitions/ip_addresses",
                  "description": "IP addresses found within the message",
                  "order": 7,
                  "title": "IP Addresses"
                },
                "mac_addresses": {
                  "description": "MAC addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 6,
                  "title": "MAC Addresses",
                  "type": "array"
                },
                "parent_domains": {
                  "description": "Parent domains found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "Parent Domains",
                  "type": "array"
                },
                "urls": {
                  "description": "URLs found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 3,
                  "title": "URLs",
                  "type": "array"
                }
              },
              "title": "Indicators",
              "type": "object"
            },
            "ip_addresses": {
              "properties": {
                "ipv4_addresses": {
                  "description": "IPv4 addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 1,
                  "title": "IPv4 Addresses",
                  "type": "array"
                },
                "ipv6_addresses": {
                  "description": "IPv6 addresses found within the message",
                  "items": {
                    "type": "string"
                  },
                  "order": 2,
                  "title": "IPv6 Addresses",
                  "type": "array"
                }
              },
              "title": "IP Addresses",
              "type": "object"
            },
            "message": {
              "properties": {
                "channel": {
                  "description": "Channel name",
                  "order": 3,
                  "title": "Channel",
                  "type": "string"
                },
                "channel_id": {
                  "description": "Slack channel ID",
                  "order": 4,
                  "title": "Channel ID",
                  "type": "string"
                },
                "first_word": {
                  "description": "First word of the message, for example a chat command (ignoring mentions)",
                  "order": 5,
                  "title": "First Word",
                  "type": "string"
                },
                "indicators": {
                  "$ref": "#/definitions/indicators",
                  "description": "Potential threat indicators found within the message",
                  "order": 7,
                  "title": "Indicators"
                },
                "text": {
                  "description": "Text",
                  "order": 5,
                  "title": "Text",
                  "type": "string"
                },
                "ts": {
                  "description": "Timestamp",
                  "order": 6,
                  "title": "Ts",
                  "type": "string"
                },
                "user": {
                  "description": "User name",
                  "order": 1,
                  "title": "User",
                  "type": "string"
                },
                "user_id": {
                  "description": "Slack User ID",
                  "order": 2,
                  "title": "User ID",
                  "type": "string"
                },
                "words": {
                  "description": "The message split by spaces into a list of words. This list makes finding and using parameters in chat commands easier",
                  "items": {
                    "type": "string"
                  },
                  "order": 6,
                  "title": "Words",
                  "type": "array"
                }
              },
              "title": "Message",
              "type": "object"
            }
          },
          "properties": {
            "display_name": {
              "description": "User display name",
              "order": 4,
              "title": "Display Name",
              "type": "string"
            },
            "message": {
              "$ref": "#/definitions/message",
              "description": "Message",
              "order": 1,
              "title": "Message"
            },
            "timestamp": {
              "description": "Timestamp",
              "order": 3,
              "title": "Timestamp",
              "type": "string"
            },
            "type": {
              "description": "Message Type",
              "order": 2,
              "title": "Type",
              "type": "string"
            }
          },
          "title": "Variables",
          "type": "object"
        },
        "tags": [],
        "type": "trigger_chatops",
        "chatOpsAppName": "slack",
        "chatOpsIdentifier": "message"
      }
    ]
  }
}