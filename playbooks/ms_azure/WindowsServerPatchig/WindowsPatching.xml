<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="WindowsPatching" Description="This workflow is for patching windows server " Details="" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; x:Name=&quot;CustomWorkflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord2&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings _State=&amp;quot;2&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;Acknowledged, The Vinci Automation received Request For Patching &amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord3&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;The Vinci Automation Started Working On Patching Activity&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;GetComputerGroup&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;2&quot; HostName=&quot;Autom01-Ayehu&quot; UserName=&quot;&quot; Password=&quot;&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$str=&amp;quot;%snow_desc%&amp;quot;&amp;#xA;$result=$str.split()[-1]&amp;#xA;Write-Output  $result&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;PowerShellScript x:Name=&quot;RemovalOfOldLogs&quot; activityLicenseType=&quot;1&quot; id=&quot;87&quot; name=&quot;PowerShellScript&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;PowerShell Script&quot; Description=&quot;Executes a Powershell script on a local device&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;Remove-Item C:\NoUpdateLog\* -ErrorAction SilentlyContinue&amp;#xA;Remove-Item C:\ConnectionFailedLog\* -ErrorAction SilentlyContinue&amp;#xA;Remove-Item C:\logs\* -ErrorAction SilentlyContinue&quot; scriptSource=&quot;1&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; HostId=&quot;-1&quot; HostName=&quot;{x:Null}&quot; TypeName=&quot;PowerShellScript&quot; label=&quot;PowerShell Script&quot; description=&quot;Executes a Powershell script on a local device&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;CreationOflogFile&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:02:00&quot; TimeInSeconds=&quot;120&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;2&quot; HostName=&quot;Autom01-Ayehu&quot; UserName=&quot;&quot; Password=&quot;&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;&amp;quot;&amp;quot; | Out-File c:\logs\WindowsUpdate.log&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xA;              &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;SerializedData&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xA;                  &amp;lt;xs:complexType&amp;gt;&amp;#xA;                    &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xA;                      &amp;lt;xs:element name=&amp;quot;SerializedData&amp;quot;&amp;gt;&amp;#xA;                        &amp;lt;xs:complexType&amp;gt;&amp;#xA;                          &amp;lt;xs:sequence&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamValue&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                          &amp;lt;/xs:sequence&amp;gt;&amp;#xA;                        &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                      &amp;lt;/xs:element&amp;gt;&amp;#xA;                    &amp;lt;/xs:choice&amp;gt;&amp;#xA;                  &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                &amp;lt;/xs:element&amp;gt;&amp;#xA;              &amp;lt;/xs:schema&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-patchType&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;Security Updates&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;/NewDataSet&amp;gt;&quot; HasParams=&quot;1&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;GetAvailableUpdates&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:02:00&quot; TimeInSeconds=&quot;120&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;10&quot; HostName=&quot;VINCIAPPWSUS01.CIS.tst&quot; UserName=&quot;cis.tst\pkumar&quot; Password=&quot;5A6D4470454C78544467367245395058322F673167513D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;C:\WsusScripts\GetPatchDetail.ps1&quot; ScriptCode=&quot;&quot; scriptSource=&quot;0&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xA;              &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;SerializedData&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xA;                  &amp;lt;xs:complexType&amp;gt;&amp;#xA;                    &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xA;                      &amp;lt;xs:element name=&amp;quot;SerializedData&amp;quot;&amp;gt;&amp;#xA;                        &amp;lt;xs:complexType&amp;gt;&amp;#xA;                          &amp;lt;xs:sequence&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamValue&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                          &amp;lt;/xs:sequence&amp;gt;&amp;#xA;                        &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                      &amp;lt;/xs:element&amp;gt;&amp;#xA;                    &amp;lt;/xs:choice&amp;gt;&amp;#xA;                  &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                &amp;lt;/xs:element&amp;gt;&amp;#xA;              &amp;lt;/xs:schema&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-patchType&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;%Short description%&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;/NewDataSet&amp;gt;&quot; HasParams=&quot;1&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity2&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseActivity&quot; notes=&quot;&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity3&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; useAlternateSetting=&quot;False&quot; isDefault=&quot;False&quot; notes=&quot;&quot;&gt;&lt;ReturnValue Formula=&quot;=Contains(&amp;amp;&amp;amp;&amp;amp;,No Updates Found)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;No Updates Found&quot; ConditionType=&quot;Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue5&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord4&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;%GetAvailableUpdates%&amp;quot; /&amp;gt;&amp;lt;Settings _State=&amp;quot;6&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity4&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;True&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; useAlternateSetting=&quot;False&quot; notes=&quot;&quot;&gt;&lt;ReturnValue Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,True)&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;True&quot; ConditionType=&quot;Equals&quot; Description=&quot;&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue7&quot; UseStoredValue=&quot;True&quot; UseCustomeCondition=&quot;False&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord5&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;%GetAvailableUpdates%&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;PushAvalaibleUpdates&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:02:00&quot; TimeInSeconds=&quot;120&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;10&quot; HostName=&quot;VINCIAPPWSUS01.CIS.tst&quot; UserName=&quot;cis.tst\pkumar&quot; Password=&quot;5A6D4470454C78544467367245395058322F673167513D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;C:\WsusScripts\PushUpdate.ps1&quot; ScriptCode=&quot;&quot; scriptSource=&quot;0&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xA;              &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;SerializedData&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xA;                  &amp;lt;xs:complexType&amp;gt;&amp;#xA;                    &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xA;                      &amp;lt;xs:element name=&amp;quot;SerializedData&amp;quot;&amp;gt;&amp;#xA;                        &amp;lt;xs:complexType&amp;gt;&amp;#xA;                          &amp;lt;xs:sequence&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamValue&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                          &amp;lt;/xs:sequence&amp;gt;&amp;#xA;                        &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                      &amp;lt;/xs:element&amp;gt;&amp;#xA;                    &amp;lt;/xs:choice&amp;gt;&amp;#xA;                  &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                &amp;lt;/xs:element&amp;gt;&amp;#xA;              &amp;lt;/xs:schema&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-patchType&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;%Short description%&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-ComputerGroupName&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;%GetComputerGroup%&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;/NewDataSet&amp;gt;&quot; HasParams=&quot;1&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseActivity&quot; notes=&quot;&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; isDefault=&quot;{x:Null}&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Contains(&amp;amp;&amp;amp;&amp;amp;,Failed To push Update On client)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Failed To push Update On client&quot; ConditionType=&quot;Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue3&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord1&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;%PushAvalaibleUpdates%&amp;quot; /&amp;gt;&amp;lt;Settings Assignment___group=&amp;quot;Service Desk&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;True&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;{x:Null}&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;False&quot; Value=&quot;&quot; ConditionType=&quot;&quot; Description=&quot;&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue6&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord6&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;Available Updates Pushed successfully on Client&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;Wait x:Name=&quot;WaitForUpdateReflectInClient&quot; activityLicenseType=&quot;1&quot; id=&quot;333&quot; name=&quot;Wait&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Wait&quot; Description=&quot;Pauses the Workflow for a specified period of time&quot; isDefault=&quot;1&quot; TimeInterval=&quot;Minutes&quot; TimeValue=&quot;3&quot; TypeName=&quot;Wait&quot; label=&quot;Wait&quot; description=&quot;Pauses the Workflow for a specified period of time&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;getServerCount&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;2&quot; HostName=&quot;Autom01-Ayehu&quot; UserName=&quot;CIS\Administrator&quot; Password=&quot;5A6D4470454C78544467367245395058322F673167513D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;param([String]$FileName)&amp;#xA;&amp;#xA;Try&amp;#xA;{&amp;#xA;&amp;#xA;$data=Import-Csv C:\ServerList\$FileName.csv&amp;#xA;$count=$data.ServerName.Count&amp;#xA;$count--&amp;#xA;Write-Output $count&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;catch &amp;#xA;{&amp;#xA;&amp;#xA;Write-Output &amp;quot;File Not Exists&amp;quot;&amp;#xA;&amp;#xA;}&amp;#xA;&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xA;              &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;SerializedData&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xA;                  &amp;lt;xs:complexType&amp;gt;&amp;#xA;                    &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xA;                      &amp;lt;xs:element name=&amp;quot;SerializedData&amp;quot;&amp;gt;&amp;#xA;                        &amp;lt;xs:complexType&amp;gt;&amp;#xA;                          &amp;lt;xs:sequence&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamValue&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                          &amp;lt;/xs:sequence&amp;gt;&amp;#xA;                        &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                      &amp;lt;/xs:element&amp;gt;&amp;#xA;                    &amp;lt;/xs:choice&amp;gt;&amp;#xA;                  &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                &amp;lt;/xs:element&amp;gt;&amp;#xA;              &amp;lt;/xs:schema&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-FileName&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;%GetComputerGroup%&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;/NewDataSet&amp;gt;&quot; HasParams=&quot;1&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; activityLicenseType=&quot;1&quot; id=&quot;432&quot; name=&quot;WhileActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;WhileActivity&quot; notes=&quot;&quot;&gt;&lt;SequenceActivity x:Name=&quot;whileSequenceActivity1&quot;&gt;&lt;ExitWhile name=&quot;ExitWhile&quot; Counter=&quot;%getServerCount%&quot; exitWhileInsideWhile=&quot;True&quot; isValid=&quot;True&quot; TypeName=&quot;ExitWhile&quot; whileSequenceActivity=&quot;whileSequenceActivity1&quot; x:Name=&quot;exitWhile1&quot; /&gt;&lt;MemorySet x:Name=&quot;memorySet1&quot; activityLicenseType=&quot;1&quot; id=&quot;430&quot; name=&quot;MemorySet&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Set Memory&quot; Description=&quot;Allocates a value to a Workflow/Global  variable&quot; VariableScope=&quot;Workflow&quot; IsSaved=&quot;False&quot; VariableName=&quot;counter&quot; VariableValue=&quot;%Counter%&quot; IsAppend=&quot;False&quot; TypeName=&quot;MemorySet&quot; label=&quot;Set Memory&quot; description=&quot;Allocates a value to a Workflow/Global  variable&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;Counter&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;2&quot; HostName=&quot;Autom01-Ayehu&quot; UserName=&quot;&quot; Password=&quot;&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$i=%counter%&amp;#xA;$i=$i+1&amp;#xA;Write-Output $i&amp;#xA;#$list=get-content -Path &amp;quot;C:\WsusScripts\testgroup.txt&amp;quot;&amp;#xA;#Write-Output $list[$i]&amp;#xA;&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;GetClientName&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;2&quot; HostName=&quot;Autom01-Ayehu&quot; UserName=&quot;&quot; Password=&quot;&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;param([String]$FileName)&amp;#xA;&amp;#xA;Try&amp;#xA;{&amp;#xA;&amp;#xA;&amp;#xA;$i=%Counter%&amp;#xA;$list=Import-Csv C:\ServerList\$FileName.csv&amp;#xA;Write-Output $list.ServerName[$i]&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;catch &amp;#xA;{&amp;#xA;&amp;#xA;Write-Output &amp;quot;File Not Exists&amp;quot;&amp;#xA;&amp;#xA;}&amp;#xA;&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xA;              &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;SerializedData&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xA;                  &amp;lt;xs:complexType&amp;gt;&amp;#xA;                    &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xA;                      &amp;lt;xs:element name=&amp;quot;SerializedData&amp;quot;&amp;gt;&amp;#xA;                        &amp;lt;xs:complexType&amp;gt;&amp;#xA;                          &amp;lt;xs:sequence&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                            &amp;lt;xs:element name=&amp;quot;ParamValue&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xA;                          &amp;lt;/xs:sequence&amp;gt;&amp;#xA;                        &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                      &amp;lt;/xs:element&amp;gt;&amp;#xA;                    &amp;lt;/xs:choice&amp;gt;&amp;#xA;                  &amp;lt;/xs:complexType&amp;gt;&amp;#xA;                &amp;lt;/xs:element&amp;gt;&amp;#xA;              &amp;lt;/xs:schema&amp;gt;&amp;lt;SerializedData&amp;gt;&amp;#xA;                            &amp;lt;ParamName&amp;gt;-FileName&amp;lt;/ParamName&amp;gt;&amp;#xA;                            &amp;lt;ParamValue&amp;gt;%GetComputerGroup%&amp;lt;/ParamValue&amp;gt;&amp;#xA;                         &amp;lt;/SerializedData&amp;gt;&amp;lt;/NewDataSet&amp;gt;&quot; HasParams=&quot;1&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;Ping x:Name=&quot;TestConnection&quot; activityLicenseType=&quot;1&quot; id=&quot;229&quot; name=&quot;Ping&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Ping&quot; Description=&quot;Runs a &amp;quot;Ping&amp;quot; command&quot; HostId=&quot;-2&quot; HostName=&quot;%GetClientName%&quot; TypeName=&quot;Ping&quot; label=&quot;Ping&quot; description=&quot;Runs a &amp;quot;Ping&amp;quot; command&quot; notes=&quot;&quot; /&gt;&lt;UserAuthentication x:Name=&quot;UserAuthCheck&quot; activityLicenseType=&quot;1&quot; id=&quot;415&quot; name=&quot;UserAuthentication&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;User Authentication&quot; Description=&quot;Validates a user's access to a target machine&quot; Domain=&quot;{x:Null}&quot; HostId=&quot;-2&quot; HostName=&quot;%GetClientName%&quot; UserName=&quot;cis.tst\pkumar&quot; Password=&quot;5A6D4470454C78544467367245395058322F673167513D3D&quot; TypeName=&quot;UserAuthentication&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity3&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseActivity&quot; notes=&quot;&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity5&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; isDefault=&quot;True&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,Failure)&quot; UseStoredValue=&quot;True&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Failure&quot; ConditionType=&quot;Equals&quot; Description=&quot;&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue9&quot; /&gt;&lt;PowerShellScript x:Name=&quot;ConnectionFailLog&quot; activityLicenseType=&quot;1&quot; id=&quot;87&quot; name=&quot;PowerShellScript&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;PowerShell Script&quot; Description=&quot;Executes a Powershell script on a local device&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$failLogData='%GetClientName%' +':CONNECTION FAILED'&amp;#xA;$failLogData | Out-File C:\ConnectionFailedLog\ConnectionFail.log -Append&quot; scriptSource=&quot;1&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; HostId=&quot;-1&quot; HostName=&quot;{x:Null}&quot; TypeName=&quot;PowerShellScript&quot; label=&quot;PowerShell Script&quot; description=&quot;Executes a Powershell script on a local device&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity6&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;False&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Success&quot; ConditionType=&quot;Equals&quot; Description=&quot;&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue11&quot; UseStoredValue=&quot;True&quot; UseCustomeCondition=&quot;False&quot; /&gt;&lt;PowerShell x:Name=&quot;Updatecheckonclient&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;-2&quot; HostName=&quot;%GetClientName%&quot; UserName=&quot;cis.tst\pkumar&quot; Password=&quot;5A6D4470454C78544467367245395058322F673167513D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$cmd=Get-WindowsUpdate&amp;#xA;&amp;#xA;&amp;#xA;if($cmd -eq $null)&amp;#xA;{ &amp;#xA;&amp;#xA;Write-Output &amp;quot;$env:COMPUTERNAME : No Updates Available&amp;quot;&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;else&amp;#xA;{&amp;#xA;&amp;#xA;Write-Output &amp;quot;Updates Available&amp;quot;&amp;#xA;&amp;#xA;}&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity4&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseActivity&quot; notes=&quot;&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity7&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; isDefault=&quot;{x:Null}&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Contains(&amp;amp;&amp;amp;&amp;amp;,No Updates Available)&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;No Updates Available&quot; ConditionType=&quot;Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue13&quot; UseStoredValue=&quot;False&quot; UseCustomeCondition=&quot;False&quot; /&gt;&lt;PowerShellScript x:Name=&quot;NoUpdateLogCreation&quot; activityLicenseType=&quot;1&quot; id=&quot;87&quot; name=&quot;PowerShellScript&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;PowerShell Script&quot; Description=&quot;Executes a Powershell script on a local device&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$data='%Updatecheckonclient%'&amp;#xA;$data | Out-File C:\NoUpdateLog\NoUpdate.log -Append&quot; scriptSource=&quot;1&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; HostId=&quot;-1&quot; HostName=&quot;&quot; TypeName=&quot;PowerShellScript&quot; label=&quot;PowerShell Script&quot; description=&quot;Executes a Powershell script on a local device&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity8&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;True&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; notes=&quot;&quot; useAlternateSetting=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;{x:Null}&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;False&quot; Value=&quot;&quot; ConditionType=&quot;&quot; Description=&quot;&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue15&quot; /&gt;&lt;PowerShell x:Name=&quot;Updater&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;-2&quot; HostName=&quot;%GetClientName%&quot; UserName=&quot;cis.tst\Administrator&quot; Password=&quot;36504C7567427A7847397347656D76654D2B456A74413D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;mkdir C:\Scripts&amp;#xA;mkdir C:\logs&amp;#xA;&amp;quot;$&amp;quot;+'env:COMPUTERNAME | Out-File &amp;quot;c:\logs\WindowsUpdate.log&amp;quot;&amp;#xA;Get-Date | Out-File &amp;quot;c:\logs\WindowsUpdate.log&amp;quot; -Append&amp;#xA;Install-WindowsUpdate -AcceptAll -AutoReboot | Out-File &amp;quot;c:\logs\WindowsUpdate.log&amp;quot; -Append '| Out-File C:\Scripts\Updater.ps1&amp;#xA;$principal = New-ScheduledTaskPrincipal -UserID &amp;quot;NT AUTHORITY\SYSTEM&amp;quot; -LogonType ServiceAccount -RunLevel Highest;&amp;#xA;$action= New-ScheduledTaskAction -Execute &amp;quot;Powershell.exe&amp;quot; -Argument '-Command &amp;quot;&amp;amp; {C:\Scripts\Updater.ps1}&amp;quot;';&amp;#xA;Register-ScheduledTask -TaskName 'Updater' -Action $action -Principal $principal;&amp;#xA;schtasks /run /tn 'Updater';&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;PowerShell x:Name=&quot;Reporter&quot; activityLicenseType=&quot;1&quot; id=&quot;86&quot; name=&quot;PowerShell&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Powershell&quot; Description=&quot;Executes a Powershell script on a remote device&quot; HostId=&quot;-2&quot; HostName=&quot;%GetClientName%&quot; UserName=&quot;cis.tst\Administrator&quot; Password=&quot;36504C7567427A7847397347656D76654D2B456A74413D3D&quot; PsrPort=&quot;5985&quot; UriType=&quot;HTTP&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;&amp;quot;$&amp;quot;+'con= Get-Content &amp;quot;c:\logs\WindowsUpdate.log&amp;quot;'+&amp;quot;`n&amp;quot;+&amp;#xA;&amp;quot;$&amp;quot;+&amp;quot;username='CIS\Administrator' `n&amp;quot;+&amp;#xA;&amp;quot;$&amp;quot;+&amp;quot;pass='TQBpAGMAcgBvAHMAbwBmAHQAQAAxADIAMwA=' `n&amp;quot;+&amp;#xA;&amp;quot;$&amp;quot;+&amp;quot;pass = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(&amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;pass)) | ConvertTo-SecureString -AsPlainText -Force `n&amp;quot;+&amp;#xA;&amp;quot;$&amp;quot;+&amp;quot;Credentials = New-Object System.Management.Automation.PSCredential -ArgumentList &amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;username, &amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;pass `n&amp;quot;+&amp;#xA;&amp;quot;Invoke-Command -ComputerName Autom01-Ayehu.cis.tst -Credential &amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;Credentials -ScriptBlock {&amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;Using:con | Out-File c:\logs\WindowsUpdate.log -Append}&amp;quot;+ &amp;quot;`n&amp;quot;+&amp;#xA;&amp;quot;Remove-Item -Path 'C:\Scripts' -Recurse -Force&amp;#xA;Remove-Item -Path 'C:\logs' -Recurse -Force&amp;#xA;Unregister-ScheduledTask -TaskName 'Updater' -Confirm:&amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;false;&amp;quot;+&amp;quot;`n&amp;quot;+&amp;#xA;&amp;quot;Unregister-ScheduledTask -TaskName 'Reporter' -Confirm:&amp;quot;+&amp;quot;$&amp;quot;+&amp;quot;false;&amp;quot;+&amp;quot;`n&amp;quot; | Out-File C:\Scripts\Reporter.ps1&amp;#xA;$principal = New-ScheduledTaskPrincipal -UserID &amp;quot;NT AUTHORITY\SYSTEM&amp;quot; -LogonType ServiceAccount -RunLevel Highest;&amp;#xA;$action= New-ScheduledTaskAction -Execute &amp;quot;Powershell.exe&amp;quot; -Argument '-Command &amp;quot;&amp;amp; {C:\Scripts\Reporter.ps1}&amp;quot;';&amp;#xA;$trigger= New-ScheduledTaskTrigger -AtStartup;&amp;#xA;Register-ScheduledTask -TaskName 'Reporter' -Trigger $trigger -Action $action -Principal $principal;&quot; scriptSource=&quot;1&quot; UserLogonName=&quot;&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; TypeName=&quot;PowerShell&quot; label=&quot;Powershell&quot; description=&quot;Executes a Powershell script on a remote device&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;PowerShellScript x:Name=&quot;LogWriteTime&quot; activityLicenseType=&quot;1&quot; id=&quot;87&quot; name=&quot;PowerShellScript&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;20:35:00&quot; TimeInSeconds=&quot;74100&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;PowerShell Script&quot; Description=&quot;Executes a Powershell script on a local device&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;while($true){&amp;#xA;&amp;#xA;$lastwritetime=(Get-Item C:\logs\WindowsUpdate.log | Select -Property LastWriteTime | Ft -HideTableHeaders | Out-String).Trim() -as [DateTime]&amp;#xA;#$lastwritetime&amp;#xA;$currentdate = Get-Date&amp;#xA;$difference = ($currentdate - $lastwritetime).Minutes&amp;#xA;$difference&amp;#xA;&amp;#xA;if ($difference -ge 15)&amp;#xA;{&amp;#xA;Write-Host &amp;quot;difference  is &amp;gt; 1 hours&amp;quot;&amp;#xA;break&amp;#xA;}&amp;#xA;else&amp;#xA;{&amp;#xA;Write-Host &amp;quot;difference  is &amp;lt; 1 hours&amp;quot;&amp;#xA;}&amp;#xA;}&quot; scriptSource=&quot;1&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; HostId=&quot;-1&quot; HostName=&quot;&quot; TypeName=&quot;PowerShellScript&quot; label=&quot;PowerShell Script&quot; description=&quot;Executes a Powershell script on a local device&quot; notes=&quot;&quot; /&gt;&lt;PowerShellScript x:Name=&quot;ReportGeneration&quot; activityLicenseType=&quot;1&quot; id=&quot;87&quot; name=&quot;PowerShellScript&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;PowerShell Script&quot; Description=&quot;Executes a Powershell script on a local device&quot; ScriptPath=&quot;&quot; ScriptCode=&quot;$exportpath='C:\PatchReport\WindowsPatchReport.xlsx'&amp;#xA;Remove-Item $exportpath -ErrorAction SilentlyContinue&amp;#xA;&amp;#xA;$result_NoUpdate=$null&amp;#xA;$result_NoConnection=$null&amp;#xA;$result_log=$null&amp;#xA;&amp;#xA;$path1='C:\NoUpdateLog\*'&amp;#xA;$cmd1=Test-Path $path1&amp;#xA;$cmd1&amp;#xA;&amp;#xA;&amp;#xA;$path2='C:\ConnectionFailedLog\*'&amp;#xA;$cmd2=Test-Path $path2&amp;#xA;$cmd2&amp;#xA;&amp;#xA;&amp;#xA;$path3='C:\logs\*'&amp;#xA;$cmd3=Test-Path $path3&amp;#xA;$cmd3&amp;#xA;&amp;#xA;if($cmd1 -eq $true)&amp;#xA;{&amp;#xA;&amp;#xA;$result_NoUpdate = Get-Content -Path 'C:\NoUpdateLog\NoUpdate.log' | ConvertFrom-String -Delimiter ':' -PropertyNames Server, Status&amp;#xA;$NoUpdate_ServerCount= $result_NoUpdate.Server.Count&amp;#xA;$NoUpdate_ServerCount&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;else&amp;#xA;&amp;#xA;{&amp;#xA;Write-Host &amp;quot;NO FILE&amp;quot;&amp;#xA;$NoUpdate_ServerCount=0&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;&amp;#xA;if($cmd2 -eq $true)&amp;#xA;{&amp;#xA;$result_NoConnection = Get-Content -Path 'C:\ConnectionFailedLog\ConnectionFail.log' | ConvertFrom-String -Delimiter ':' -PropertyNames Server, Status&amp;#xA;$NoConnection_ServerCount = $result_NoConnection.Server.Count&amp;#xA;$NoConnection_ServerCount&amp;#xA;}&amp;#xA;&amp;#xA;else&amp;#xA;&amp;#xA;{&amp;#xA;Write-Host &amp;quot;NO FILE&amp;quot;&amp;#xA;$NoConnection_ServerCount=0&amp;#xA;$NoConnection_ServerCount&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;if($cmd3 -eq $true)&amp;#xA;{&amp;#xA;$result_log = switch -Regex -File 'C:\logs\WindowsUpdate.log' {&amp;#xA;    '^[-\w]+$' { $server = $_}&amp;#xA;    '[AP]M$'   { $date = [datetime]::ParseExact($_, 'F', [cultureinfo]'en-US') }&amp;#xA;    '^(\d+)\s+(\w+)\s+(KB\d+)\s+(\d+\s[KM]B)\s+(.+)' {&amp;#xA;        # create and output an object&amp;#xA;        [PsCustomObject]@{&amp;#xA;            Server = $server&amp;#xA;            Date   = $date&amp;#xA;            X      = $matches[1]&amp;#xA;            Status = $matches[2]&amp;#xA;            KB     = $matches[3]&amp;#xA;            Size   = $matches[4]&amp;#xA;            Title  = $matches[5]&amp;#xA;           &amp;#xA;        }&amp;#xA;   }&amp;#xA;}&amp;#xA;&amp;#xA;$Patched_Server=$result_log.Server | Get-Unique&amp;#xA;$Patched_ServerCount=$Patched_Server.Count&amp;#xA;$Patched_ServerCount&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;else&amp;#xA;&amp;#xA;{&amp;#xA;Write-Host &amp;quot;NO FILE&amp;quot;&amp;#xA;$Patched_ServerCount=0&amp;#xA;$Patched_ServerCount&amp;#xA;}&amp;#xA;&amp;#xA;&amp;#xA;$summary = ConvertFrom-Csv @&amp;quot;&amp;#xA;Type,Count&amp;#xA;NoUpdateFound,$NoUpdate_ServerCount&amp;#xA;ConnectionFailed,$NoConnection_ServerCount&amp;#xA;SuccessfulPatching,$Patched_ServerCount&amp;#xA;&amp;#xA;&amp;quot;@&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;#ChartDefination&amp;#xA;&amp;#xA;$chart=New-ExcelChartDefinition -Title &amp;quot;PatchingTrend&amp;quot; -XRange Type -YRange Count &amp;#xA;#$chart=New-ExcelChartDefinition -Title &amp;quot;PatchingTrend&amp;quot; -ChartType PieExploded3D -XRange Type -YRange Count -NoLegend -ShowCategory -ShowPercent&amp;#xA;&amp;#xA;$Summary | Export-Excel -Path  $exportpath -TableName &amp;quot;Summary&amp;quot;  -AutoNameRange -ExcelChartDefinition $chart&amp;#xA;&amp;#xA;#Write-Output $result_log | Format-Table&amp;#xA;&amp;#xA;#Write-Output $result_NoConnection&amp;#xA;&amp;#xA;#Write-Output $result_NoUpdate&amp;#xA;&amp;#xA;&amp;#xA;#$result1 |  Export-Excel $exportpath1 -AutoSize -StartRow 2  -TableName PatchDetail -Title NoUpdateFoundReport -TitleBold&amp;#xA;#$result2 |  Export-Excel $exportpath2 -AutoSize -StartRow 2  -TableName PatchDetail -Title ConnectionFailedReport -TitleBold&amp;#xA;#$result3 |  Export-Excel $exportpath3 -AutoSize -StartRow 2  -TableName PatchDetail -Title DetailPatchReport -TitleBold&amp;#xA;#$result |  Export-Excel C:\Users\prabhat\Desktop\abc.xlsx -AutoSize -StartRow 2  -TableName PatchDetail -Title DetailPatchReport -TitleBold&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;&amp;lt;#&amp;#xA;&amp;#xA;#Add another tab.  Replace the $TabData2 with your data&amp;#xA;#1..10 | Export-Excel $xlSourcefile -WorksheetName 'Tab 2' -AutoSize -AutoFilter&amp;#xA;$result2 | Export-Excel C:\Users\prabhat\Desktop\ConsolidateReport.xlsx -WorksheetName 'ConnectionFailed' -AutoSize -AutoFilter&amp;#xA;&amp;#xA;#Add another tab.  Replace the $TabData3 with your data&amp;#xA;#1..15  | Export-Excel $xlSourcefile -WorksheetName 'Tab 3' -AutoSize -AutoFilter -Show&amp;#xA;$result3 | Export-Excel C:\Users\prabhat\Desktop\ConsolidateReport.xlsx -WorksheetName 'DetailReport' -AutoSize -AutoFilter&amp;#xA;#&amp;gt;&amp;#xA;&amp;#xA;&amp;lt;#&amp;#xA;$summary | Export-Excel -Path $exportpath  -WorkSheetname &amp;quot;Summary&amp;quot; -ClearSheet `&amp;#xA;     -IncludePivotTable -PivotRows &amp;quot;Type&amp;quot; -PivotData @{&amp;quot;Count&amp;quot;=&amp;quot;Sum&amp;quot;} `&amp;#xA;     -IncludePivotChart -ChartType CylinderColClustered -ShowPercent -MoveToStart &amp;#xA;#&amp;gt;&amp;#xA;&amp;#xA;$result_log |  Export-Excel $exportpath -AutoSize -StartRow 2  -TableName PatchDetail3 -Title DetailedReport -TitleBold -TitleSize 15 -WorksheetName 'DetailReport'&amp;#xA;$result_NoUpdate |  Export-Excel $exportpath -AutoSize -StartRow 2  -TableName PatchDetail1 -Title NoUpdateFoundReport -TitleBold -TitleSize 15 -WorksheetName 'NoUpdate'&amp;#xA;$result_NoConnection |  Export-Excel $exportpath -AutoSize -StartRow 2  -TableName PatchDetail2 -Title ConnectionFailedReport -TitleBold -TitleSize 15  -WorksheetName 'ConnectionFailed'&amp;#xA;&quot; scriptSource=&quot;1&quot; TableAsString=&quot;&quot; HasParams=&quot;0&quot; HostId=&quot;-1&quot; HostName=&quot;&quot; TypeName=&quot;PowerShellScript&quot; label=&quot;PowerShell Script&quot; description=&quot;Executes a Powershell script on a local device&quot; notes=&quot;&quot; /&gt;&lt;SNUploadAttachment x:Name=&quot;snUploadAttachment1&quot; activityLicenseType=&quot;1&quot; id=&quot;247&quot; name=&quot;SNUploadAttachment&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;C:\PatchReport\WindowsPatchReport.xlsx&quot; DisplayName=&quot;SN Upload Attachment&quot; Description=&quot;Uploads an attachment to an existing Service Now record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; FieldName=&quot;Number&quot; RecordNumber=&quot;%ExternalID%&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUploadAttachment&quot; label=&quot;SN Upload Attachment&quot; description=&quot;Uploads an attachment to an existing Service Now record&quot; notes=&quot;&quot; /&gt;&lt;SNUpdateRecord x:Name=&quot;snUpdateRecord7&quot; activityLicenseType=&quot;1&quot; id=&quot;246&quot; name=&quot;SNUpdateRecord&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:05:00&quot; TimeInSeconds=&quot;300&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;SN Update Record&quot; Description=&quot;Updates an existing ServiceNow record&quot; SelectedModuleID=&quot;8&quot; SelectedModuleName=&quot;SNOW-Zensar&quot; FormId=&quot;5f8a48df-67af-41dd-a0f5-874dcfc29ddc&quot; FormName_UI=&quot;Incident(incident)&quot; FormName=&quot;Incident(incident)&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings Number=&amp;quot;%ExternalID%&amp;quot; /&amp;gt;&amp;lt;Settings EyeShareIndexName=&amp;quot;Number&amp;quot; /&amp;gt;&amp;lt;Settings Work___notes=&amp;quot;Patching  Completed&amp;quot; /&amp;gt;&amp;lt;Settings _State=&amp;quot;6&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; SelectedModuleType=&quot;24&quot; HostName=&quot;{x:Null}&quot; HostId=&quot;0&quot; TypeName=&quot;SNUpdateRecord&quot; label=&quot;SN Update Record&quot; description=&quot;Updates an existing ServiceNow record&quot; notes=&quot;&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
  </Tags>
</Workflow>