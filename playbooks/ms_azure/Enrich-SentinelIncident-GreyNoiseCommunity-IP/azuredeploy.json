{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This playbook uses the GreyNoise Community API to automatically enrich IP entities in incidents generated by Sentinel.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "GreyNoise-IP-CommunityEnrichment",
            "type": "string"
        },
        "SentinelWorkspaceName": {
            "defaultValue": "",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "WorkspaceID": {
            "defaultValue": "your-workspaceID",
            "type": "string"
        },
        "WorkspaceKey": {
            "defaultValue": "your-workspaceKey",
            "type": "securestring"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "azureloganalyticsdatacollectorConnectionName": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
        "azuremonitorlogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureloganalyticsdatacollectorConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "SendtoLogAnalytics",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                },
                "parameterValues": {
                    "username": "[parameters('workspaceId')]",
                    "password": "[parameters('workspaceKey')]"
                }               
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
        "name": "[parameters('PlaybookName')]",
        "location": "[resourceGroup().location]",
        "tags": {
            "LogicAppsCategory": "security"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollectorConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]"
        ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "GreyNoiseKey": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "SentinelWorkspaceName": {
                            "defaultValue": "[parameters('SentinelWorkspaceName')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "14_Days_From_Incident": {
                            "runAfter": {},
                            "type": "Expression",
                            "kind": "SubtractFromTime",
                            "inputs": {
                                "baseTime": "@triggerBody()?['object']?['properties']?['createdTimeUtc']",
                                "interval": 14,
                                "timeUnit": "Day"
                            },
                            "description": "May be used for a KQL Sentinel lookback for IPs seen in previous logs 14 days ago"
                        },
                        "Filter_IPs_Only": {
                            "runAfter": {
                                "Initialize_variable_GreyNoiseVizURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(item()?['kind'], 'Ip')"
                            },
                            "description": "Filter only the Entity IPs to send to GreyNoise"
                        },
                        "For_each_IP_Entity": {
                            "foreach": "@body('Filter_IPs_Only')",
                            "actions": {
                                "CheckObserved": {
                                    "actions": {
                                        "Compose_IP_Community": {
                                            "runAfter": {
                                                "Send_CommunityIP_Data_to_Sentinel": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": {
                                                "Classification": "@body('Parse_JSON_CommunityIP')?['classification']",
                                                "IPAddress": "@body('Parse_JSON_CommunityIP')?['ip']",
                                                "LastSeen": "@body('Parse_JSON_CommunityIP')?['last_seen']",
                                                "Name": "@body('Parse_JSON_CommunityIP')?['name']",
                                                "Observed": "@body('Parse_JSON_CommunityIP')?['noise']",
                                                "RuleItOut": "@body('Parse_JSON_CommunityIP')?['riot']"
                                            }
                                        },
                                        "IsRIOT": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)_4": {
                                                    "runAfter": {
                                                        "Update_incident": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p><span style=\"font-size: 24px; color: rgb(41,105,176)\">IP address is contained in RIOT Dataset</span><span style=\"color: rgb(41,105,176)\"><br>\n</span><span style=\"font-size: 24px\"><br>\n</span><span style=\"font-size: 24px\">@{base64ToString(body('Run_query_and_visualize_results_CommunityIP')?['attachmentContent'])}</span><span style=\"font-size: 24px\"><br>\n<br>\n</span><span style=\"font-size: 24px\">@{variables('GreyNoiseVizURL')}</span><span style=\"font-size: 24px\"></span></p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    }
                                                },
                                                "Set_variable_GreyNoiseVizURL": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "GreyNoiseVizURL",
                                                        "value": "https://viz.greynoise.io/riot/@{body('Parse_JSON_CommunityIP')?['ip']}"
                                                    }
                                                },
                                                "Update_incident": {
                                                    "runAfter": {
                                                        "Set_variable_GreyNoiseVizURL": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "severity": "Low",
                                                            "tagsToAdd": {
                                                                "TagsToAdd": [
                                                                    {
                                                                        "Tag": "ObservedRIOT:@{body('Parse_JSON_CommunityIP')?['ip']}"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "path": "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Run_query_and_visualize_results_CommunityIP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Add_comment_to_incident_(V3)_5": {
                                                        "runAfter": {
                                                            "Set_variable_GreyNoiseVizUrl2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "message": "<p><span style=\"font-size: 24px; color: rgb(243,121,52)\">GreyNoise has observed IP address while scanning the Intenet in the last 90 Days<br>\n</span><span style=\"color: rgb(243,121,52); font-size: 24px\"><br>\n</span><span style=\"color: rgb(0,0,0); font-size: 24px\"></span><span style=\"color: rgb(0,0,0); font-size: 24px\">@{base64ToString(body('Run_query_and_visualize_results_CommunityIP')?['attachmentContent'])}</span><span style=\"color: rgb(0,0,0); font-size: 24px\"><br>\n<br>\n</span><span style=\"color: rgb(0,0,0); font-size: 24px\">@{variables('GreyNoiseVizURL')}</span><span style=\"font-size: 24px; color: rgb(243,121,52)\"></span></p>"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/Incidents/Comment"
                                                        }
                                                    },
                                                    "Set_variable_GreyNoiseVizUrl2": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "GreyNoiseVizURL",
                                                            "value": "https://viz.greynoise.io/ip/@{body('Parse_JSON_CommunityIP')?['ip']}"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('Parse_JSON_CommunityIP')?['riot']",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Parse_JSON_CommunityIP": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('CommunityIP')",
                                                "schema": {
                                                    "properties": {
                                                        "classification": {
                                                            "type": "string"
                                                        },
                                                        "ip": {
                                                            "type": "string"
                                                        },
                                                        "last_seen": {
                                                            "type": "string"
                                                        },
                                                        "link": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "noise": {
                                                            "type": "boolean"
                                                        },
                                                        "riot": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Run_query_and_visualize_results_CommunityIP": {
                                            "runAfter": {
                                                "Set_variable_CommunityResults": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "let result = print myDynamicValue = dynamic(@{variables('CommunityResults')})\n| mv-expand myDynamicValue\n| evaluate bag_unpack(myDynamicValue)\n| project IPAddress, LastSeen, Classification, Name, RuleItOut, Observed\n| sort by IPAddress asc;\nresult",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/visualizeQuery",
                                                "queries": {
                                                    "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                                    "resourcename": "@parameters('SentinelWorkspaceName')",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                                    "timerange": "Last 24 hours",
                                                    "visType": "Html Table"
                                                }
                                            }
                                        },
                                        "Send_CommunityIP_Data_to_Sentinel": {
                                            "runAfter": {
                                                "Parse_JSON_CommunityIP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@{body('Parse_JSON_CommunityIP')}",
                                                "headers": {
                                                    "Log-Type": "GreyNoiseIPCommunity",
                                                    "time-generated-field": "@triggerBody()?['object']?['properties']?['createdTimeUtc']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['AzureLogAnalyticsDataCollector']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/logs"
                                            }
                                        },
                                        "Set_variable_CommunityResults": {
                                            "runAfter": {
                                                "Compose_IP_Community": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "CommunityResults",
                                                "value": [
                                                    "@outputs('Compose_IP_Community')"
                                                ]
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "CommunityIP": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Add_comment_to_incident_(V3)_3": {
                                                "runAfter": {
                                                    "Update_incident_3": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "message": "<p><span style=\"font-size: 24px; color: rgb(184,49,47)\">IP not observed scanning the internet in the last 90 Days or contained in RIOT data set.</span><span style=\"font-size: 24px\"><br>\n<br>\n</span><span style=\"color: rgb(0,0,0); font-size: 24px\"></span><span style=\"color: rgb(0,0,0); font-size: 24px\">@{base64ToString(body('Run_query_and_visualize_results_CommunityIP2')?['attachmentContent'])}</span><span style=\"color: rgb(0,0,0)\"></span></p>"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                }
                                            },
                                            "Compose_IP_Community2": {
                                                "runAfter": {
                                                    "Send_CommunityIP2_Data_to_Sentinel": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Compose",
                                                "inputs": {
                                                    "IPAddress": "@body('Parse_JSON_CommunityIP2')?['ip']",
                                                    "Message": "@body('Parse_JSON_CommunityIP2')?['message']",
                                                    "Observed": "@body('Parse_JSON_CommunityIP2')?['noise']",
                                                    "RuleItOut": "@body('Parse_JSON_CommunityIP2')?['riot']"
                                                }
                                            },
                                            "Parse_JSON_CommunityIP2": {
                                                "runAfter": {},
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('CommunityIP')",
                                                    "schema": {
                                                        "properties": {
                                                            "ip": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "noise": {
                                                                "type": "boolean"
                                                            },
                                                            "riot": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "Run_query_and_visualize_results_CommunityIP2": {
                                                "runAfter": {
                                                    "Set_variable_CommunityResults2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": "let result = print myDynamicValue = dynamic(@{variables('CommunityResults')})\n| mv-expand myDynamicValue\n| evaluate bag_unpack(myDynamicValue)\n| project IPAddress, RuleItOut, Observed, Message\n| sort by IPAddress asc;\nresult",
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/visualizeQuery",
                                                    "queries": {
                                                        "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                                        "resourcename": "@parameters('SentinelWorkspaceName')",
                                                        "resourcetype": "Log Analytics Workspace",
                                                        "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                                        "timerange": "Last 24 hours",
                                                        "visType": "Html Table"
                                                    }
                                                }
                                            },
                                            "Send_CommunityIP2_Data_to_Sentinel": {
                                                "runAfter": {
                                                    "Parse_JSON_CommunityIP2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": "@{body('Parse_JSON_CommunityIP2')}",
                                                    "headers": {
                                                        "Log-Type": "GreyNoiseIPCommunity",
                                                        "time-generated-field": "@triggerBody()?['object']?['properties']?['createdTimeUtc']"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['AzureLogAnalyticsDataCollector']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/api/logs"
                                                }
                                            },
                                            "Set_variable_CommunityResults2": {
                                                "runAfter": {
                                                    "Compose_IP_Community2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "CommunityResults",
                                                    "value": [
                                                        "@outputs('Compose_IP_Community2')"
                                                    ]
                                                }
                                            },
                                            "Update_incident_3": {
                                                "runAfter": {
                                                    "Run_query_and_visualize_results_CommunityIP2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "severity": "High",
                                                        "status": "New",
                                                        "tagsToAdd": {
                                                            "TagsToAdd": [
                                                                {
                                                                    "Tag": "NotObserved:@{body('Parse_JSON_CommunityIP2')?['ip']}"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "put",
                                                    "path": "/Incidents"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('CommunityIP')?['message']",
                                                    "Success"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "CommunityIP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "https://api.greynoise.io/v3/community/@{items('For_each_IP_Entity')?['properties']?['address']}"
                                    },
                                    "description": "Look up to see if IP is benin or malicious or not seen. | RIOT identifies IPs from known benign services and organizations that commonly cause false positives in network security and threat intelligence products"
                                }
                            },
                            "runAfter": {
                                "Filter_IPs_Only": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "description": "with each IP lookup in GreyNoise and add for a HTML Table",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_array_variable_CommunityResults": {
                            "runAfter": {
                                "14_Days_From_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CommunityResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "description": "Used for an array of IP entities and GreyNoise results from each ip high level information"
                        },
                        "Initialize_variable_GreyNoiseVizURL": {
                            "runAfter": {
                                "Initialize_array_variable_CommunityResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "GreyNoiseVizURL",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                                "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "AzureLogAnalyticsDataCollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollectorConnectionName'))]",
                                "connectionName": "[variables('azureloganalyticsdatacollectorConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}