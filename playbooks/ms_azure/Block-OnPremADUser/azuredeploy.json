{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This playbook will disable a user in Azure & On-Prem Active Directory, add a comment to the incident & send out an E-mail reporting the block operation's outcome",
    "author": "Innocent Wafula & Hazem Elshabini"
  },
  "parameters": {
    "PlaybookName": {
      "type": "string",
      "defaultValue": "BlockADOnPremUser",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "userName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Your company email address."
      }
    },
    "automationAccountRG": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Resource Group where the Azure Automation Account exists."
      }
    },
    "automationAccountName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Azure Automation Account."
      }
    },
    "runbookName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Azure Automation Runbook to be executed."
      }
    },
    "hybridAutomationGroup": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Hybrid Automation Group on which the Runbook will be executed."
      }
    },
    "mailList": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "maxLength": 300,
      "metadata": {
        "description": "Semi-colon separated list of recepients to be notified of LogicApp activities."
      }
    }
  },
  "variables": {
    "AzureAutomationAccountConnectionName": "[concat('azureautomation-', parameters('PlaybookName'))]",
    "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
    "Office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]",
    "AzureADConnectionName": "[concat('azuread-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureAutomationAccountConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('userName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureautomation')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('userName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('Office365ConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('userName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureADConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('userName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections',variables('AzureSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections',variables('Office365ConnectionName'))]",
        "[resourceId('Microsoft.Web/connections',variables('AzureAutomationAccountConnectionName'))]",
        "[resourceId('Microsoft.Web/connections',variables('AzureADConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_alert": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Alert_-_Get_incident": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
              }
            },
            "Entities_-_Get_Accounts": {
              "runAfter": {
                "Alert_-_Get_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "runAfter": {
                        "Send_an_email_(V2)": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>User Blocked on On-prem AD</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Send_an_email_(V2)": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p>@{items('For_each')?['Name']} &nbsp;&nbsp;&nbsp;&nbsp;successfully disabled on Azure and On-Prem AD<br>\n</p>",
                          "Importance": "High",
                          "Subject": "User:  @{body('Parse_JSON')?['Name']} Successfully Disabled",
                          "To": "[parameters('mailList')]"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  },
                  "runAfter": {
                    "Create_job": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Send_an_email_(V2)_2": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "Body": "<p>An error has occured while trying to disable user with SAM ID: &nbsp;<br>\n@{body('Parse_JSON')?['Name']}<br>\n<br>\nCheck the following details in the Runbook logs in the Azure Portal<br>\n@{body('Create_job')?['id']}</p>",
                            "Subject": "Failed to disable @{body('Parse_JSON')?['Name']}",
                            "To": "[parameters('mailList')]"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['office365']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/v2/Mail"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@body('Create_job')?['properties']?['status']",
                            "Failed"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "Create_job": {
                  "runAfter": {
                    "Disable_Account_on_Azure_AD": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "properties": {
                        "parameters": {
                          "SamAccountName": "@{substring(body('Parse_JSON')?['Name'],0,indexOf(body('Parse_JSON')?['Name'],'@'))}"
                        },
                        "runOn": "[parameters('hybridAutomationGroup')]"
                      }
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureautomation']['connectionId']"
                      }
                    },
                    "method": "put",
                    "path": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('automationAccountRG'), '/providers/Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/jobs')]",
                    "queries": {
                      "runbookName": "[parameters('runbookName')]",
                      "wait": true,
                      "x-ms-api-version": "2015-10-31"
                    }
                  }
                },
                "Disable_Account_on_Azure_AD": {
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "accountEnabled": false
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuread']['connectionId']"
                      }
                    },
                    "method": "patch",
                    "path": "/v1.0/users/@{encodeURIComponent(body('Parse_JSON')?['AadUserId'])}"
                  }
                },
                "Parse_JSON": {
                  "runAfter": {},
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "$id": {
                          "type": "string"
                        },
                        "AadUserId": {
                          "type": "string"
                        },
                        "DisplayName": {
                          "type": "string"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureautomation": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureAutomationAccountConnectionName'))]",
                "connectionName": "[variables('AzureAutomationAccountConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureautomation')]"
              },
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              },
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "connectionName": "[variables('Office365ConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
              },
              "azuread": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                "connectionName": "[variables('AzureADConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
              }
            }
          }
        }
      }
    }
  ]
}