{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This playbook is intended to be run from a Microsoft Sentinel Incident. It will generate a post in a Slack channel you specify with the Microsoft Sentinel Incident and entity information.",
        "author": "Accelerynt"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AS-Slack-Integration",
            "type": "String"
        },
        "OAuthToken": {
            "defaultValue": "",
            "type": "SecureString"
        },
        "ChannelId": {
            "defaultValue": "Enter your Slack Channel Id",
            "type": "String"
        }
    },
    "variables": {
        "azuresentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_Check_and_Set_Severity_Icon": {
                            "actions": {
                                "Set_Severity_-_Red_Flag": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Severity Icon",
                                        "value": "https://th.bing.com/th/id/R.459b59aaeee9499c277f4a4c4a9d7a0f?rik=OFurNgKeq6sI6g&riu=http%3a%2f%2fwww.clipartbest.com%2fcliparts%2fRTd%2fLyK%2fRTdLyKxLc.png&ehk=6YaxK09DcKUp9KQ9oi04N8N7NY8aH8zR%2blZXn5gXZOE%3d&risl=&pid=ImgRaw&r=0"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Variable_-_Severity_Icon": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Condition_2": {
                                        "actions": {
                                            "Set_Severity_-_Orange_Flag": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "Severity Icon",
                                                    "value": "https://th.bing.com/th/id/OIP.0-yuIkLqsN5RAHpDzU6VkQHaHa?pid=ImgDet&rs=1"
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "else": {
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Set_Severity_-_Yellow_Flag": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "Severity Icon",
                                                                "value": "https://th.bing.com/th/id/OIP.DWrmvCvISdO8iH7v7Z7jBgHaHa?pid=ImgDet&rs=1"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Set_Severity_-_Grey_Flag": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "Severity Icon",
                                                                    "value": "https://th.bing.com/th/id/OIP.PAq1OwxsKw2sdSawoO6jvAAAAA?pid=ImgDet&rs=1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@triggerBody()?['object']?['properties']?['severity']",
                                                                    "Low"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['object']?['properties']?['severity']",
                                                        "Medium"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['object']?['properties']?['severity']",
                                            "High"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Check_if_Description_Exists": {
                            "actions": {
                                "Set_Variable_-_Format_Description": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Description",
                                        "value": "@{replace(triggerBody()?['object']?['properties']?['description'], '\n', '')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Variable_-_Description": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Variable_-_No_Description": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "Description",
                                            "value": "No Description"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()?['object']?['properties']?['description']",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Check_if_Entities_Exist": {
                            "actions": {
                                "Set_Variable_-_No_Entities": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Entities",
                                        "value": "No Entities"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Variable_-_Entities": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "For_Each_-_Entities": {
                                        "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                        "actions": {
                                            "Condition_-_Check_if_IP": {
                                                "actions": {
                                                    "Append_IP_Info_to_Entities_String_Variable": {
                                                        "runAfter": {
                                                            "Parse_JSON_-_IP_Info": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "Entities",
                                                            "value": ">Kind: *@{items('For_Each_-_Entities')?['kind']}*    Name: *@{items('For_Each_-_Entities')?['properties']?['friendlyName']}*    ISP: *@{body('Parse_JSON_-_IP_Info')?['isp']}*    Country: *@{body('Parse_JSON_-_IP_Info')?['country']}*\n"
                                                        }
                                                    },
                                                    "HTTP_-_Get_IP_Info": {
                                                        "runAfter": {},
                                                        "type": "Http",
                                                        "inputs": {
                                                            "method": "POST",
                                                            "uri": "http://ip-api.com/json/@{items('For_Each_-_Entities')?['properties']?['friendlyName']}"
                                                        }
                                                    },
                                                    "Parse_JSON_-_IP_Info": {
                                                        "runAfter": {
                                                            "HTTP_-_Get_IP_Info": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@body('HTTP_-_Get_IP_Info')",
                                                            "schema": {
                                                                "properties": {
                                                                    "as": {
                                                                        "type": "string"
                                                                    },
                                                                    "city": {
                                                                        "type": "string"
                                                                    },
                                                                    "country": {
                                                                        "type": "string"
                                                                    },
                                                                    "countryCode": {
                                                                        "type": "string"
                                                                    },
                                                                    "isp": {
                                                                        "type": "string"
                                                                    },
                                                                    "lat": {
                                                                        "type": "number"
                                                                    },
                                                                    "lon": {
                                                                        "type": "number"
                                                                    },
                                                                    "org": {
                                                                        "type": "string"
                                                                    },
                                                                    "query": {
                                                                        "type": "string"
                                                                    },
                                                                    "region": {
                                                                        "type": "string"
                                                                    },
                                                                    "regionName": {
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "type": "string"
                                                                    },
                                                                    "timezone": {
                                                                        "type": "string"
                                                                    },
                                                                    "zip": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "else": {
                                                    "actions": {
                                                        "Append_Entity_Info_to_Entities_String_Variable": {
                                                            "runAfter": {},
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "Entities",
                                                                "value": ">Kind:* @{items('For_Each_-_Entities')?['kind']}*    Name: *@{items('For_Each_-_Entities')?['properties']?['friendlyName']}*\n\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@items('For_Each_-_Entities')?['kind']",
                                                                "Ip"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            }
                                        },
                                        "runAfter": {},
                                        "type": "Foreach"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "HTTP_-_Post_Slack_Message": {
                            "runAfter": {
                                "Condition_-_Check_if_Entities_Exist": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "blocks": [
                                        {
                                            "text": {
                                                "text": "*@{triggerBody()?['object']?['properties']?['title']}*\n> @{variables('Description')} ",
                                                "type": "mrkdwn"
                                            },
                                            "type": "section"
                                        },
                                        {
                                            "accessory": {
                                                "alt_text": "severity icon",
                                                "image_url": "@variables('Severity Icon')",
                                                "type": "image"
                                            },
                                            "text": {
                                                "text": "*Severity*\n>@{triggerBody()?['object']?['properties']?['severity']}\n\n*Entities*\n@{variables('Entities')}",
                                                "type": "mrkdwn"
                                            },
                                            "type": "section"
                                        },
                                        {
                                            "text": {
                                                "text": "<@{triggerBody()?['object']?['properties']?['incidentUrl']}|Open incident on Azure Portal>",
                                                "type": "mrkdwn"
                                            },
                                            "type": "section"
                                        },
                                        {
                                            "type": "divider"
                                        }
                                    ],
                                    "channel": "[parameters('ChannelId')]"
                                },
                                "headers": {
                                    "Authorization": "[concat('Bearer ', parameters('OAuthToken'))]",
                                    "Content-type": "application/json; charset=utf-8"
                                },
                                "method": "POST",
                                "uri": "https://slack.com/api/chat.postMessage"
                            }
                        },
                        "Initialize_Variable_-_Description": {
                            "runAfter": {
                                "Condition_-_Check_and_Set_Severity_Icon": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Description",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Variable_-_Entities": {
                            "runAfter": {
                                "Condition_-_Check_if_Description_Exists": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Entities",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Variable_-_Severity_Icon": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Severity Icon",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
