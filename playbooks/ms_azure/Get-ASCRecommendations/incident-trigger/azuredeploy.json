{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Get-ASCRecommendations",
        "description": "This playbook will take each Host entity and If its an Azure Resource, query ASC API to get any ASC recommendations.  It will add a tag and comment if any unhealthy recommendations are found for the resource.",
        "prerequisites": "1. You will need to add the managed identity that is created by the logic app to the subscripton(s) of management group with Security Reader permissions.",
        "lastUpdateTime": "2021-06-03T00:00:00.000Z",
        "entities": [ "Account" ],
        "tags": [ "Enrich" ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Nicholas DiCola"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-ASCRecommendations",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"

    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Get-ASCRecommendations",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Entities_-_Get_Hosts": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "For_each": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Condition_3": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>ASC Recommedations found for Host: @{items('For_each')?['HostName']} / AzureID: @{items('For_each')?['AzureID']} -<br>\n @{variables('RecommendationsList')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {},
                                                    "type": "ApiConnection"
                                                },
                                                "Update_incident": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "tagsToAdd": {
                                                                "TagsToAdd": [
                                                                    {
                                                                        "Tag": "HasASCUnhealthyRecommendations"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "path": "/Incidents"
                                                    },
                                                    "runAfter": {
                                                        "Add_comment_to_incident_(V3)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('RecommendationsList')",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "For_each_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "For_each_3": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Append_to_array_variable": {
                                                            "inputs": {
                                                                "name": "RecommendationsList",
                                                                "value": "@items('For_each_3')?['properties']?['displayName']"
                                                            },
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@items('For_each_3')?['properties']?['status']?['code']",
                                                                    "Unhealthy"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Parse_JSON')?['value']",
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "HTTP": {
                                            "inputs": {
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/@{items('For_each')?['AzureID']}/providers/Microsoft.Security/assessments?api-version=2020-01-01"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "Parse_JSON": {
                                            "inputs": {
                                                "content": "@body('HTTP')",
                                                "schema": {
                                                    "properties": {
                                                        "nextLink": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "properties": {
                                                                        "properties": {
                                                                            "displayName": {
                                                                                "type": "string"
                                                                            },
                                                                            "resourceDetails": {
                                                                                "properties": {
                                                                                    "Id": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Source": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "status": {
                                                                                "properties": {
                                                                                    "cause": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "code": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "id",
                                                                    "name",
                                                                    "properties"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each')?['AzureID']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RecommendationsList",
                                        "type": "array",
                                        "value": "@null"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
