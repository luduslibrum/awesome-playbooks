{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Block Host Nested Remediation - Carbon Black",
    "description": "This playbook automatically quarantine the device and enrich sentinel incident with device information.",
    "mainSteps": [ "1. Fetches a list of potentially malicious Hosts.", "2. Quarantines the malicious Host." ],
    "prerequisites": [
      "1. Carbon Black connector needs to be deployed prior to the deployment of this playbook under the same subscription.",
      "2. Generate an API key to connect with carbon black connector. ",
      "3. Find Organziation key by refering this link [ Find Organization key by refering this link ](https://defense.conferdeploy.net/settings/connectors) "
    ],
    "lastUpdateTime": "2021-08-06T00:00:00.000Z",
    "entities": [ "Host" ],
    "tags": [ "Remediation" ],
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "Accenture"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "CarbonBlack-QuarantineDevice",
      "type": "string",
      "metadata": {
        "description": "Name of the Logic App/Playbook"
      }
    },
    "ConnectorName": {
      "defaultValue": "CarbonBlackCloudConnector",
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Firewall"
      }
    },
    "OrganizationKey": {
      "defaultValue": "OrganizationKey",
      "type": "string",
      "metadata": {
        "description": "CarbonBlack Org Key"
      }
    }
  },
  "variables": {
    "CarbonBlackConnectionName": "[concat('CarbonBlackCloudConnector-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('CarbonBlackConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/',parameters('ConnectorName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('CarbonBlackConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "Hosts": {
                      "items": {
                        "properties": {
                          "Hostname": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "Hostname"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "runs": 1
                }
              }
            }
          },
          "actions": {
            "Carbon_black_information": {
              "runAfter": {
                "Organization_Id": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "CarbonblackInformation",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "description": "Variable to store the devices information returned from carbon black cloud"
            },
            "Condition_to_check_the_scope": {
              "actions": {
                "Response": {
                  "runAfter": {},
                  "type": "Response",
                  "kind": "Http",
                  "inputs": {
                    "body": "@outputs('Compose_HTTP_Response')",
                    "statusCode": 200
                  },
                  "operationOptions": "Asynchronous"
                }
              },
              "runAfter": {
                "Filter_array": [
                  "Succeeded",
                  "TimedOut",
                  "Skipped",
                  "Failed"
                ]
              },
              "else": {
                "actions": {
                  "Compose_HTTP_Failed_Resposne": {
                    "runAfter": {
                      "Create_HTML_table": [
                        "Succeeded"
                      ]
                    },
                    "type": "Compose",
                    "inputs": "@{outputs('Compose')} Â CarbonBlack QuarantineDevice Playbook\n\nException occured while Quarantining the Device. Please find the below exception information:\n\n@{body('Create_HTML_table')}"
                  },
                  "Create_HTML_table": {
                    "runAfter": {
                      "Scope_output": [
                        "Succeeded"
                      ]
                    },
                    "type": "Table",
                    "inputs": {
                      "columns": [
                        {
                          "header": "MethodName",
                          "value": "@item()?['name']"
                        },
                        {
                          "header": "Error",
                          "value": "@item()?['error']?['message']"
                        },
                        {
                          "header": "Status",
                          "value": "@item()?['status']"
                        }
                      ],
                      "format": "HTML",
                      "from": "@outputs('Scope_output')"
                    }
                  },
                  "Response_if_playbook_get(s)_failed": {
                    "runAfter": {
                      "Compose_HTTP_Failed_Resposne": [
                        "Succeeded"
                      ]
                    },
                    "type": "Response",
                    "kind": "Http",
                    "inputs": {
                      "body": "@outputs('Compose_HTTP_Failed_Resposne')",
                      "statusCode": 500
                    },
                    "operationOptions": "Asynchronous"
                  },
                  "Scope_output": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": "@body('Filter_array')"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "lessOrEquals": [
                      "@length(body('Filter_array'))",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Failed_for_Quarantine": {
              "runAfter": {
                "Quarantined_devices": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "FailedforQuarantine",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "description": "Variable to store the devices information that failed for Quarantine"
            },
            "Filter_array": {
              "runAfter": {
                "Scope": [
                  "Succeeded",
                  "TimedOut",
                  "Skipped",
                  "Failed"
                ]
              },
              "type": "Query",
              "inputs": {
                "from": "@result('Scope')",
                "where": "@equals(item()?['status'], 'Failed')"
              }
            },
            "Initialize_variable": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Hosts",
                    "type": "array",
                    "value": "@triggerBody()?['Hosts']"
                  }
                ]
              }
            },
            "Organization_Id": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OrganizationKey",
                    "type": "string",
                    "value": "[parameters('OrganizationKey')]"
                  }
                ]
              },
              "description": "Pre-configured Organization Id"
            },
            "Quarantined_devices": {
              "runAfter": {
                "Carbon_black_information": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ActiontakendDevices",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "description": "Variable to store the quarantined devices information"
            },
            "Scope": {
              "actions": {
                "Compose": {
                  "runAfter": {
                    "Create_HTML_table_-_Quarantined_devices": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "<img src=\"https://avatars.githubusercontent.com/u/2071378?s=280&v=4\" alt=\"Lamp\" width=\"32\" height=\"32\">"
                },
                "Compose_HTTP_Response": {
                  "runAfter": {
                    "Compose": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "@{outputs('Compose')} Â CarbonBlack QuarantineDevice Playbook\n\nCarbonBlack QuarantineDevice playbook was triggered and collected the following information from Carbon Black:\n@{body('Create_HTML_table_-_Carbon_Black')}\n\nDevices that were quarantined by this playbook:\n\n@{body('Create_HTML_table_-_Quarantined_devices')}\n"
                },
                "Create_HTML_table_-_Carbon_Black": {
                  "runAfter": {
                    "For_each_hosts": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table",
                  "inputs": {
                    "columns": [
                      {
                        "header": "Devicename",
                        "value": "@item()?['name']"
                      },
                      {
                        "header": "Quarantined",
                        "value": "@item()?['quarantined']"
                      },
                      {
                        "header": "Policyname",
                        "value": "@item()?['policy_name']"
                      },
                      {
                        "header": "PolicyId",
                        "value": "@item()?['policy_id']"
                      },
                      {
                        "header": "DeviceownerId",
                        "value": "@item()?['device_owner_id']"
                      },
                      {
                        "header": "DeviceId",
                        "value": "@item()?['id']"
                      },
                      {
                        "header": "Devicestatus",
                        "value": "@item()?['status']"
                      },
                      {
                        "header": "Operatingsystem",
                        "value": "@item()?['os']"
                      },
                      {
                        "header": "OperatingsystemVersion",
                        "value": "@item()?['os_version']"
                      },
                      {
                        "header": "Organizationname",
                        "value": "@item()?['organization_name']"
                      },
                      {
                        "header": "Email",
                        "value": "@item()?['email']"
                      },
                      {
                        "header": "Sensorstates",
                        "value": "@join(item()?['sensor_states'],',')"
                      },
                      {
                        "header": "LastreportedTime",
                        "value": "@item()?['last_reported_time']"
                      },
                      {
                        "header": "SensorVersion",
                        "value": "@item()?['sensor_version']"
                      }
                    ],
                    "format": "HTML",
                    "from": "@variables('CarbonblackInformation')"
                  }
                },
                "Create_HTML_table_-_Quarantined_devices": {
                  "runAfter": {
                    "Create_HTML_table_-_Carbon_Black": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table",
                  "inputs": {
                    "columns": [
                      {
                        "header": "DeviceId",
                        "value": "@item()?['id']"
                      },
                      {
                        "header": "Devicename",
                        "value": "@item()?['name']"
                      },
                      {
                        "header": "Action",
                        "value": "@item()?['Action']"
                      }
                    ],
                    "format": "HTML",
                    "from": "@variables('ActiontakendDevices')"
                  }
                },
                "For_each_hosts": {
                  "foreach": "@variables('Hosts')",
                  "actions": {
                    "Condition": {
                      "actions": {
                        "For_each_results": {
                          "foreach": "@body('Search_devices_in_your_organization')?['results']",
                          "actions": {
                            "Condition_to_check_the_device_is_in_quarantine": {
                              "actions": {
                                "Condition_to_check_the_success_status_codes": {
                                  "actions": {
                                    "Condition_to_check_the_search_devices_returned_the_results": {
                                      "actions": {
                                        "For_each_search_results": {
                                          "foreach": "@body('Search_devices_in_your_organization_based_on_device_name')?['results']",
                                          "actions": {
                                            "Append_to_device_information": {
                                              "runAfter": {},
                                              "type": "AppendToArrayVariable",
                                              "inputs": {
                                                "name": "CarbonblackInformation",
                                                "value": "@item()"
                                              },
                                              "description": "Append device information that returned from carbon black"
                                            }
                                          },
                                          "runAfter": {},
                                          "type": "Foreach"
                                        }
                                      },
                                      "runAfter": {
                                        "Search_devices_in_your_organization_based_on_device_name": [
                                          "Succeeded"
                                        ]
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@body('Search_devices_in_your_organization_based_on_device_name')?['num_found']",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Search_devices_in_your_organization_based_on_device_name": {
                                      "runAfter": {
                                        "Store_devices_information_-_Quarantined": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "body": {
                                          "query": "name : @{items('For_each_hosts')?['HostName']}"
                                        },
                                        "headers": {
                                          "Content-Type": "application/json"
                                        },
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$connections')['CarbonBlackCloudConnector']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "path": "/appservices/v6/orgs/@{encodeURIComponent(variables('OrganizationKey'))}/devices/_search"
                                      }
                                    },
                                    "Store_devices_information_-_Quarantined": {
                                      "runAfter": {},
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "ActiontakendDevices",
                                        "value": {
                                          "Action": "This device was quarantined successfully",
                                          "id": "@items('For_each_results')?['id']",
                                          "name": "@items('For_each_results')?['name']"
                                        }
                                      },
                                      "description": "Append each devices that quarantined"
                                    }
                                  },
                                  "runAfter": {
                                    "device_actions": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Append_carbon_black_information_-_device_id_in_Quarantine": {
                                        "runAfter": {},
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "CarbonblackInformation",
                                          "value": "@item()"
                                        },
                                        "description": "Append device information that returned from carbon black"
                                      },
                                      "Devices_that_Failed_for_quarantined": {
                                        "runAfter": {
                                          "Append_carbon_black_information_-_device_id_in_Quarantine": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "FailedforQuarantine",
                                          "value": "@item()"
                                        },
                                        "description": "Variable to store the devices that failed to set the devices in quarantine"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "or": [
                                      {
                                        "equals": [
                                          "@outputs('device_actions')?['statusCode']",
                                          200
                                        ]
                                      },
                                      {
                                        "equals": [
                                          "@outputs('device_actions')?['statusCode']",
                                          204
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "device_actions": {
                                  "runAfter": {},
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": {
                                      "action_type": "QUARANTINE",
                                      "device_id": [
                                        "@{items('For_each_results')?['id']}"
                                      ],
                                      "options": {
                                        "toggle": "ON"
                                      }
                                    },
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['CarbonBlackCloudConnector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/appservices/v6/orgs/@{encodeURIComponent(variables('OrganizationKey'))}/device_actions"
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                      "name": "CarbonblackInformation",
                                      "value": "@item()"
                                    }
                                  },
                                  "Condition_to_check_the_device_OS": {
                                    "actions": {
                                      "Store_devices_information_-_Linux": {
                                        "runAfter": {},
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "ActiontakendDevices",
                                          "value": {
                                            "Action": "Not supported on devices of OS type Linux",
                                            "id": "@items('For_each_results')?['id']",
                                            "name": "@items('For_each_results')?['name']"
                                          }
                                        },
                                        "description": "Quarantined is not supported for Linux OS"
                                      }
                                    },
                                    "runAfter": {
                                      "Append_to_array_variable": [
                                        "Succeeded"
                                      ]
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "equals": [
                                            "@toLower(item()?['os'])",
                                            "linux"
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@items('For_each_results')?['quarantined']",
                                      false
                                    ]
                                  },
                                  {
                                    "not": {
                                      "equals": [
                                        "@toLower(item()?['os'])",
                                        "linux"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {},
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Search_devices_in_your_organization": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Host_not_found": {
                            "runAfter": {},
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "ActiontakendDevices",
                              "value": {
                                "Action": "Device not found",
                                "id": "",
                                "name": "@items('For_each_hosts')?['Hostname']"
                              }
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@body('Search_devices_in_your_organization')?['num_found']",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Search_devices_in_your_organization": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "query": "name : @{items('For_each_hosts')?['HostName']}"
                        },
                        "headers": {
                          "Content-Type": "application/json"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['CarbonBlackCloudConnector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/appservices/v6/orgs/@{encodeURIComponent(variables('OrganizationKey'))}/devices/_search"
                      }
                    }
                  },
                  "runAfter": {},
                  "type": "Foreach",
                  "runtimeConfiguration": {
                    "concurrency": {
                      "repetitions": 1
                    }
                  }
                }
              },
              "runAfter": {
                "Failed_for_Quarantine": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "CarbonBlackCloudConnector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('CarbonBlackConnectionName'))]",
                "connectionName": "[variables('CarbonBlackConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/',parameters('ConnectorName'))]"
              }
            }
          }
        }
      }
    }
  ]
}