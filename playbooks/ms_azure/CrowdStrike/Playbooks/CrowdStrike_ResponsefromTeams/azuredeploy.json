{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This playbook prompts SOC to take necessary actions on Host like Contain/LiftContainment/Run Script/Ignore",
    "author": "Sindhu Talluri, Crowdstrike"
  },
  "parameters": {

    "PlaybookName": {
      "defaultValue": "Crowdstrike-ResponsefromTeams",
      "type": "String",
      "metadata": {
        "description": "Name of the Logic App/Playbook"
      }
    },

    "CrowdStrike_Base_Playbook_Name": {
      "defaultValue": "CrowdStrike_Base",
      "type": "String",
      "metadata": {
        "description": "Name of the base Logic App/Playbook"
      }
    },
    "Teams GroupId": {
      "defaultValue": "TeamgroupId",
      "type": "String",
      "metadata": {
        "description": "GroupId of the Team channel"
      }
    },
    "Teams ChannelId": {
      "defaultValue": "TeamChannelId",
      "type": "String",
      "metadata": {
        "description": "Team ChannelId"
      }
    }
  },
  "variables": {
    "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
    "TeamsConnectionName": "[concat('teamsconnector-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Add_comment_to_incident_(V3)": {
              "runAfter": {
                "Compose_image_to_add_in_the_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "incidentArmId": "@triggerBody()?['object']?['id']",
                  "message": "<p>@{outputs('Compose_image_to_add_in_the_incident')} &nbsp;<span style=\"font-size: 16px\"><strong>Crowdstrike_ResponsefromTeams playbook run results :<br>\n</strong></span><span style=\"font-size: 12px\"><strong>Device information:<br>\n</strong></span><span style=\"font-size: 12px\"><strong>@{variables('DeviceInfo')}</strong></span><span style=\"font-size: 12px\"><strong><br>\nActions Taken :</strong></span><br>\n@{variables('ActionTaken')}<br>\n</p>"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Incidents/Comment"
              },
              "description": "This comments in the incident"
            },
            "Append_to_array_variable_device_actions_to_Ignore": {
              "type": "AppendToArrayVariable",
              "inputs": {
                "name": "DeviceActions",
                "value": {
                  "title": "Ignore",
                  "type": "Action.Submit"
                }
              },
              "runAfter": {
                "Condition_to_check_if_device_id_returns_results": [
                  "Succeeded"
                ]
              },
              "description": "appends Ignore option to device actions"
            },
            "Compose_image_to_add_in_the_incident": {
              "type": "Compose",
              "inputs": "<img src=\"https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg\" alt=\"Lamp\" width=\"32\" height=\"32\">\n",
              "runAfter": {
                "Post_your_own_adaptive_card_as_the_Flow_bot_to_a_channel": [
                  "Succeeded"
                ]
              },
              "description": "This composes image to be added in the comments of the incident"
            },
            "Condition_to_check_if_SOC_changes_incident_configuration": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']",
                        "Ignore"
                      ]
                    }
                  }
                ]
              },
              "actions": {
                "Update_incident": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "classification": {
                        "ClassificationAndReason": "@{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['incidentStatus']}",
                        "ClassificationReasonText": "Crowdstrike_ResponsefromTeams playbook ran and closed this incident"
                      },
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "severity": "@{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['incidentSeverity']}",
                      "status": "Closed"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "put",
                    "path": "/Incidents"
                  },
                  "description": "This updates the azure sentinel incident"
                }
              },
              "runAfter": {
                "Add_comment_to_incident_(V3)": [
                  "Succeeded"
                ]
              },
              "description": "This checks if SOC changed the incident configuration"
            },
            "Condition_to_check_if_device_id_returns_results": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@body('Parse_JSON_Get_device_id_response')?['resources']?[0]",
                        "@null"
                      ]
                    }
                  }
                ]
              },
              "actions": {
                "Condition_to_check_if_any_policies_are_present": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@body('Parse_JSON_device_information_response')?['resources']?[0]?['policies']?[0]",
                            "@null"
                          ]
                        }
                      }
                    ]
                  },
                  "actions": {
                    "Append_to_array_variable_adaptive_card_body_policies": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "Adaptivecardbody",
                        "value": {
                          "columns": [
                            {
                              "items": "@body('Select_policies_to_display_in_the_adaptive_card')",
                              "type": "Column"
                            }
                          ],
                          "type": "ColumnSet"
                        }
                      },
                      "runAfter": {
                        "Append_to_array_variable_adaptive_card_policy_text": [
                          "Succeeded"
                        ]
                      },
                      "description": "This appends the list of policies to display in adaptive card"
                    },
                    "Append_to_array_variable_adaptive_card_policy_text": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "Adaptivecardbody",
                        "value": {
                          "text": "Applied policies on this host:",
                          "type": "TextBlock"
                        }
                      },
                      "runAfter": {
                        "Select_policies_to_display_in_the_adaptive_card": [
                          "Succeeded"
                        ]
                      },
                      "description": "This appends text to adaptive card body for policy text"
                    },
                    "Select_policies_to_display_in_the_adaptive_card": {
                      "type": "Select",
                      "inputs": {
                        "from": "@body('Parse_JSON_device_information_response')?['resources']?[0]?['policies']",
                        "select": {
                          "text": "@item()?['policy_type']",
                          "type": "TextBlock"
                        }
                      },
                      "runAfter": {},
                      "description": "This composes the policies to be displayed on the adaptive card"
                    }
                  },
                  "runAfter": {
                    "Switch_to_check_the_status_of_the_host": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Append_to_array_variable_if_no_policies_are_present": {
                        "type": "AppendToArrayVariable",
                        "inputs": {
                          "name": "Adaptivecardbody",
                          "value": {
                            "text": "There are no policies applied for this host",
                            "type": "TextBlock"
                          }
                        },
                        "runAfter": {},
                        "description": "This appends text to adaptive card body if no policies are present"
                      }
                    }
                  },
                  "description": "This checks if any policies are present"
                },
                "Create_HTML_table_for_device_information": {
                  "type": "Table",
                  "inputs": {
                    "from": "@body('Parse_JSON_device_information_response')?['resources']",
                    "format": "HTML",
                    "columns": [
                      {
                        "header": "device_id",
                        "value": "@item()?['device_id']"
                      },
                      {
                        "header": "external_ip",
                        "value": "@item()?['external_ip']"
                      },
                      {
                        "header": "mac_address",
                        "value": "@item()?['mac_address']"
                      },
                      {
                        "header": "hostname",
                        "value": "@item()?['hostname']"
                      },
                      {
                        "header": "first_seen",
                        "value": "@item()?['first_seen']"
                      },
                      {
                        "header": "last_seen",
                        "value": "@item()?['last_seen']"
                      },
                      {
                        "header": "local_ip",
                        "value": "@item()?['local_ip']"
                      },
                      {
                        "header": "machine_domain",
                        "value": "@item()?['machine_domain']"
                      },
                      {
                        "header": "os_version",
                        "value": "@item()?['os_version']"
                      }
                    ]
                  },
                  "runAfter": {
                    "Parse_JSON_device_information_response": [
                      "Succeeded"
                    ]
                  },
                  "description": "prepare html table of device information"
                },
                "HTTP_-_Get_device_information": {
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/entities/devices/v1?ids=@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}",
                    "headers": {
                      "Accept": "application/json",
                      "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                      "Content-Type": "application/json"
                    }
                  },
                  "runAfter": {},
                  "description": "This gets the device information from crowdstrike"
                },
                "Parse_JSON_device_information_response": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('HTTP_-_Get_device_information')",
                    "schema": {
                      "properties": {
                        "errors": {
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "powered_by": {
                              "type": "string"
                            },
                            "query_time": {
                              "type": "number"
                            },
                            "trace_id": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "resources": {
                          "items": {
                            "properties": {
                              "agent_load_flags": {
                                "type": "string"
                              },
                              "agent_local_time": {
                                "type": "string"
                              },
                              "agent_version": {
                                "type": "string"
                              },
                              "bios_manufacturer": {
                                "type": "string"
                              },
                              "bios_version": {
                                "type": "string"
                              },
                              "build_number": {
                                "type": "string"
                              },
                              "cid": {
                                "type": "string"
                              },
                              "config_id_base": {
                                "type": "string"
                              },
                              "config_id_build": {
                                "type": "string"
                              },
                              "config_id_platform": {
                                "type": "string"
                              },
                              "cpu_signature": {
                                "type": "string"
                              },
                              "device_id": {
                                "type": "string"
                              },
                              "device_policies": {
                                "properties": {
                                  "device_control": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {
                                        "type": "string"
                                      },
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "firewall": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {
                                        "type": "string"
                                      },
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      },
                                      "rule_set_id": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "global_config": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {
                                        "type": "string"
                                      },
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      },
                                      "settings_hash": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "prevention": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {
                                        "type": "string"
                                      },
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      },
                                      "rule_groups": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "settings_hash": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "remote_response": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {
                                        "type": "string"
                                      },
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      },
                                      "settings_hash": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sensor_update": {
                                    "properties": {
                                      "applied": {
                                        "type": "boolean"
                                      },
                                      "applied_date": {},
                                      "assigned_date": {
                                        "type": "string"
                                      },
                                      "policy_id": {
                                        "type": "string"
                                      },
                                      "policy_type": {
                                        "type": "string"
                                      },
                                      "settings_hash": {
                                        "type": "string"
                                      },
                                      "uninstall_protection": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "external_ip": {
                                "type": "string"
                              },
                              "first_seen": {
                                "type": "string"
                              },
                              "group_hash": {
                                "type": "string"
                              },
                              "groups": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "hostname": {
                                "type": "string"
                              },
                              "last_seen": {
                                "type": "string"
                              },
                              "local_ip": {
                                "type": "string"
                              },
                              "mac_address": {
                                "type": "string"
                              },
                              "machine_domain": {
                                "type": "string"
                              },
                              "major_version": {
                                "type": "string"
                              },
                              "meta": {
                                "properties": {
                                  "version": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "minor_version": {
                                "type": "string"
                              },
                              "modified_timestamp": {
                                "type": "string"
                              },
                              "os_version": {
                                "type": "string"
                              },
                              "ou": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "platform_id": {
                                "type": "string"
                              },
                              "platform_name": {
                                "type": "string"
                              },
                              "pointer_size": {
                                "type": "string"
                              },
                              "policies": {
                                "items": {
                                  "properties": {
                                    "applied": {
                                      "type": "boolean"
                                    },
                                    "applied_date": {
                                      "type": "string"
                                    },
                                    "assigned_date": {
                                      "type": "string"
                                    },
                                    "policy_id": {
                                      "type": "string"
                                    },
                                    "policy_type": {
                                      "type": "string"
                                    },
                                    "rule_groups": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "settings_hash": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "policy_type",
                                    "policy_id",
                                    "applied",
                                    "settings_hash",
                                    "assigned_date",
                                    "applied_date",
                                    "rule_groups"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "product_type": {
                                "type": "string"
                              },
                              "product_type_desc": {
                                "type": "string"
                              },
                              "provision_status": {
                                "type": "string"
                              },
                              "reduced_functionality_mode": {
                                "type": "string"
                              },
                              "serial_number": {
                                "type": "string"
                              },
                              "service_pack_major": {
                                "type": "string"
                              },
                              "service_pack_minor": {
                                "type": "string"
                              },
                              "site_name": {
                                "type": "string"
                              },
                              "slow_changing_modified_timestamp": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "system_manufacturer": {
                                "type": "string"
                              },
                              "system_product_name": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "array"
                              }
                            },
                            "required": [
                              "device_id",
                              "cid",
                              "agent_load_flags",
                              "agent_local_time",
                              "agent_version",
                              "bios_manufacturer",
                              "bios_version",
                              "build_number",
                              "config_id_base",
                              "config_id_build",
                              "config_id_platform",
                              "cpu_signature",
                              "external_ip",
                              "mac_address",
                              "hostname",
                              "first_seen",
                              "last_seen",
                              "local_ip",
                              "major_version",
                              "minor_version",
                              "os_version",
                              "platform_id",
                              "platform_name",
                              "policies",
                              "reduced_functionality_mode",
                              "device_policies",
                              "groups",
                              "group_hash",
                              "product_type",
                              "product_type_desc",
                              "provision_status",
                              "serial_number",
                              "service_pack_major",
                              "service_pack_minor",
                              "pointer_size",
                              "status",
                              "system_manufacturer",
                              "system_product_name",
                              "tags",
                              "modified_timestamp",
                              "slow_changing_modified_timestamp",
                              "meta"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "HTTP_-_Get_device_information": [
                      "Succeeded"
                    ]
                  },
                  "description": "prepare json for device information"
                },
                "Set_variable_adaptive_card_body_if_host_is_present": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Adaptivecardbody",
                    "value": [
                      {
                        "size": "large",
                        "text": "Suspicious Device - Azure Sentinel",
                        "type": "TextBlock",
                        "weight": "bolder",
                        "wrap": true
                      },
                      {
                        "text": "Possible comprised device detected by the provider ",
                        "type": "TextBlock",
                        "wrap": true
                      },
                      {
                        "text": " @{triggerBody()?['object']?['properties']?['severity']} Incident - CrowdStrike actions @{triggerBody()?['object']?['properties']?['title']}",
                        "type": "TextBlock",
                        "weight": "Bolder",
                        "wrap": true
                      },
                      {
                        "text": " Incident No  :  @{triggerBody()?['object']?['properties']?['incidentNumber']} ",
                        "type": "TextBlock",
                        "weight": "Bolder",
                        "wrap": true
                      },
                      {
                        "text": "Incident description",
                        "type": "TextBlock",
                        "weight": "Bolder",
                        "wrap": true
                      },
                      {
                        "text": "@{triggerBody()?['object']?['properties']?['description']}",
                        "type": "TextBlock",
                        "wrap": true
                      },
                      {
                        "text": "[[Click here to view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                        "type": "TextBlock",
                        "wrap": true
                      },
                      {
                        "size": "Small",
                        "style": "Person",
                        "type": "Image",
                        "url": "https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg"
                      },
                      {
                        "text": "CrowdStrike host information",
                        "type": "TextBlock",
                        "weight": "Bolder"
                      },
                      {
                        "text": "Hostname: @{body('Parse_JSON_device_information_response')?['resources']?[0]?['hostname']}",
                        "type": "TextBlock",
                        "weight": "Bolder"
                      },
                      {
                        "text": "local_ip: @{body('Parse_JSON_device_information_response')?['resources']?[0]?['local_ip']} ",
                        "type": "TextBlock"
                      },
                      {
                        "text": "machine_domain: @{body('Parse_JSON_device_information_response')?['resources']?[0]?['machine_domain']} ",
                        "type": "TextBlock"
                      },
                      {
                        "text": "os_version:  @{body('Parse_JSON_device_information_response')?['resources']?[0]?['os_version']} ",
                        "type": "TextBlock"
                      }
                    ]
                  },
                  "runAfter": {
                    "Set_variable_device_info": [
                      "Succeeded"
                    ]
                  },
                  "description": "set adaptive card body with host information if host is present"
                },
                "Set_variable_device_info": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "DeviceInfo",
                    "value": "@body('Create_HTML_table_for_device_information')"
                  },
                  "runAfter": {
                    "Create_HTML_table_for_device_information": [
                      "Succeeded"
                    ]
                  },
                  "description": "sets device info to comment in the incident"
                },
                "Switch_to_check_the_status_of_the_host": {
                  "type": "Switch",
                  "expression": "@body('Parse_JSON_device_information_response')?['resources']?[0]?['status']",
                  "cases": {
                    "Case_-_conatined": {
                      "case": "contained",
                      "actions": {
                        "Append_to_array_variable_adaptive_card_body_if_host_is_contained": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "Adaptivecardbody",
                            "value": {
                              "text": "Host status is contained",
                              "type": "TextBlock",
                              "weight": "Bolder",
                              "wrap": true
                            }
                          },
                          "runAfter": {},
                          "description": "This appends adaptive card body if host is contained"
                        },
                        "Append_to_array_variable_device_actions_if_status_is_contained": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "DeviceActions",
                            "value": {
                              "title": "Lift Containment",
                              "type": "Action.Submit"
                            }
                          },
                          "runAfter": {
                            "Append_to_array_variable_adaptive_card_body_if_host_is_contained": [
                              "Succeeded"
                            ]
                          }
                        }
                      }
                    },
                    "Case_-_containment_pending": {
                      "case": "containment_pending",
                      "actions": {
                        "Append_to_array_variable_adaptive_card_body_if_containment_pending_status": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "Adaptivecardbody",
                            "value": {
                              "text": "Host status is in the process of moving from un-contained to contained",
                              "type": "TextBlock",
                              "weight": "Bolder",
                              "wrap": true
                            }
                          },
                          "runAfter": {
                            "Set_variable_device_actions_to_empty_for_containment_pending": [
                              "Succeeded"
                            ]
                          },
                          "description": "This appends adaptive card body if host status is containment pending"
                        },
                        "Set_variable_device_actions_to_empty_for_containment_pending": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "DeviceActions",
                            "value": [
                              {
                                "title": "Submit",
                                "type": "Action.Submit"
                              }
                            ]
                          },
                          "runAfter": {},
                          "description": "This sets the device actions if status is containment pending"
                        }
                      }
                    },
                    "Case_-_lift_containment_pending": {
                      "case": "lift_containment_pending",
                      "actions": {
                        "Append_to_array_variable_adaptive_card_body_if_lift_containment_pending_status": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "Adaptivecardbody",
                            "value": {
                              "text": "Host status is in the process of moving from contained to un-contained",
                              "type": "TextBlock",
                              "weight": "Bolder",
                              "wrap": true
                            }
                          },
                          "runAfter": {
                            "Set_variable_device_actions_to_empty_for_lift_containment_pending": [
                              "Succeeded"
                            ]
                          },
                          "description": "This appends adaptive card body if host status is lift containment pending"
                        },
                        "Set_variable_device_actions_to_empty_for_lift_containment_pending": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "DeviceActions",
                            "value": [
                              {
                                "title": "Submit",
                                "type": "Action.Submit"
                              }
                            ]
                          },
                          "runAfter": {},
                          "description": "This sets the device actions if status is lift containment pending"
                        }
                      }
                    },
                    "Case_-_not_contained": {
                      "case": "normal",
                      "actions": {
                        "Append_to_array_variable_adaptive_card_body_for_normal_status": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "Adaptivecardbody",
                            "value": {
                              "text": "Host is not contained",
                              "type": "TextBlock",
                              "weight": "Bolder",
                              "wrap": true
                            }
                          },
                          "runAfter": {},
                          "description": "This appends text to adaptive card body if host is not contained"
                        },
                        "Append_to_array_variable_device_actions": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "DeviceActions",
                            "value": {
                              "title": "Contain",
                              "type": "Action.Submit"
                            }
                          },
                          "runAfter": {
                            "Append_to_array_variable_adaptive_card_body_for_normal_status": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Condition_to_check_the_scripts": {
                          "type": "If",
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@body('Parse_JSON_get_scripts_response')?['resources']?[0]",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "actions": {
                            "Append_to_array_variable_device_actions_to_contain": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "DeviceActions",
                                "value": {
                                  "card": {
                                    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                    "actions": [
                                      {
                                        "title": "Run",
                                        "type": "Action.Submit"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "text": "Choose a script to run ",
                                        "type": "TextBlock",
                                        "wrap": true
                                      },
                                      {
                                        "choices": "@variables('Scriptoptions')",
                                        "id": "script",
                                        "type": "Input.ChoiceSet"
                                      }
                                    ],
                                    "type": "AdaptiveCard"
                                  },
                                  "title": "Run Script",
                                  "type": "Action.ShowCard"
                                }
                              },
                              "runAfter": {
                                "Set_variable_script_options": [
                                  "Succeeded"
                                ]
                              },
                              "description": "This sets the device actions to contain"
                            },
                            "Select_script_names_to_display_in_the_adaptive_card_dropdown": {
                              "type": "Select",
                              "inputs": {
                                "from": "@body('Parse_JSON_get_scripts_response')?['resources']",
                                "select": {
                                  "title": "@item()?['name']",
                                  "value": "@item()?['name']"
                                }
                              },
                              "runAfter": {},
                              "description": "This selects all the script names to display in the adaptive card"
                            },
                            "Set_variable_script_options": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Scriptoptions",
                                "value": "@body('Select_script_names_to_display_in_the_adaptive_card_dropdown')"
                              },
                              "runAfter": {
                                "Select_script_names_to_display_in_the_adaptive_card_dropdown": [
                                  "Succeeded"
                                ]
                              },
                              "description": "This sets the script names to script options variable"
                            }
                          },
                          "runAfter": {
                            "Parse_JSON_get_scripts_response": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Append_to_array_variable_adaptive_card_body_if_no_scripts_are_present": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "Adaptivecardbody",
                                  "value": {
                                    "text": "There are no scripts to run ",
                                    "type": "TextBlock",
                                    "wrap": true
                                  }
                                },
                                "runAfter": {
                                  "Append_to_array_variable_device_actions_if_no_scripts_are_available": [
                                    "Succeeded"
                                  ]
                                },
                                "description": "appends adaptive carb body text if no scripts are present"
                              },
                              "Append_to_array_variable_device_actions_if_no_scripts_are_available": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "DeviceActions",
                                  "value": {}
                                },
                                "runAfter": {
                                  "Set_variable_script_options_to_empty_if_no_scripts_are_available": [
                                    "Succeeded"
                                  ]
                                },
                                "description": "appends device actions to empty if no scripts were run"
                              },
                              "Set_variable_script_options_to_empty_if_no_scripts_are_available": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Scriptoptions",
                                  "value": []
                                },
                                "runAfter": {},
                                "description": "This sets the script options to null if no scripts are present"
                              }
                            }
                          },
                          "description": "condition to check if scripts are present in the device"
                        },
                        "HTTP_-_Get_Scripts": {
                          "type": "Http",
                          "inputs": {
                            "method": "GET",
                            "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/real-time-response/entities/scripts/v1",
                            "headers": {
                              "Accept": "application/json",
                              "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                              "Content-Type": "application/json"
                            }
                          },
                          "runAfter": {
                            "Append_to_array_variable_device_actions": [
                              "Succeeded"
                            ]
                          },
                          "description": "This gets the list of scripts in the falcon host"
                        },
                        "Parse_JSON_get_scripts_response": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP_-_Get_Scripts')",
                            "schema": {
                              "properties": {
                                "body": {
                                  "properties": {
                                    "meta": {
                                      "properties": {
                                        "powered_by": {
                                          "type": "string"
                                        },
                                        "query_time": {
                                          "type": "number"
                                        },
                                        "trace_id": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "resources": {
                                      "items": {
                                        "properties": {
                                          "content": {
                                            "type": "string"
                                          },
                                          "created_by": {
                                            "type": "string"
                                          },
                                          "created_by_uuid": {
                                            "type": "string"
                                          },
                                          "created_timestamp": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "file_type": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          },
                                          "modified_by": {
                                            "type": "string"
                                          },
                                          "modified_timestamp": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "permission_type": {
                                            "type": "string"
                                          },
                                          "platform": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "run_attempt_count": {
                                            "type": "integer"
                                          },
                                          "run_success_count": {
                                            "type": "integer"
                                          },
                                          "sha256": {
                                            "type": "string"
                                          },
                                          "size": {
                                            "type": "integer"
                                          },
                                          "write_access": {
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "description",
                                          "file_type",
                                          "platform",
                                          "size",
                                          "content",
                                          "created_by",
                                          "created_by_uuid",
                                          "created_timestamp",
                                          "modified_by",
                                          "modified_timestamp",
                                          "sha256",
                                          "permission_type",
                                          "run_attempt_count",
                                          "run_success_count",
                                          "write_access"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "headers": {
                                  "properties": {
                                    "Content-Length": {
                                      "type": "string"
                                    },
                                    "Content-Type": {
                                      "type": "string"
                                    },
                                    "Date": {
                                      "type": "string"
                                    },
                                    "X-Cs-Region": {
                                      "type": "string"
                                    },
                                    "X-Ratelimit-Limit": {
                                      "type": "string"
                                    },
                                    "X-Ratelimit-Remaining": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "statusCode": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "HTTP_-_Get_Scripts": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepare Json for get script response body"
                        }
                      }
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Set_variable_adaptive_card_body_if_host_is_present": [
                      "Succeeded"
                    ]
                  },
                  "description": "This checks the status on the host"
                }
              },
              "runAfter": {
                "Parse_JSON_Get_device_id_response": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Append_to_array_variable_action_summary_if_no_devices_are_present": {
                    "type": "AppendToArrayVariable",
                    "inputs": {
                      "name": "ActionSummary",
                      "value": {
                        "text": "No devices are present",
                        "type": "TextBlock"
                      }
                    },
                    "runAfter": {
                      "Append_to_array_variable_device_actions_if_no_devices_are_present": [
                        "Succeeded"
                      ]
                    },
                    "description": "appends action summary if no devices are present"
                  },
                  "Append_to_array_variable_device_actions_if_no_devices_are_present": {
                    "type": "AppendToArrayVariable",
                    "inputs": {
                      "name": "DeviceActions",
                      "value": {
                        "title": "Submit",
                        "type": "Action.Submit"
                      }
                    },
                    "runAfter": {
                      "Set_variable_device_info_if_no_devices_are_present": [
                        "Succeeded"
                      ]
                    },
                    "description": "appends device actions if no devices are present"
                  },
                  "Append_to_string_variable_action_taken_if_no_devices_are_present": {
                    "type": "AppendToStringVariable",
                    "inputs": {
                      "name": "ActionTaken",
                      "value": "No devices are present..So no action taken on device"
                    },
                    "runAfter": {
                      "Append_to_array_variable_action_summary_if_no_devices_are_present": [
                        "Succeeded"
                      ]
                    },
                    "description": "appends action taken if no devices are present"
                  },
                  "Set_variable_adaptive_card_body_if_no_devices_are_present": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "Adaptivecardbody",
                      "value": [
                        {
                          "size": "large",
                          "text": "Suspicious Device - Azure Sentinel",
                          "type": "TextBlock",
                          "weight": "bolder",
                          "wrap": true
                        },
                        {
                          "text": "Possible comprised device detected by the provider ",
                          "type": "TextBlock",
                          "wrap": true
                        },
                        {
                          "text": " @{triggerBody()?['object']?['properties']?['severity']} Incident @{triggerBody()?['object']?['properties']?['title']} ",
                          "type": "TextBlock",
                          "weight": "Bolder",
                          "wrap": true
                        },
                        {
                          "text": " Incident No  :  @{triggerBody()?['object']?['properties']?['incidentNumber']} ",
                          "type": "TextBlock",
                          "weight": "Bolder",
                          "wrap": true
                        },
                        {
                          "text": "Incident description",
                          "type": "TextBlock",
                          "weight": "Bolder",
                          "wrap": true
                        },
                        {
                          "text": "@{triggerBody()?['object']?['properties']?['description']}",
                          "type": "TextBlock",
                          "wrap": true
                        },
                        {
                          "text": "[[Click here to view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                          "type": "TextBlock",
                          "wrap": true
                        },
                        {
                          "size": "Small",
                          "style": "Person",
                          "type": "Image",
                          "url": "https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg"
                        },
                        {
                          "text": "CrowdStrike",
                          "type": "TextBlock",
                          "weight": "Bolder"
                        },
                        {
                          "text": "Hostname : @{body('Entities_-_Get_Hosts')?['Hosts']?[0]?['HostName']}",
                          "type": "TextBlock",
                          "weight": "Bolder"
                        },
                        {
                          "text": "There are no devices present ",
                          "type": "TextBlock",
                          "weight": "Bolder"
                        }
                      ]
                    },
                    "runAfter": {},
                    "description": "prepare adaptive card body if no devices are present"
                  },
                  "Set_variable_device_info_if_no_devices_are_present": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "DeviceInfo",
                      "value": "No devices are present"
                    },
                    "runAfter": {
                      "Set_variable_adaptive_card_body_if_no_devices_are_present": [
                        "Succeeded"
                      ]
                    },
                    "description": "sets device info to comment in the incident"
                  }
                }
              },
              "description": "This checks if device id is present in crowdstrike"
            },
            "CrowdStrike_Base": {
              "runAfter": {
                "Initialize_variable_actions_taken": [
                  "Succeeded"
                ]
              },
              "type": "Workflow",
              "inputs": {
                "host": {
                  "triggerName": "manual",
                  "workflow": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name ,'/providers/Microsoft.Logic/workflows/', parameters('CrowdStrike_Base_Playbook_Name'))]"
                  }
                }
              },
              "description": "call to base logic app to get the access token and Falcon host URL",
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              }
            },
            "CrowdStrike_Base_call_after_SOC_responds": {
              "runAfter": {
                "Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response": [
                  "Succeeded"
                ]
              },
              "type": "Workflow",
              "inputs": {
                "host": {
                  "triggerName": "manual",
                  "workflow": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name ,'/providers/Microsoft.Logic/workflows/', parameters('CrowdStrike_Base_Playbook_Name'))]"
                  }
                }
              },
              "description": "This calls the crowdstrike base playbook where we will generate the authentication key again as it expires every 30 mins",
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              }
            },
            "Entities_-_Get_Hosts": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/host"
              }

            },
            "HTTP_-_Get_device_id": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/queries/devices/v1?filter=hostname:'@{body('Entities_-_Get_Hosts')?['Hosts']?[0]?['HostName']}'",
                "headers": {
                  "Accept": "application/json",
                  "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                  "Content-Type": "application/json"
                }
              },
              "runAfter": {
                "CrowdStrike_Base": [
                  "Succeeded"
                ]
              },
              "description": "This filters the device id by hostname"
            },
            "Initialize_variable_action_summary": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ActionSummary",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_adaptive_card_body": [
                  "Succeeded"
                ]
              },
              "description": "variable to store action summary json to display in summarized adaptive card"
            },
            "Initialize_variable_actions_taken": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ActionTaken",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_script_options": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_adaptive_card_body": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Adaptivecardbody",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "runAfter": {
                "Entities_-_Get_Hosts": [
                  "Succeeded"
                ]
              },
              "description": "variable to store adaptive card body json"
            },
            "Initialize_variable_device_actions": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "DeviceActions",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_action_summary": [
                  "Succeeded"
                ]
              },
              "description": "variable to store device actions such as contain/lift containment or Ignore"
            },
            "Initialize_variable_device_information": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "DeviceInfo",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_device_actions": [
                  "Succeeded"
                ]
              },
              "description": "variable to store device information"
            },
            "Initialize_variable_script_options": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Scriptoptions",
                    "type": "array",
                    "value": []
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_device_information": [
                  "Succeeded"
                ]
              },
              "description": "This holds the script options such as script names and Ignore"
            },
            "Parse_JSON_Get_device_id_response": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP_-_Get_device_id')",
                "schema": {
                  "errors": [],
                  "meta": {
                    "pagination": {
                      "limit": 100,
                      "offset": 1,
                      "total": 1
                    },
                    "powered_by": "device-api",
                    "query_time": 0.005041315,
                    "trace_id": "aa7b84f5-3e81-4980-ad9f-c14b6d8ca577"
                  },
                  "resources": [
                    "cdc977a72a8c49528bb82f89dde2c2e9"
                  ]
                }
              },
              "runAfter": {
                "HTTP_-_Get_device_id": [
                  "Succeeded"
                ]
              },
              "description": "prepare json from get device id response"
            },
            "Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response": {
              "runAfter": {
                "Append_to_array_variable_device_actions_to_Ignore": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "body": {
                    "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\":[\n{\n  \"columns\": [\n    {\n      \"items\": @{variables('Adaptivecardbody')},\n      \"type\": \"Column\"\n    }\n  ],\n  \"type\": \"ColumnSet\"\n},\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"size\": \"Medium\",\n                            \"weight\": \"Bolder\",\n                            \"text\": \"Incident configuration :\",\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"Image\",\n                            \"style\": \"Person\",\n                            \"url\": \"https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png\",\n                            \"size\": \"Small\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Close Azure Sentinal incident?\"\n        },\n        {\n            \"choices\": [\n                {\n                    \"isSelected\": true,\n                    \"title\": \"False Positive - Inaccurate Data\",\n                    \"value\": \"False Positive - Inaccurate Data\"\n                },\n                {\n                    \"isSelected\": true,\n                    \"title\": \"False Positive - Incorrect Alert Logic\",\n                    \"value\": \"False Positive - Incorrect Alert Logic\"\n                },\n                {\n                    \"title\": \"True Positive - Suspicious Activity\",\n                    \"value\": \"True Positive - Suspicious Activity\"\n                },\n                {\n                    \"title\": \"Benign Positive - Suspicious But Expected\",\n                    \"value\": \"Benign Positive - Suspicious But Expected\"\n                },\n                {\n                    \"title\": \"Undetermined\",\n                    \"value\": \"Undetermined\"\n                }\n            ],\n            \"id\": \"incidentStatus\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"Benign Positive - Suspicious But Expected\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Change Azure Sentinel Incident Severity?\"\n        },\n        {\n            \"choices\": [\n                {\n                  \n                    \"title\": \"High\",\n                    \"value\": \"High\"\n                },\n                {\n                    \"title\": \"Medium\",\n                    \"value\": \"Medium\"\n                },\n                {\n                    \"title\": \"Low\",\n                    \"value\": \"Low\"\n                },\n                {\n                    \"title\": \"Don't change\",\n                    \"value\": \"same\"\n                }\n            ],\n            \"id\": \"incidentSeverity\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"@{triggerBody()?['object']?['properties']?['severity']}\"\n        }\n],\n\t\"actions\": @{variables('DeviceActions')},\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                    "recipient": {
                      "channelId": "[parameters('Teams ChannelId')]"
                    },
                    "shouldUpdateCard": true
                  },
                  "notificationUrl": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['teams']['connectionId']"
                  }
                },
                "path": "/flowbot/actions/flowcontinuation/recipienttypes/channel/$subscriptions",
                "queries": {
                  "groupId": "[parameters('Teams GroupId')]"
                }
              }
            },
            "Post_your_own_adaptive_card_as_the_Flow_bot_to_a_channel": {
              "runAfter": {
                "Switch_to_take_action_on_device_based_on_SOC_choice": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n  {\n    \"size\": \"large\",\n    \"text\": \"Suspicious Device - Azure Sentinel\",\n    \"type\": \"TextBlock\",\n    \"weight\": \"bolder\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \"Possible comprised device detected by the provider \",\n    \"type\": \"TextBlock\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \" @{triggerBody()?['object']?['properties']?['severity']} Incident @{triggerBody()?['object']?['properties']?['title']} \",\n    \"type\": \"TextBlock\",\n    \"weight\": \"Bolder\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \" Incident No :  @{triggerBody()?['object']?['properties']?['incidentNumber']} \",\n    \"type\": \"TextBlock\",\n    \"weight\": \"Bolder\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \"Incident description\",\n    \"type\": \"TextBlock\",\n    \"weight\": \"Bolder\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \"@{triggerBody()?['object']?['properties']?['description']}\",\n    \"type\": \"TextBlock\",\n    \"wrap\": true\n  },\n  {\n    \"text\": \"[Click here to view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})\",\n    \"type\": \"TextBlock\",\n    \"wrap\": true\n  },\n  {\n    \"size\": \"Small\",\n    \"style\": \"Person\",\n    \"type\": \"Image\",\n    \"url\": \"https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg\"\n  },\n        {\n            \"type\": \"TextBlock\",\n            \"weight\": \"Bolder\",\n            \"text\": \"Below is the summary of actions taken by SOC\",\n            \"wrap\": true\n        },\n {\n            \"type\": \"TextBlock\",\n            \"weight\": \"Bolder\",\n             \"text\": \"Hostname : @{body('Entities_-_Get_Hosts')?['Hosts']?[0]?['HostName']}\",\n             \"wrap\": true\n        },\n    {\n  \"columns\": [\n    {\n      \"items\": @{variables('ActionSummary')},\n      \"type\": \"Column\",\n      \"wrap\": true\n    }\n  ],\n  \"separator\": \"true\",\n  \"type\": \"ColumnSet\",\n  \"width\": \"stretch\"\n}\n ],\n\"width\":\"auto\",\n \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n \"version\": \"1.2\"\n}",
                  "recipient": {
                    "channelId": "[parameters('Teams ChannelId')]"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['teams']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/flowbot/actions/adaptivecard/recipienttypes/channel",
                "queries": {
                  "groupId": "[parameters('Teams GroupId')]"
                }
              },
              "description": "This posts a summarized adaptive card to SOC"
            },
            "Switch_to_take_action_on_device_based_on_SOC_choice": {
              "type": "Switch",
              "expression": "@body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']",
              "cases": {
                "Case": {
                  "case": "Submit",
                  "actions": {
                    "Append_to_array_variable_action_summary_in_case_of_submit": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "ActionSummary",
                        "value": {
                          "text": "No actions taken on the host",
                          "type": "TextBlock"
                        }
                      },
                      "runAfter": {},
                      "description": "appends action summary in case of submit"
                    },
                    "Append_to_string_variable_action_taken_in_case_of_submit": {
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "ActionTaken",
                        "value": "No actions taken on the host"
                      },
                      "runAfter": {
                        "Append_to_array_variable_action_summary_in_case_of_submit": [
                          "Succeeded"
                        ]
                      },
                      "description": "appends action taken in case of submit"
                    }
                  }
                },
                "Case_-_Contain_a_host": {
                  "case": "Contain",
                  "actions": {
                    "Condition_to_check_if_contain_success_or_not": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('HTTP_Contain_a_device')['statusCode']",
                              202
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Append_to_array_variable_action_summary_in_case_of_contain_success": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "ActionSummary",
                            "value": {
                              "text": " @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']}  the device , Status : Success",
                              "type": "TextBlock"
                            }
                          },
                          "runAfter": {},
                          "description": "This appends action summary in case of contain a host success"
                        },
                        "Append_to_string_variable_action_taken_in_case_of_contain_success": {
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "ActionTaken",
                            "value": " @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']} the device , Status : Success"
                          },
                          "runAfter": {
                            "Append_to_array_variable_action_summary_in_case_of_contain_success": [
                              "Succeeded"
                            ]
                          },
                          "description": "This appends action taken in case of contain a host success"
                        }
                      },
                      "runAfter": {
                        "HTTP_Contain_a_device": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Append_to_array_variable_action_summary_in_case_of_contain_failure": {
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "ActionSummary",
                              "value": {
                                "text": " @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']} device , Status : Failed , Error : @{body('HTTP_Contain_a_device')?['errors']} , Statuscode : @{outputs('HTTP_Contain_a_device')['statusCode']}",
                                "type": "TextBlock"
                              }
                            },
                            "runAfter": {},
                            "description": "This appends action summary in case of contain a host failure"
                          },
                          "Append_to_string_variable_in_case_of_contain_failure": {
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "ActionTaken",
                              "value": " @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['submitActionId']} device , Status : Failed , Error : @{body('HTTP_Contain_a_device')?['errors']} , Statuscode : @{outputs('HTTP_Contain_a_device')['statusCode']}"
                            },
                            "runAfter": {
                              "Append_to_array_variable_action_summary_in_case_of_contain_failure": [
                                "Succeeded"
                              ]
                            },
                            "description": "This appends action taken in case of contain a host failure"
                          }
                        }
                      },
                      "description": "This checks if contain success or not in crowdstrike"
                    },
                    "HTTP_Contain_a_device": {
                      "type": "Http",
                      "inputs": {
                        "method": "POST",
                        "uri": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['FalconHost']}/devices/entities/devices-actions/v2?action_name=contain",
                        "headers": {
                          "Accept": "application/json",
                          "Authorization": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['AccessToken']}",
                          "Content-Type": "application/json"
                        },
                        "body": {
                          "action_parameters": [
                            {
                              "name": "contain"
                            }
                          ],
                          "ids": [
                            "@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}"
                          ]
                        }
                      },
                      "runAfter": {},
                      "description": "This contains a host in crowdstrike"
                    }
                  }
                },
                "Case_-_Ignore": {
                  "case": "Ignore",
                  "actions": {
                    "Append_to_array_variable_in_case_of_ignore_host": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "ActionSummary",
                        "value": {
                          "text": "No actions taken on the host",
                          "type": "TextBlock"
                        }
                      },
                      "runAfter": {},
                      "description": "This appends action summary to Ignore in case of ignore"
                    },
                    "Append_to_string_variable_action_taken_in_case_of_ignore": {
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "ActionTaken",
                        "value": "No actions taken on the host"
                      },
                      "runAfter": {
                        "Append_to_array_variable_in_case_of_ignore_host": [
                          "Succeeded"
                        ]
                      },
                      "description": "This appends action taken in case of Ignore"
                    }
                  }
                },
                "Case_-_Lift_containment": {
                  "case": "Lift Containment",
                  "actions": {
                    "Condition_to_check_if_lift_containment_is_success_or_not": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('HTTP_Lift_containment_on_device')['statusCode']",
                              202
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Append_to_array_variable_action_summary_in_case_of_lift_containment_successful": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "ActionSummary",
                            "value": {
                              "text": " Containment lifted , Status : Success",
                              "type": "TextBlock"
                            }
                          },
                          "runAfter": {},
                          "description": "This appends action summary in case of lift containment success"
                        },
                        "Append_to_string_variable_action_taken_in_case_of_lift_containment_success": {
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "ActionTaken",
                            "value": " Containment lifted , Status : Success"
                          },
                          "runAfter": {
                            "Append_to_array_variable_action_summary_in_case_of_lift_containment_successful": [
                              "Succeeded"
                            ]
                          },
                          "description": "This appends action taken in case of lift containment success"
                        }
                      },
                      "runAfter": {
                        "HTTP_Lift_containment_on_device": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Append_to_array_variable_action_summary_in_case_of_lift_containment_failure": {
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "ActionSummary",
                              "value": {
                                "text": "Containment not lifted , Status : Failure , Error : @{body('HTTP_Lift_containment_on_device')?['errors']} , Statuscode :  @{outputs('HTTP_Lift_containment_on_device')['statusCode']}",
                                "type": "TextBlock"
                              }
                            },
                            "runAfter": {},
                            "description": "This appends action summary in case of lift containment failure"
                          },
                          "Append_to_string_variable_action_taken_in_case_of_lift_containment_failure": {
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "ActionTaken",
                              "value": "  Containment not lifted , Status : Failure , Error : @{body('HTTP_Lift_containment_on_device')?['errors']} , Statuscode :  @{outputs('HTTP_Lift_containment_on_device')['statusCode']}\n"
                            },
                            "runAfter": {
                              "Append_to_array_variable_action_summary_in_case_of_lift_containment_failure": [
                                "Succeeded"
                              ]
                            },
                            "description": "This appends action taken in case of lift containment failure"
                          }
                        }
                      },
                      "description": "This checks if lift containment success or not from crowdstrike"
                    },
                    "HTTP_Lift_containment_on_device": {
                      "type": "Http",
                      "inputs": {
                        "method": "POST",
                        "uri": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['FalconHost']}/devices/entities/devices-actions/v2?action_name=lift_containment",
                        "headers": {
                          "Accept": "application/json",
                          "Authorization": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['AccessToken']}",
                          "Content-Type": "application/json"
                        },
                        "body": {
                          "action_parameters": [
                            {
                              "name": "lift_containment"
                            }
                          ],
                          "ids": [
                            "@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}"
                          ]
                        }
                      },
                      "runAfter": {},
                      "description": "This lifts the containment on host in crowdstrike"
                    }
                  }
                },
                "Case_-_Run_a_script": {
                  "case": "Run",
                  "actions": {
                    "Condition_to_run_a_script_if_SOC_selects_run_a_script": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "actions": {
                        "Condition_to_check_if_session_to_host_is_created_or_not": {
                          "type": "If",
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@outputs('HTTP_create_a_session_to_host_to_run_a_script')?['statusCode']",
                                  201
                                ]
                              }
                            ]
                          },
                          "actions": {
                            "Condition_to_check_if_run_a_script_on_host_is_success_or_not": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_run_a_script')['statusCode']",
                                      201
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Append_to_array_variable_action_summary_if_run_script_success": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "ActionSummary",
                                    "value": {
                                      "text": "Run script @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} , Status : Success",
                                      "type": "TextBlock"
                                    }
                                  },
                                  "runAfter": {},
                                  "description": "appends action summary if script run success"
                                },
                                "Append_to_string_variable_action_taken_if_run_script_success": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "ActionTaken",
                                    "value": "Run script  @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} and Status : Success"
                                  },
                                  "runAfter": {
                                    "Append_to_array_variable_action_summary_if_run_script_success": [
                                      "Succeeded"
                                    ]
                                  },
                                  "description": "appends action taken if run script success"
                                }
                              },
                              "runAfter": {
                                "HTTP_run_a_script": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Append_to_array_variable_action_summary_if_run_script_failed": {
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                      "name": "ActionSummary",
                                      "value": {
                                        "text": "Run script @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} , Status : Failure , Error : @{outputs('HTTP_run_a_script')['errors']} , statuscode : @{outputs('HTTP_run_a_script')['statusCode']}",
                                        "type": "TextBlock"
                                      }
                                    },
                                    "runAfter": {},
                                    "description": "appends action summary if script run failed"
                                  },
                                  "Append_to_string_variable_action_taken_if_run_script_failed": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                      "name": "ActionTaken",
                                      "value": "Run script @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} and Status : Failure  , Error  : @{outputs('HTTP_run_a_script')['errors']} , statuscode : @{outputs('HTTP_run_a_script')['statusCode']}"
                                    },
                                    "runAfter": {
                                      "Append_to_array_variable_action_summary_if_run_script_failed": [
                                        "Succeeded"
                                      ]
                                    },
                                    "description": "appends action taken if run script success"
                                  }
                                }
                              },
                              "description": "This checks if run a script is success or not"
                            },
                            "HTTP_run_a_script": {
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['FalconHost']}/real-time-response/entities/admin-command/v1",
                                "headers": {
                                  "Accept": "application/json",
                                  "Authorization": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['AccessToken']}",
                                  "Content-Type": "application/json"
                                },
                                "body": {
                                  "base_command": "runscript",
                                  "command_string": "runscript -CloudFile=@{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']}",
                                  "session_id": "@{body('Parse_JSON_create_a_session_to_a_host')?['resources']?[0]?['session_id']}"
                                }
                              },
                              "runAfter": {
                                "Parse_JSON_create_a_session_to_a_host": [
                                  "Succeeded"
                                ]
                              },
                              "description": "Run a script in crowdstrike host"
                            },
                            "Parse_JSON_create_a_session_to_a_host": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('HTTP_create_a_session_to_host_to_run_a_script')",
                                "schema": {
                                  "properties": {
                                    "body": {
                                      "properties": {
                                        "errors": {},
                                        "meta": {
                                          "properties": {
                                            "powered_by": {
                                              "type": "string"
                                            },
                                            "query_time": {
                                              "type": "number"
                                            },
                                            "trace_id": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "resources": {
                                          "items": {
                                            "properties": {
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "existing_aid_sessions": {
                                                "type": "integer"
                                              },
                                              "offline_queued": {
                                                "type": "boolean"
                                              },
                                              "pwd": {
                                                "type": "string"
                                              },
                                              "scripts": {
                                                "items": {
                                                  "properties": {
                                                    "args": {
                                                      "items": {
                                                        "properties": {
                                                          "arg_name": {
                                                            "type": "string"
                                                          },
                                                          "arg_type": {
                                                            "type": "string"
                                                          },
                                                          "command_level": {
                                                            "type": "string"
                                                          },
                                                          "created_at": {
                                                            "type": "string"
                                                          },
                                                          "data_type": {
                                                            "type": "string"
                                                          },
                                                          "default_value": {
                                                            "type": "string"
                                                          },
                                                          "description": {
                                                            "type": "string"
                                                          },
                                                          "encoding": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "integer"
                                                          },
                                                          "options": {},
                                                          "required": {
                                                            "type": "boolean"
                                                          },
                                                          "requires_value": {
                                                            "type": "boolean"
                                                          },
                                                          "script_id": {
                                                            "type": "integer"
                                                          },
                                                          "sequence": {
                                                            "type": "integer"
                                                          },
                                                          "updated_at": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "created_at",
                                                          "updated_at",
                                                          "script_id",
                                                          "arg_type",
                                                          "data_type",
                                                          "requires_value",
                                                          "arg_name",
                                                          "description",
                                                          "default_value",
                                                          "required",
                                                          "sequence",
                                                          "options",
                                                          "encoding",
                                                          "command_level"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "command": {
                                                      "type": "string"
                                                    },
                                                    "description": {
                                                      "type": "string"
                                                    },
                                                    "examples": {
                                                      "type": "string"
                                                    },
                                                    "internal_only": {
                                                      "type": "boolean"
                                                    },
                                                    "runnable": {
                                                      "type": "boolean"
                                                    },
                                                    "sub_commands": {
                                                      "type": "array"
                                                    }
                                                  },
                                                  "required": [
                                                    "command",
                                                    "description",
                                                    "examples",
                                                    "internal_only",
                                                    "runnable",
                                                    "sub_commands",
                                                    "args"
                                                  ],
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "session_id": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "session_id",
                                              "scripts",
                                              "existing_aid_sessions",
                                              "created_at",
                                              "pwd",
                                              "offline_queued"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "headers": {
                                      "properties": {
                                        "Content-Length": {
                                          "type": "string"
                                        },
                                        "Content-Type": {
                                          "type": "string"
                                        },
                                        "Date": {
                                          "type": "string"
                                        },
                                        "Transfer-Encoding": {
                                          "type": "string"
                                        },
                                        "X-Cs-Region": {
                                          "type": "string"
                                        },
                                        "X-Ratelimit-Limit": {
                                          "type": "string"
                                        },
                                        "X-Ratelimit-Remaining": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "statusCode": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "runAfter": {},
                              "description": "prepare json message for create session to host"
                            }
                          },
                          "runAfter": {
                            "HTTP_create_a_session_to_host_to_run_a_script": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Append_to_array_variable_action_summary_if_session_not_created_to_host": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "ActionSummary",
                                  "value": {
                                    "text": "Script @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} did not run as not able to establish/create a session to that host , Status : Failure ",
                                    "type": "TextBlock"
                                  }
                                },
                                "runAfter": {},
                                "description": "appends action summary if session not created to host"
                              },
                              "Append_to_string_variable_action_taken_if_session_not_created_to_host": {
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "ActionTaken",
                                  "value": "Script @{body('Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response')?['data']?['script']} did not run and Status : Failure  , Error  : Not able to create a session to that host"
                                },
                                "runAfter": {
                                  "Append_to_array_variable_action_summary_if_session_not_created_to_host": [
                                    "Succeeded"
                                  ]
                                },
                                "description": "appends action taken if no host session is established"
                              }
                            }
                          },
                          "description": "This checks if session is created or not"
                        },
                        "HTTP_create_a_session_to_host_to_run_a_script": {
                          "type": "Http",
                          "inputs": {
                            "method": "POST",
                            "uri": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['FalconHost']}/real-time-response/entities/sessions/v1",
                            "headers": {
                              "": "application/json",
                              "Accept": "application/json",
                              "Authorization": "@{body('CrowdStrike_Base_call_after_SOC_responds')?['AccessToken']}"
                            },
                            "body": {
                              "device_id": "@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}"
                            }
                          },
                          "runAfter": {},
                          "description": "This creates an RTR session to host in crowdstrike"
                        }
                      },
                      "runAfter": {},
                      "else": {
                        "actions": {
                          "Append_to_array_variable_action_summary_if_no_scripts_are_selected_to_run": {
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "ActionSummary",
                              "value": {
                                "text": "No script selected to run ",
                                "type": "TextBlock"
                              }
                            },
                            "runAfter": {},
                            "description": "This appends action summary if no script is selected"
                          },
                          "Append_to_string_variable_action_taken_if_no_script_seleted_to_run": {
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "ActionTaken",
                              "value": "No script selected to run"
                            },
                            "runAfter": {
                              "Append_to_array_variable_action_summary_if_no_scripts_are_selected_to_run": [
                                "Succeeded"
                              ]
                            },
                            "description": "appends action taken if no script selected to run"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {}
              },
              "runAfter": {
                "CrowdStrike_Base_call_after_SOC_responds": [
                  "Succeeded"
                ]
              },
              "description": "This checks the SOC choice and leas to different actions based on choice"
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}

        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                      "type": "ManagedServiceIdentity"
                  }
              }
              },
              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "connectionName": "[variables('TeamsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
              }
            }
          }
        }
      },
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
    },
      "dependsOn": [

        "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"

      ]

    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
          "displayName": "[variables('AzureSentinelConnectionName')]",
          "customParameterValues": {},
          "parameterValueType": "Alternative",
          "api": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
          }
      }
  },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[variables('TeamsConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
        }

      }
    }
  ],
  "outputs": {}
}