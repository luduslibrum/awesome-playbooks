<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Enable and disable specific users at the beginning and end of the working day" Description="" Details="" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; x:Name=&quot;CustomWorkflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;CreateMemoryTable x:Name=&quot;createMemoryTable1&quot; activityLicenseType=&quot;1&quot; id=&quot;291&quot; name=&quot;CreateMemoryTable&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; ColumnNumber=&quot;1&quot; TableName=&quot;Users&quot; RowNumber=&quot;5&quot; isEmptyGrid=&quot;0&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Creates a table and saves it to the workflow memory&quot; DisplayName=&quot;Create Memory Table&quot; TypeName=&quot;CreateMemoryTable&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt; &amp;lt;xs:schema id='NewDataSet' xmlns='' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:msdata='urn:schemas-microsoft-com:xml-msdata'&amp;gt; &amp;lt;xs:element name='NewDataSet' msdata:IsDataSet='true' msdata:MainDataTable='resultSet' msdata:UseCurrentLocale='true'&amp;gt; &amp;lt;xs:complexType&amp;gt; &amp;lt;xs:choice minOccurs='0' maxOccurs='unbounded'&amp;gt; &amp;lt;xs:element name='resultSet'&amp;gt; &amp;lt;xs:complexType&amp;gt; &amp;lt;xs:sequence&amp;gt; &amp;lt;xs:element name='UserName' type='xs:string' minOccurs='0' /&amp;gt; &amp;lt;/xs:sequence&amp;gt; &amp;lt;/xs:complexType&amp;gt; &amp;lt;/xs:element&amp;gt; &amp;lt;/xs:choice&amp;gt; &amp;lt;/xs:complexType&amp;gt; &amp;lt;/xs:element&amp;gt; &amp;lt;/xs:schema&amp;gt; &amp;lt;resultSet&amp;gt;&amp;lt;UserName&amp;gt;user1&amp;lt;/UserName&amp;gt;&amp;lt;/resultSet&amp;gt;&amp;lt;resultSet&amp;gt;&amp;lt;UserName&amp;gt;user2&amp;lt;/UserName&amp;gt;&amp;lt;/resultSet&amp;gt;&amp;lt;resultSet&amp;gt;&amp;lt;UserName&amp;gt;user3&amp;lt;/UserName&amp;gt;&amp;lt;/resultSet&amp;gt;&amp;lt;resultSet&amp;gt;&amp;lt;UserName&amp;gt;user4&amp;lt;/UserName&amp;gt;&amp;lt;/resultSet&amp;gt;&amp;lt;resultSet&amp;gt;&amp;lt;UserName&amp;gt;user5&amp;lt;/UserName&amp;gt;&amp;lt;/resultSet&amp;gt; &amp;lt;/NewDataSet&amp;gt;&quot; label=&quot;Create Memory Table&quot; description=&quot;Creates a memory table.&quot; notes=&quot;&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; /&gt;&lt;GetRowsCount x:Name=&quot;getRowsCount1&quot; activityLicenseType=&quot;1&quot; id=&quot;287&quot; name=&quot;GetRowsCount&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%Users%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;Users&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; label=&quot;Get Rows Count&quot; description=&quot;Gets the amount of rows in a resultset.&quot; notes=&quot;&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; activityLicenseType=&quot;1&quot; id=&quot;432&quot; name=&quot;WhileActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; Condition=&quot;{x:Null}&quot; label=&quot;WhileActivity&quot; notes=&quot;&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ExitWhile IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; whileSequenceActivity=&quot;sequenceActivity1&quot; name=&quot;ExitWhile&quot; x:Name=&quot;exitWhile1&quot; /&gt;&lt;GetCellValue x:Name=&quot;UserName&quot; activityLicenseType=&quot;1&quot; id=&quot;276&quot; name=&quot;GetCellValue&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%Users%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;Users&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; label=&quot;Get Cell Value&quot; description=&quot;Gets a specific cell value from a resultset.&quot; notes=&quot;&quot; /&gt;&lt;AzureADEnableUser x:Name=&quot;azureADEnableUser1&quot; activityLicenseType=&quot;2&quot; id=&quot;653&quot; name=&quot;AzureADEnableUser&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;AzureActivateUser&quot; Description=&quot;Enable an Azure AD user&quot; userId=&quot;%UserName%&quot; appId=&quot;APPLICATION_ID&quot; tenantId=&quot;TENANT_ID&quot; secret=&quot;SECRET&quot; TypeName=&quot;AzureADEnableUser&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; isDefault=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Not Contains(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Success&quot; ConditionType=&quot;Not Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue1&quot; /&gt;&lt;DeleteMemoryTableRows x:Name=&quot;deleteMemoryTableRows1&quot; activityLicenseType=&quot;1&quot; id=&quot;285&quot; name=&quot;DeleteMemoryTableRows&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Delete Memory Table Rows&quot; Description=&quot;Deletes specified rows from a table, indicated by their numbers&quot; ResultSetName=&quot;%Users%&quot; ResultSet=&quot;%Users%&quot; RowNumber=&quot;%exitWhile1%&quot; TypeName=&quot;DeleteMemoryTableRows&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;True&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot;&gt;&lt;ReturnValue Formula=&quot;=Contains(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Success&quot; ConditionType=&quot;Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue3&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ConvertToPlainText x:Name=&quot;convertToPlainText1&quot; activityLicenseType=&quot;1&quot; id=&quot;290&quot; name=&quot;ConvertToPlainText&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Convert to Plain Text&quot; Description=&quot;Converts a table variable into plain text and stores it in a different variable&quot; Value=&quot;%Users%&quot; TypeName=&quot;ConvertToPlainText&quot; /&gt;&lt;OfficeSendMail x:Name=&quot;officeSendMail1&quot; activityLicenseType=&quot;2&quot; id=&quot;621&quot; name=&quot;OfficeSendMail&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;OfficeSendMail&quot; Description=&quot;Send an email on behalf of a Office365 user&quot; subject=&quot;The following users have been successfully enabled&quot; fromEmail=&quot;FROM_EMAIL&quot; toEmail=&quot;TO_EMAIL&quot; messageBody=&quot;%convertToPlainText1%&quot; appId=&quot;APPLICATION_ID&quot; tenantId=&quot;TENANT_ID&quot; secret=&quot;SECRET&quot; TypeName=&quot;OfficeSendMail&quot; /&gt;&lt;Wait x:Name=&quot;wait1&quot; activityLicenseType=&quot;1&quot; id=&quot;333&quot; name=&quot;Wait&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; TimeInterval=&quot;Seconds&quot; isDefault=&quot;1&quot; DisplayName=&quot;Wait&quot; TimeInSeconds=&quot;32400&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Pauses the Workflow for a specified period of time&quot; TypeName=&quot;Wait&quot; TimeValue=&quot;10&quot; Timeout=&quot;09:00:00&quot; label=&quot;Wait&quot; description=&quot;Pause workflow&quot; notes=&quot;&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; /&gt;&lt;GetRowsCount x:Name=&quot;getRowsCount2&quot; activityLicenseType=&quot;1&quot; id=&quot;287&quot; name=&quot;GetRowsCount&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%Users%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;Users&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; label=&quot;Get Rows Count&quot; description=&quot;Gets the amount of rows in a resultset.&quot; notes=&quot;&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity2&quot; activityLicenseType=&quot;1&quot; id=&quot;432&quot; name=&quot;WhileActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; Condition=&quot;{x:Null}&quot; label=&quot;WhileActivity&quot; notes=&quot;&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity2&quot;&gt;&lt;ExitWhile IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount2%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; whileSequenceActivity=&quot;sequenceActivity2&quot; name=&quot;ExitWhile&quot; x:Name=&quot;exitWhile2&quot; isValid=&quot;True&quot; /&gt;&lt;GetCellValue x:Name=&quot;UserName2&quot; activityLicenseType=&quot;1&quot; id=&quot;276&quot; name=&quot;GetCellValue&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%Users%&quot; RowNumber=&quot;%exitWhile2%&quot; ResultSetName=&quot;Users&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; label=&quot;Get Cell Value&quot; description=&quot;Gets a specific cell value from a resultset.&quot; notes=&quot;&quot; /&gt;&lt;AzureADDisableUser x:Name=&quot;azureADDisableUser1&quot; activityLicenseType=&quot;2&quot; id=&quot;654&quot; name=&quot;AzureADDisableUser&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;AzureDeactivateUser&quot; Description=&quot;Disable an Azure AD user&quot; userId=&quot;%UserName2%&quot; appId=&quot;APPLICATION_ID&quot; tenantId=&quot;TENANT_ID&quot; secret=&quot;SECRET&quot; TypeName=&quot;AzureADDisableUser&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity2&quot; activityLicenseType=&quot;1&quot; id=&quot;429&quot; name=&quot;IfElseActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity3&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot; isDefault=&quot;False&quot;&gt;&lt;ReturnValue Formula=&quot;=Not Contains(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Success&quot; ConditionType=&quot;Not Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;False&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue5&quot; /&gt;&lt;DeleteMemoryTableRows x:Name=&quot;deleteMemoryTableRows2&quot; activityLicenseType=&quot;1&quot; id=&quot;285&quot; name=&quot;DeleteMemoryTableRows&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Delete Memory Table Rows&quot; Description=&quot;Deletes specified rows from a table, indicated by their numbers&quot; ResultSetName=&quot;%Users%&quot; ResultSet=&quot;%Users%&quot; RowNumber=&quot;%exitWhile2%&quot; TypeName=&quot;DeleteMemoryTableRows&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity4&quot; id=&quot;{x:Null}&quot; name=&quot;IfElseBranchActivity&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; label=&quot;IfElseBranchActivity&quot; isDefault=&quot;True&quot; description=&quot;Executes the activities following this branch when the conditions are met&quot;&gt;&lt;ReturnValue Formula=&quot;=Contains(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Success&quot; ConditionType=&quot;Contains&quot; Description=&quot;&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseCustomeCondition=&quot;False&quot; UseBranchWhenTimeout=&quot;True&quot; name=&quot;ReturnValue&quot; DisplayName=&quot;Return Value&quot; TypeName=&quot;ReturnValue&quot; Disabled=&quot;False&quot; ClusterID=&quot;{x:Null}&quot; ClusterName=&quot;{x:Null}&quot; x:Name=&quot;returnValue7&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ConvertToPlainText x:Name=&quot;convertToPlainText2&quot; activityLicenseType=&quot;1&quot; id=&quot;290&quot; name=&quot;ConvertToPlainText&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Convert to Plain Text&quot; Description=&quot;Converts a table variable into plain text and stores it in a different variable&quot; Value=&quot;%Users%&quot; TypeName=&quot;ConvertToPlainText&quot; /&gt;&lt;OfficeSendMail x:Name=&quot;officeSendMail2&quot; activityLicenseType=&quot;2&quot; id=&quot;621&quot; name=&quot;OfficeSendMail&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; isJsonValid=&quot;True&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;OfficeSendMail&quot; Description=&quot;Send an email on behalf of a Office365 user&quot; subject=&quot;The following users have been successfully disabled&quot; fromEmail=&quot;FROM_EMAIL&quot; toEmail=&quot;TO_EMAIL&quot; messageBody=&quot;%convertToPlainText2%&quot; appId=&quot;APPLICATION_ID&quot; tenantId=&quot;TENANT_ID&quot; secret=&quot;SECRET&quot; TypeName=&quot;OfficeSendMail&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="1" name="Active Directory">
    </Tag>
  </Tags>
</Workflow>