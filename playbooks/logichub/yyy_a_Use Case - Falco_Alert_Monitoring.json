{
  "flows": [
    {
      "name": "yyy_a_Use Case - Falco_Alert_Monitoring",
      "nodes": [
        {
          "id": "01727e77-e3a6-403a-b0d2-be8cb60ab978",
          "name": "Multiple_alerts_by_same_user_FINAL",
          "kind": "augmentation",
          "lql": "`select lhub_score, concat(username, \" triggered '\",log_rule,\"' multiple times\") AS alertTitle,\n\nprintf('A single user has triggered the same alert multiple times:\n\nUSERNAME: %s\n\nRULE NAME: %s\n\nTIMES TRIGGERED: %s\n\nK8S NAMESPACES: %s\n\nK8S POD NAMES: %s\n\nHOST NAMES: %s\n\nPOD NAMES: %s\n\nCOMMANDS: %s\n\nFirst seen: %s\n\nLast seen: %s\n\n', username, log_rule, _count, k8s_namespaces, k8s_podnames, hosts, pod_names, commands, from_unixtime(startTime/1000),from_unixtime(endTime/1000)) as alertDetails\nfrom DETECTION_Multiple_alerts_by_same_user`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 884,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "38e9e967-251f-439f-829f-fd8d9541ef1e",
          "name": "All_Alerts",
          "kind": "augmentation",
          "lql": "unionAll(New_Falco_Rule_Fire_FINAL, High_Volume_Low_Priority_Alerts_FINAL, Alerts_by_a_service_account_FINAL, Username_triggering_multiple_rules_FINAL, Multiple_alerts_by_same_user_FINAL)",
          "operator": "unionAll",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 1016,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "unionAll"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Union All",
          "usedByEventTypes": []
        },
        {
          "id": "ee0c78ca-cc95-430b-afda-6b08919de0a8",
          "name": "DETECTION_Alerts_by_a_service_account",
          "kind": "augmentation",
          "lql": "`select Case When lower(username)=\"root\" Then 10.0\n When lower(username) IN (\"www\", \"ftp\", \"www-data\", \"sync\", \"adm\", \"bin\", \"daemon\", \"gopher\", \"halt\", \"lp\", \"mail\", \"news\", \"nobody\", \"operator\", \"shutdown\", \"sync\", \"uucp\", \"ec2\")  Then 8.0\nElse 2.0\nEnd As lhub_score, \n* from Aggregate_by_username`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 752,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "26680582-ce56-4178-be2a-439ac6ec0843",
          "name": "Add_Falco_Baseline_Metadata",
          "kind": "augmentation",
          "lql": "addExecutionMetadata(Falco_Alert_Baseline)",
          "operator": "addExecutionMetadata",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "addExecutionMetadata"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Add Execution Metadata",
          "usedByEventTypes": []
        },
        {
          "id": "561e2cf3-271c-416b-931b-96bf7ead2718",
          "name": "Get_Baseline_Activity",
          "kind": "augmentation",
          "lql": "filterBaselineTable(Prep_Falco_Baseline, -90, -2)",
          "operator": "filterBaselineTable",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 366,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "BaselineContentKind",
            "id": "filterBaselineTable"
          },
          "categoryKind": "LogicHub",
          "iconTitle": "Logichub: Filter Baseline Table",
          "usedByEventTypes": []
        },
        {
          "id": "92d4fcbd-21c6-4517-944b-49c22730d95b",
          "name": "Aggregate_by_Falco_Rulename",
          "kind": "augmentation",
          "lql": "`select concat_ws('\\n',collect_set(k8s_namespace)) AS k8s_namespaces, concat_ws('\\n',collect_set(k8s_podname)) as k8s_podnames, concat_ws('\\n',collect_set(host)) as hosts, concat_ws('\\n',collect_set(pod)) as pods, concat_ws('\\n',collect_set(proc_cmdline)) as commands, min(first_seen) AS startTime, max(last_seen) AS endTime from CUSTOMER_SPECIFIC_WHITELISTING group by log_rule, priority`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1130,
          "y": 488,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "55dacc4b-27a3-4d5c-b467-44ea8d2ffd16",
          "name": "Get_Low_Priority_Falco_Alerts",
          "kind": "augmentation",
          "lql": "`select sum(_count) AS _count, concat_ws('\\n\\n',collect_set(k8s_namespace)) AS k8s_namespaces, concat_ws('\\n\\n',collect_set(k8s_podname)) as k8s_podnames, concat_ws('\\n\\n',collect_set(host)) as hosts, concat_ws('\\n\\n',collect_set(pod)) as pod_names, concat_ws('\\n\\n',collect_set(proc_cmdline)) as commands, min(first_seen) AS startTime, max(last_seen) AS endTime from CUSTOMER_SPECIFIC_WHITELISTING where lower(priority) IN (\"error\", \"warning\", \"notice\", \"info\") GROUP BY log_rule`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 620,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "50bc2dee-2701-4176-9c53-dfe2e25b7bde",
          "name": "Smart_Case_Creation",
          "kind": "step",
          "inputs": [
            "77f80513-c38a-47b0-8ff2-d6278d87df35"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 450,
          "y": 1240,
          "vertices": [],
          "title": "Smart Case Creation",
          "moduleId": "SmartCaseCreation",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 16,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "case_description": "alertDetails",
            "reporter": "reporter",
            "parent0": "All_cases",
            "Create_New_Cases_integration**connection": "22",
            "Append_To_Cases_ACTION_integration**parameters": "{\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_comment_template\":\"DUPLICATE CASE OCCURRED\\n{{case_description_within_module}}\",\"case_management_comment_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"case_management_case_id_column_name\":\"caseToAppendTo\",\"__lh_action_timeout_sec\":\"\"}",
            "case_title": "alertTitle",
            "Get_All_Previous_Cases_integration**parameters": "{\"__lh_action_timeout_sec\":\"\",\"__lh_rows_to_process\":\"\"}",
            "Create_New_Cases_integration**parameters": "{\"case_management_assignee_column_name\":\"\",\"case_management_title_template\":\"{{case_title_within_module}}\",\"case_management_custom_fields\":\"\",\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_description_template\":\"{{case_description_within_module}}\\n\",\"case_management_status_column_name\":\"status\",\"case_management_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"__lh_action_timeout_sec\":\"\",\"case_management_priority_column_name\":\"priority\"}",
            "Append_To_Cases_ACTION_integration**connection": "22",
            "Get_All_Previous_Cases_integration**connection": "22"
          },
          "stepParams": {
            "kind": "module",
            "title": "Smart Case Creation (v1 OLD)"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "SmartCaseCreation",
            "name": "Smart Case Creation (v1 OLD)",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 16,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": true,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "SmartCaseCreation"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: Smart Case Creation (v1 OLD)",
          "usedByEventTypes": []
        },
        {
          "id": "bf35e741-1dcf-4738-93c3-861cfe0a04b1",
          "name": "DETECTION_username_triggering_multiple_rules",
          "kind": "augmentation",
          "lql": "`select 8.0 AS lhub_score, * from Aggregate_by_username where distinct_rules>2`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 900,
          "y": 752,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "7ad68a22-4d35-4933-8689-6c11023f857d",
          "name": "CUSTOMER_SPECIFIC_WHITELISTING",
          "kind": "augmentation",
          "lql": "`select * from Falco_Event_Normalization`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 356,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "872f2e02-8647-4a8c-83bc-3a9c41b7046e",
          "name": "Alert_stats",
          "kind": "augmentation",
          "lql": "`select count(*) AS alertCount from All_Alerts GROUP BY alertTitle ORDER BY alertCount DESC`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 750,
          "y": 1240,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": true,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "575f384b-dbf9-4674-8298-5481a30f4a18",
          "name": "Aggregate_by_username",
          "kind": "augmentation",
          "lql": "`select concat_ws('\\n\\n',collect_set(log_rule)) AS rules, count(distinct(log_rule)) AS distinct_rules, concat_ws('\\n\\n',collect_set(k8s_namespace)) AS k8s_namespaces, concat_ws('\\n\\n',collect_set(k8s_podname)) as k8s_podnames, concat_ws('\\n\\n',collect_set(host)) as hosts, concat_ws('\\n\\n',collect_set(pod)) as pod_names, concat_ws('\\n\\n',collect_set(proc_cmdline)) as commands, min(first_seen) AS startTime, max(last_seen) AS endTime from CUSTOMER_SPECIFIC_WHITELISTING where username IS NOT NULL group by username`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 750,
          "y": 630,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "df1c91eb-2e25-40b4-916e-23a1dd764f0b",
          "name": "Username_triggering_multiple_rules_FINAL",
          "kind": "augmentation",
          "lql": "`select lhub_score, concat(username,\" triggered multiple distinct alerts\") AS alertTitle,\n\nprintf('A single user is triggering multiple distinct Falco alerts:\n\nUSERNAME: %s\n\nRULES FIRED IN LAST 24 HOURS: %s\n\nK8S NAMESPACES: %s\n\nK8S POD NAMES: %s\n\nHOST NAMES: %s\n\nPOD NAMES: %s\n\nCOMMANDS: %s\n\nFirst seen: %s\n\nLast seen: %s\n\n', username, rules, k8s_namespaces, k8s_podnames, hosts, pod_names, commands, from_unixtime(startTime/1000),from_unixtime(endTime/1000)) as alertDetails\nfrom DETECTION_username_triggering_multiple_rules`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 900,
          "y": 884,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "33783f11-4cbf-4c91-9921-73c174cb645c",
          "name": "Calc_Historical_Rule_Count",
          "kind": "augmentation",
          "lql": "`select log_rule, sum(_count) as _count from Get_Baseline_Activity group by log_rule`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 498,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "8931fba3-b232-4991-a904-fc553d9aef6a",
          "name": "DETECTION_New_Falco_Rule_Fire",
          "kind": "augmentation",
          "lql": "`select concat_ws('\\n\\n',collect_set(k8s_namespaces)) AS k8s_namespaces, concat_ws('\\n\\n',collect_set(k8s_podnames)) as k8s_podnames, concat_ws('\\n\\n',collect_set(hosts)) as hosts, concat_ws('\\n\\n',collect_set(pods)) as pod_names, concat_ws('\\n\\n',collect_set(commands)) as commands, min(startTime) AS startTime, max(endTime) AS endTime from Compare_Todays_Alerts_To_Baseline where _count IS NULL GROUP BY log_rule`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1280,
          "y": 752,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "e430d6a3-3b54-4d16-9af4-ee93fdf6efb4",
          "name": "Prep_Falco_Baseline",
          "kind": "augmentation",
          "lql": "`select * from Add_Falco_Baseline_Metadata where startTime < GET_JSON_OBJECT(lhub_execution_metadata, '$.interval_start_millis')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "77f80513-c38a-47b0-8ff2-d6278d87df35",
          "name": "All_cases",
          "kind": "augmentation",
          "lql": "`select *, \"anthony.morris@logichub.com\" as reporter from All_Alerts where lhub_score>7`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 450,
          "y": 1128,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "9761ad61-85ff-478e-a5e4-f1da5df11e93",
          "name": "Aggregate_by_username_and_rule",
          "kind": "augmentation",
          "lql": "`select sum(_count) AS _count, concat_ws('\\n\\n',collect_set(k8s_namespace)) AS k8s_namespaces, concat_ws('\\n\\n',collect_set(k8s_podname)) as k8s_podnames, concat_ws('\\n\\n',collect_set(host)) as hosts, concat_ws('\\n\\n',collect_set(pod)) as pod_names, concat_ws('\\n\\n',collect_set(proc_cmdline)) as commands, min(first_seen) AS startTime, max(last_seen) AS endTime from CUSTOMER_SPECIFIC_WHITELISTING where username IS NOT NULL group by username, log_rule`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 620,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2dbc661a-7ff5-4231-8da2-6f97941b52d7",
          "name": "New_Falco_Rule_Fire_FINAL",
          "kind": "augmentation",
          "lql": "`select log_rule,  concat(\"First fire of '\",log_rule,\"' in the last 90 days\") AS alertTitle,\nprintf('A Falco detection rule fired that has not fired in the last 90 days:\n\nRULE NAME: %s\n\nK8S NAMESPACES: %s\n\nK8S POD NAMES: %s\n\nHOST NAMES: %s\n\nPOD NAMES: %s\n\nCOMMANDS: %s\n\nFirst seen: %s\n\nLast seen: %s\n\n', log_rule, k8s_namespaces, k8s_podnames, hosts, pod_names, commands, from_unixtime(startTime/1000),from_unixtime(endTime/1000)) as alertDetails\nfrom DETECTION_New_Falco_Rule_Fire`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1280,
          "y": 884,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ffa8d6f3-fa59-4579-a7e0-dd8ded1dc3bb",
          "name": "Falco",
          "kind": "eventType",
          "isLeaf": false,
          "eventType": "eventType-27",
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 40,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "EventTypeContentKind",
            "id": "eventType-27"
          },
          "categoryKind": "FetchData",
          "linkToTrigger": true,
          "iconTitle": "Fetch Data: Falco",
          "usedByEventTypes": []
        },
        {
          "id": "d83fc866-b21a-4f74-b9c5-070be71a7c3d",
          "name": "Alerts_by_a_service_account_FINAL",
          "kind": "augmentation",
          "lql": "`select lhub_score, concat(\"A Falco rule has been triggered by service account: \",username) AS alertTitle,\n\nprintf('Falco alerts are being generated by a service account:\n\nSERVICE ACCOUNT: %s\n\nRULES FIRED IN LAST 24 HOURS: %s\n\nK8S NAMESPACES: %s\n\nK8S POD NAMES: %s\n\nHOST NAMES: %s\n\nPOD NAMES: %s\n\nCOMMANDS: %s\n\nFirst seen: %s\n\nLast seen: %s\n\n', username, rules, k8s_namespaces, k8s_podnames, hosts, pod_names, commands, from_unixtime(startTime/1000),from_unixtime(endTime/1000)) as alertDetails\nfrom DETECTION_Alerts_by_a_service_account`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 884,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "7c6aeded-e771-4ce1-a481-82339e8c0f4d",
          "name": "Compare_Todays_Alerts_To_Baseline",
          "kind": "augmentation",
          "lql": "autoJoinTables([Aggregate_by_Falco_Rulename,Calc_Historical_Rule_Count])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1280,
          "y": 620,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "d1d1178f-d8e3-43cd-8d96-aad10a9e32c3",
          "name": "Output",
          "kind": "output",
          "warnings": [],
          "description": "",
          "nodes": [
            "872f2e02-8647-4a8c-83bc-3a9c41b7046e",
            "50bc2dee-2701-4176-9c53-dfe2e25b7bde"
          ],
          "isExplainable": true,
          "x": 600,
          "y": 1352,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "33f62094-1e11-4a17-a640-804debcb1a97",
          "name": "Falco_Event_Normalization",
          "kind": "step",
          "inputs": [
            "ffa8d6f3-fa59-4579-a7e0-dd8ded1dc3bb"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 160,
          "vertices": [],
          "title": "Falco Event Normalization",
          "moduleId": "FalcoNormalization",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 0,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "parent0": "Falco"
          },
          "stepParams": {
            "kind": "module",
            "title": "Falco Event Normalization"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "FalcoNormalization",
            "name": "Falco Event Normalization",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 0,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "FalcoNormalization"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: Falco Event Normalization",
          "usedByEventTypes": []
        },
        {
          "id": "33461e91-6db3-455f-8649-c52ff400e842",
          "name": "DETECTION_Multiple_alerts_by_same_user",
          "kind": "augmentation",
          "lql": "`select 8.0 AS lhub_score, \"A single user has triggered the same alert multiple times\" AS reason, * from Aggregate_by_username_and_rule where _count>10`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 752,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2924627a-593f-4b6e-b381-e3f9f06ac3fa",
          "name": "Falco_Alert_Baseline",
          "kind": "baseline",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 0,
          "vertices": [],
          "baseline": "stream-8",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "BaselineContentKind",
            "id": "stream-8"
          },
          "categoryKind": "LogicHub",
          "linkToTrigger": true,
          "iconTitle": "Logichub: Falco_Alert_Baseline",
          "usedByEventTypes": []
        },
        {
          "id": "7feaf0ff-aeff-4265-80ca-102c8554cf24",
          "name": "High_Volume_Low_Priority_Alerts_FINAL",
          "kind": "augmentation",
          "lql": "`select lhub_score, concat(\"Falco rule '\",log_rule,\"' has grown exceedingly noisy\") AS alertTitle,\nprintf('A low priority Falco rule has grown exceedingly noisy:\n\nFALCO RULE: %s\n\nNUMBER OF RULE FIRES IN LAST 24 HOURS: %s\n\nK8S NAMESPACES: %s\n\nK8S POD NAMES: %s\n\nHOST NAMES: %s\n\nPOD NAMES: %s\n\nCOMMANDS: %s\n\nFirst seen: %s\n\nLast seen: %s\n\n', log_rule, _count, k8s_namespaces, k8s_podnames, hosts, pod_names, commands, from_unixtime(startTime/1000),from_unixtime(endTime/1000)) as alertDetails\nfrom DETECTION_High_Volume_Low_Priority_Alerts`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 884,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "90fa4208-235a-44f5-9020-c10e8a9a2c1b",
          "name": "DETECTION_High_Volume_Low_Priority_Alerts",
          "kind": "augmentation",
          "lql": "`select 8.0 AS lhub_score, \"A Falco rule has grown exceedingly noisy\" as reason, * from Get_Low_Priority_Falco_Alerts where _count>200`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 752,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1036",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    },
    {
      "name": "Baseline - Falco Alerts",
      "nodes": [
        {
          "id": "94110332-c1e1-4ba6-a110-70e8c51af521",
          "name": "Ensure_final_fields",
          "kind": "augmentation",
          "lql": "ensureTableHasColumns(Extract_JSON_from_output_fields, \"_raw, _raw__log, _raw__log__output_fields, _raw__log__output_fields__container_image_repository, _raw__log__output_fields__k8s_ns_name, _raw__log__output_fields__k8s_pod_name, _raw__log__output_fields__proc_cmdline, _raw__log__output_fields__user_name, _raw__log__output, _raw__log__priority, _raw__log__rule, cluster, container, host, namespace, node, pod\")",
          "operator": "ensureTableHasColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 824,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "ensureTableHasColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Ensure Table Has Columns",
          "usedByEventTypes": []
        },
        {
          "id": "8444ee37-15f2-4f5b-9158-faafffffd02e",
          "name": "Extract_JSON_from_log",
          "kind": "augmentation",
          "lql": "jsonToColumns(Ensure_Raw_Log_Field, \"_raw__log\")",
          "operator": "jsonToColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 468,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonToColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json To Columns",
          "usedByEventTypes": []
        },
        {
          "id": "239cada8-0c01-40ea-867e-4d4d284a1548",
          "name": "Normalize_fields",
          "kind": "augmentation",
          "lql": "`SELECT lhub_ts, _raw__log__output_fields__container_image_repository AS container_image_repository, _raw__log__output_fields__k8s_ns_name AS k8s_namespace, _raw__log__output_fields__k8s_pod_name AS k8s_podname, _raw__log__output_fields__proc_cmdline AS proc_cmdline, _raw__log__output_fields__user_name AS username, _raw__log__output AS log_output, _raw__log__priority AS priority, _raw__log__rule AS log_rule, cluster, container, host, namespace, node, pod FROM Ensure_final_fields`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 936,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1ba1049f-0258-4433-ae0f-85342868f5cd",
          "name": "Ensure_Output_Fields",
          "kind": "augmentation",
          "lql": "ensureTableHasColumns(Extract_JSON_from_log, \"_raw__log__output_fields\")",
          "operator": "ensureTableHasColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 580,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "ensureTableHasColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Ensure Table Has Columns",
          "usedByEventTypes": []
        },
        {
          "id": "0145acc5-3176-4edb-82a4-56cf40a8c0fe",
          "name": "Extract_JSON_from_raw",
          "kind": "augmentation",
          "lql": "jsonToColumns(Ensure_Falco_Has_Raw_Columns, \"_raw\")",
          "operator": "jsonToColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 240,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonToColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json To Columns",
          "usedByEventTypes": []
        },
        {
          "id": "b9e5008d-e5dc-415b-bc47-21eed28150c3",
          "name": "Ensure_Falco_Has_Raw_Columns",
          "kind": "augmentation",
          "lql": "ensureTableHasColumns(Falco, \"_raw\")",
          "operator": "ensureTableHasColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "ensureTableHasColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Ensure Table Has Columns",
          "usedByEventTypes": []
        },
        {
          "id": "a599eb23-643b-47e2-9650-725c246acb92",
          "name": "Ensure_Raw_Log_Field",
          "kind": "augmentation",
          "lql": "ensureTableHasColumns(Extract_JSON_from_raw, \"_raw__log\")",
          "operator": "ensureTableHasColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 356,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "ensureTableHasColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Ensure Table Has Columns",
          "usedByEventTypes": []
        },
        {
          "id": "e2512cf8-f0f1-4b80-becf-6de843d1eafb",
          "name": "Extract_JSON_from_output_fields",
          "kind": "augmentation",
          "lql": "jsonToColumns(Ensure_Output_Fields, \"_raw__log__output_fields\")",
          "operator": "jsonToColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 692,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonToColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json To Columns",
          "usedByEventTypes": []
        },
        {
          "id": "6c0a8848-4d12-4704-930b-b2b6c0108a9e",
          "name": "Aggregate_baseline_output",
          "kind": "augmentation",
          "lql": "`select count(*) _count from Normalize_fields group by container_image_repository, k8s_namespace, k8s_podname, proc_cmdline, username, priority, log_rule, cluster, container, host, namespace, node, pod`",
          "operator": "SELECT",
          "isLeaf": true,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 1048,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "fa65675d-1b47-4002-b18c-6cc0fd264973",
          "name": "Falco",
          "kind": "eventType",
          "isLeaf": false,
          "eventType": "eventType-27",
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 0,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "EventTypeContentKind",
            "id": "eventType-27"
          },
          "categoryKind": "FetchData",
          "linkToTrigger": true,
          "iconTitle": "Fetch Data: Falco",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1035",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [
    {
      "id": "stream-8",
      "name": "Falco_Alert_Baseline",
      "flow": "flow-1035",
      "batchIntervalMillis": 86400000,
      "overlapIntervalMillis": 0,
      "baselineNode": "6c0a8848-4d12-4704-930b-b2b6c0108a9e",
      "numHistoricalIntervalsForBaseline": 90,
      "baselineSchema": {
        "type": "struct",
        "fields": [
          {
            "name": "container_image_repository",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "k8s_namespace",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "k8s_podname",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "proc_cmdline",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "username",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "priority",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "log_rule",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "cluster",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "container",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "host",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "namespace",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "node",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "pod",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "_count",
            "type": "long",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "lhub_id",
            "type": "string",
            "nullable": true,
            "metadata": {}
          },
          {
            "name": "lhub_page_num",
            "type": "long",
            "nullable": true,
            "metadata": {}
          }
        ]
      },
      "paused": true
    }
  ],
  "eventTypes": [
    {
      "id": "eventType-27",
      "data": {
        "name": "Falco",
        "query": "_sourceCategory = *falco* output_fields rule priority output NOT \"Falco internal\"",
        "keyColumns": "lhub_ts,_blockid,_collector,_collectorid,_format,_messagecount,_messageid,_messagetime,_raw,_receipttime,_size,_source,_sourcecategory,_sourcehost,_sourceid,_sourcename,_view,cluster,container,host,namespace,node,pod",
        "connection": "connection-5",
        "connectionTypeEntities": {
          "entities": [
            {
              "connectionType": {
                "connectionType": "sumologic",
                "value": "query"
              },
              "connectionTypeDetail": {
                "query": "_sourceCategory = *falco* output_fields rule priority output NOT \"Falco internal\"",
                "connection": "connection-5"
              }
            }
          ]
        },
        "defaultConnectionType": {
          "connectionType": "sumologic",
          "value": "query"
        }
      }
    }
  ],
  "connections": [
    {
      "id": "connection-5",
      "data": {
        "connectionType": "sumologic",
        "name": "Sumo",
        "isActive": false,
        "account": "",
        "secret": "",
        "url": "https://api.us2.sumologic.com/api/v1"
      }
    }
  ],
  "modules": [
    {
      "id": "SmartCaseCreation",
      "name": "Smart Case Creation (v1 OLD)",
      "description": "Preserving temporarily in case we need to revert back from v2; otherwise do not use.",
      "templateNodes": [
        {
          "name": "limit_to_one_row",
          "templateLQL": "`select * from Module_Start LIMIT 1`",
          "isOutput": false
        },
        {
          "name": "Determine_Which_Alerts_Need_New_Cases",
          "templateLQL": "`SELECT * FROM Determine_Next_Action WHERE nextAction = \"newCase\"`",
          "isOutput": false
        },
        {
          "name": "Collect_Case_Sets",
          "templateLQL": "`select collect_set(result__status) as caseDisposition, collect_set(concat(result__id,\":\",result__status)) AS caseCollection from filter_out_closed_cases GROUP BY result__title `",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_ACTION",
          "templateLQL": "runAction(Append_To_Cases_Final, %%%Append_To_Cases_ACTION_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Determine_Next_Action",
          "templateLQL": "`SELECT *, CASE WHEN array_contains(caseDisposition, \"todo\") THEN \"Append To Case\" WHEN array_contains(caseDisposition, \"inprogress\") THEN \"Append To Case\" ELSE \"newCase\" END AS nextAction FROM Module_StartChild1 WHERE GET_JSON_OBJECT(lhub_execution_metadata, '$.batch_url') != ''`",
          "isOutput": false
        },
        {
          "name": "Create_New_Cases",
          "templateLQL": "runAction(Add_Required_Case_Fields, %%%Create_New_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Join_Results_Output",
          "templateLQL": "unionAll(Get_Append_To_Case_Results, Get_Create_New_Case_Results)",
          "isOutput": true
        },
        {
          "name": "Get_Append_To_Case_Results",
          "templateLQL": "`select nextAction, result from Append_To_Cases_ACTION`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Split",
          "templateLQL": "`SELECT split(col, ':') AS caseSplit,* from Append_To_Cases_Filter_Done`",
          "isOutput": false
        },
        {
          "name": "Add_Required_Case_Fields",
          "templateLQL": "`select \"%%%reporter%%%\" AS reporter, \"todo\" AS status, \"Low\" as priority, * from Determine_Which_Alerts_Need_New_Cases`",
          "isOutput": false
        },
        {
          "name": "Convert_Case_JSON_To_Columns",
          "templateLQL": "jsonToColumns(Get_All_Previous_Cases, \"result\")",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Step1",
          "templateLQL": "`SELECT *, explode(caseCollection) FROM Determine_Next_Action WHERE nextAction = \"Append To Case\"`",
          "isOutput": false
        },
        {
          "name": "Get_Create_New_Case_Results",
          "templateLQL": "`select nextAction, result from Create_New_Cases`",
          "isOutput": false
        },
        {
          "name": "Get_All_Previous_Cases",
          "templateLQL": "runAction(limit_to_one_row, %%%Get_All_Previous_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Filter_Done",
          "templateLQL": "`SELECT * FROM Append_To_Cases_Step1 WHERE NOT col REGEXP \":done\"`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Final",
          "templateLQL": "`SELECT \"%%%reporter%%%\" AS reporter, *, concat_ws(', ', slice(caseSplit, 0, 1)) AS caseToAppendTo FROM Append_To_Cases_Split`",
          "isOutput": false
        },
        {
          "name": "Module_StartChild1",
          "templateLQL": "`select L.case_reporter_within_module, L.case_title_within_module, L.case_description_within_module, L.lhub_execution_metadata, R.result__title, R.caseDisposition, R.caseCollection\nfrom Module_Start L\nLEFT JOIN Collect_Case_SetsChild1 R\nON L.case_title_within_module=R.result__title `",
          "isOutput": false
        },
        {
          "name": "Collect_Case_SetsChild1",
          "templateLQL": "`select * from Collect_Case_Sets`",
          "isOutput": false
        },
        {
          "name": "Get_Flow_Start_Time",
          "templateLQL": "addExecutionMetadata(%%%parent0%%%)",
          "isOutput": false
        },
        {
          "name": "filter_out_closed_cases",
          "templateLQL": "`select * from Convert_Case_JSON_To_Columns WHERE result__status != \"done\"`",
          "isOutput": false
        },
        {
          "name": "Module_Start",
          "templateLQL": "`select *, %%%reporter%%% as case_reporter_within_module, %%%case_title%%% as case_title_within_module, %%%case_description%%% as case_description_within_module from reformat_dedupe_key`",
          "isOutput": false
        },
        {
          "name": "ensure_dedupe_key_exists",
          "templateLQL": "ensureTableHasColumns(Get_Flow_Start_Time, \"dedupekey\")",
          "isOutput": false
        },
        {
          "name": "reformat_dedupe_key",
          "templateLQL": "`select coalesceEmpty(dedupekey, %%%case_title%%%) AS lh__module_dedupe_key, * from ensure_dedupe_key_exists`",
          "isOutput": false
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent 0",
              "label": "Parent 0",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            },
            {
              "id": "case_title",
              "description": "Column containing the Use Case Title",
              "label": "Case Title",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "case_description",
              "description": "Column containing the case description",
              "label": "Case Description",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "reporter",
              "description": "User within Logichub which we report the case",
              "label": "Name of Reporter",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Append_To_Cases_ACTION_integration",
            "integrationId": "logichub.case_management",
            "actionId": "append_comment",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Create_New_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "create_case",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Get_All_Previous_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "get_all_cases",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "anthony.morris@logichub.com",
      "categories": [],
      "isEditable": true,
      "integrations": [
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        }
      ],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 16,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    },
    {
      "id": "FalcoNormalization",
      "name": "Falco Event Normalization",
      "description": "",
      "templateNodes": [
        {
          "name": "Extract_JSON_from_raw",
          "templateLQL": "jsonToColumns(Ensure_Falco_Has_Raw_Columns, \"_raw\")",
          "isOutput": false
        },
        {
          "name": "Extract_JSON_from_log",
          "templateLQL": "jsonToColumns(Ensure_Raw_Log_Field, \"_raw__log\")",
          "isOutput": false
        },
        {
          "name": "Extract_JSON_from_output_fields",
          "templateLQL": "jsonToColumns(Ensure_Output_Fields, \"_raw__log__output_fields\")",
          "isOutput": false
        },
        {
          "name": "Ensure_Output_Fields",
          "templateLQL": "ensureTableHasColumns(Extract_JSON_from_log, \"_raw__log__output_fields\")",
          "isOutput": false
        },
        {
          "name": "Ensure_Raw_Log_Field",
          "templateLQL": "ensureTableHasColumns(Extract_JSON_from_raw, \"_raw__log\")",
          "isOutput": false
        },
        {
          "name": "Ensure_Falco_Has_Raw_Columns",
          "templateLQL": "ensureTableHasColumns(%%%parent0%%%, \"_raw\")",
          "isOutput": false
        },
        {
          "name": "Ensure_final_fields",
          "templateLQL": "ensureTableHasColumns(Extract_JSON_from_output_fields, \"_raw, _raw__log, _raw__log__output_fields, _raw__log__output_fields__container_image_repository, _raw__log__output_fields__k8s_ns_name, _raw__log__output_fields__k8s_pod_name, _raw__log__output_fields__proc_cmdline, _raw__log__output_fields__user_name, _raw__log__output, _raw__log__priority, _raw__log__rule, cluster, container, host, namespace, node, pod\")",
          "isOutput": false
        },
        {
          "name": "Normalize_fields",
          "templateLQL": "`SELECT lhub_ts, _raw__log__output_fields__container_image_repository AS container_image_repository, _raw__log__output_fields__k8s_ns_name AS k8s_namespace, _raw__log__output_fields__k8s_pod_name AS k8s_podname, _raw__log__output_fields__proc_cmdline AS proc_cmdline, _raw__log__output_fields__user_name AS username, _raw__log__output AS log_output, _raw__log__priority AS priority, _raw__log__rule AS log_rule, cluster, container, host, namespace, node, pod FROM Ensure_final_fields`",
          "isOutput": false
        },
        {
          "name": "Aggregate_baseline_output",
          "templateLQL": "`select count(*) _count, min(lhub_ts) as first_seen, max(lhub_ts) as last_seen from Normalize_fields group by container_image_repository, k8s_namespace, k8s_podname, proc_cmdline, username, priority, log_rule, cluster, container, host, namespace, node, pod`",
          "isOutput": true
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent 0",
              "label": "Parent 0",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "Dan@logichub.com",
      "categories": [],
      "isEditable": true,
      "integrations": [],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 0,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    }
  ],
  "annotations": [
    {
      "flowId": "flow-1036",
      "nodeId": "bf35e741-1dcf-4738-93c3-861cfe0a04b1",
      "tags": [
        "detection"
      ]
    },
    {
      "flowId": "flow-1036",
      "nodeId": "ee0c78ca-cc95-430b-afda-6b08919de0a8",
      "tags": [
        "detection"
      ]
    },
    {
      "flowId": "flow-1036",
      "nodeId": "33461e91-6db3-455f-8649-c52ff400e842",
      "tags": [
        "detection"
      ]
    },
    {
      "flowId": "flow-1036",
      "nodeId": "90fa4208-235a-44f5-9020-c10e8a9a2c1b",
      "tags": [
        "detection"
      ]
    },
    {
      "flowId": "flow-1036",
      "nodeId": "8931fba3-b232-4991-a904-fc553d9aef6a",
      "tags": [
        "detection"
      ]
    }
  ],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [
    {
      "label": "Builtin Case Manager",
      "descriptor": {
        "id": "logichub.case_management",
        "name": "Case Management",
        "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
        "documentationSlug": "case-management",
        "categories": [
          "ticketing_systems"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:m50.11"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "Case Management Authentication Information",
              "description": "Enter authentication information for Case Management integration",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "case_management_server_url",
                  "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                  "label": "URL",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "case_management_api_token",
                  "description": "API Token for accessing Case Management",
                  "label": "API Token",
                  "dataType": "string",
                  "inputType": "password",
                  "columnTemplating": false
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python -m src.case_management.instance_validation"
          }
        },
        "actions": [
          {
            "id": "create_case",
            "name": "Create Case",
            "description": "Creates a case with parameters provided.",
            "instantiation": {
              "steps": [
                {
                  "name": "Create Case",
                  "description": "Creates a case with parameters provided.",
                  "inputs": [
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing Reporter of the Case",
                      "label": "Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing Assignee for the Case",
                      "label": "Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing Status of the Case",
                      "label": "Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing Priority for the Case",
                      "label": "Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                      "label": "Case Custom Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_create-case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_create-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_all_cases",
            "name": "Get All Cases",
            "description": "Retrieves all cases.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get All Cases",
                  "description": "Retrieves all cases.",
                  "inputs": [
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 results)",
                      "label": "Limit Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "echo \"[result]\" {}"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-cases_exec"
            },
            "isDataSource": "Yes",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_case",
            "name": "Get Case Details",
            "description": "Retrieves Details of a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Details",
                  "description": "Retrieves Details of a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "delete_case",
            "name": "Delete Case",
            "description": "Deletes a Case associated with a case id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Delete Case",
                  "description": "Deletes a Case associated with a case id.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_delete-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "patch_case",
            "name": "Update Case",
            "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Case",
                  "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing Reporter to be updated for the Case",
                      "label": "Updated Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing Assignee to be updated for the Case",
                      "label": "Updated Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing Status to be updated for the Case",
                      "label": "Updated Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing Priority to be updated for the Case",
                      "label": "Updated Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Updated Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Updated Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                      "label": "Updated Case Custom Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_patch-case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_patch-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "append_comment",
            "name": "Append Comment",
            "description": "Appends comment to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Append Comment",
                  "description": "Appends comment to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_reporter_column_name",
                      "description": "Column name from parent table containing LogicHub username",
                      "label": "Reporter Username",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_template",
                      "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                      "label": "Comment Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_create-comment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_create-comment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "append_task",
            "name": "Add manual Task",
            "description": "Adds Manual task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add manual Task",
                  "description": "Adds Manual task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Column name from parent table containing task reporter username",
                      "label": "Task Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add_manual_task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add_manual_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "search_cases",
            "name": "Search Cases",
            "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
            "instantiation": {
              "steps": [
                {
                  "name": "Search Cases",
                  "description": "Search for cases.",
                  "inputs": [
                    {
                      "id": "case_management_case_search_text_column_name",
                      "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                      "label": "Search Text",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing case status.",
                      "label": "Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing case assignee username",
                      "label": "Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing case priority",
                      "label": "Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing case reporter username",
                      "label": "Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 cases)",
                      "label": "Limit Search Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_search-cases_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_search-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_tasks",
            "name": "Get Tasks",
            "description": "Get all tasks of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Tasks",
                  "description": "Get all tasks of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-tasks_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "patch_task",
            "name": "Update Task",
            "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Task",
                  "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the task",
                      "label": "Task Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_patch-task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_patch-task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "download_case_attachment",
            "name": "Get/Download Case Attachment",
            "description": "Download an attachment for a case identified by attachment-id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get/Download Case Attachment",
                  "description": "Download an attachment for a case identified by attachment-id.",
                  "inputs": [
                    {
                      "id": "case_management_attachment_id_column_name",
                      "description": "Column name from parent table containing Attachment Id of Attachment",
                      "label": "Attachment Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_get-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_case_attachments",
            "name": "Get Case Attachments",
            "description": "Get attachments of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Attachments",
                  "description": "Get attachments of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_task_attachments",
            "name": "Get Task Attachments",
            "description": "Get attachments of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Task Attachments",
                  "description": "Get attachments of a task.",
                  "inputs": [
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_get-task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "add_attachment",
            "name": "Add Attachment",
            "description": "Add an attachment to a case (optionally to a specific task of a case).",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Attachment",
                  "description": "Add an attachment to a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_name_column_name",
                      "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                      "label": "File Name Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_id_column_name",
                      "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                      "label": "File Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "add_automatic_task",
            "name": "Add Automated Task",
            "description": "Adds Automated task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Automated Task",
                  "description": "Adds Automated task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_command_column_name",
                      "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                      "label": "Command Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                      "label": "Task Reporter",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_description_template",
                      "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                      "label": "Task Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_parameters_column_name",
                      "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                      "label": "Task Parameters Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_trigger_type",
                      "description": "Select trigger type of task. (Default is Automatic)",
                      "label": "Trigger Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "Automatic Task",
                          "label": "Automatic"
                        },
                        {
                          "value": "User Trigger Task",
                          "label": "On Click"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add_automatic_task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add_automatic_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "link_cases",
            "name": "Link Cases",
            "description": "Link a case with another case",
            "instantiation": {
              "steps": [
                {
                  "name": "Link Cases",
                  "description": "Link a case with another case",
                  "inputs": [
                    {
                      "id": "link_case_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "link_case_case_ids_column_name",
                      "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                      "label": "Case Ids to link",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_link-cases_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_link-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          }
        ],
        "version": "1.0.5",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2020-02-28T11:48:59Z",
        "failedAttempt": {
          "modified": "2022-09-02T08:57:24.797Z",
          "errorMessage": "This imported connection is using a different version of the Case Management (logichub.case_management) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_label": "Builtin Case Manager",
        "__lh_ssl_verify": "False",
        "case_management_server_url": "https://mdr1.trials.logichub.io"
      },
      "id": 22,
      "isDefault": false
    }
  ],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}