{
  "flows": [
    {
      "name": "yyy_a_Use case - Palo Alto - Possible Exfil Using Ping or DNS",
      "nodes": [
        {
          "id": "6b624f8a-7f63-47c6-8811-e11e2bd2a26e",
          "name": "Palo_Alto_Possible_Exfil_Using_Ping_or_DNS",
          "kind": "eventType",
          "isLeaf": false,
          "eventType": "eventType-12",
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 0,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "EventTypeContentKind",
            "id": "eventType-12"
          },
          "categoryKind": "FetchData",
          "linkToTrigger": true,
          "iconTitle": "Fetch Data: Palo_Alto_Possible_Exfil_Using_Ping_or_DNS",
          "usedByEventTypes": []
        },
        {
          "id": "a980062a-cfd2-42f7-bf23-11efc81359f2",
          "name": "Filter_Event_Type_Activity",
          "kind": "augmentation",
          "lql": "`select * from Palo_Alto_Possible_Exfil_Using_Ping_or_DNS`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 155,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "eb3e700a-0813-49af-87d2-535cc46b7cd1",
          "name": "Manual_Whitelisting",
          "kind": "scorer",
          "ruleSet": "ruleSet-1",
          "lql": "scoreManually(Filter_Event_Type_Activity, [], 1.0)",
          "operator": "scoreManually",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 285,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "ScorerContentKind",
            "id": "scoreManually"
          },
          "categoryKind": "LogicHub",
          "iconTitle": "Logichub: Score Manually",
          "usedByEventTypes": []
        },
        {
          "id": "22438dfa-624c-4158-8680-eecc82d72af5",
          "name": "Get_nonzero_scores",
          "kind": "augmentation",
          "lql": "`select * from Manual_Whitelisting where lhub_score>0`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 415,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "f3ec7deb-b0d0-4bf1-aba9-0c26c3cc0707",
          "name": "Denied_activity",
          "kind": "augmentation",
          "lql": "`select CASE WHEN sum(total_bytes_sent)>1000000 THEN 10.0\nWHEN sum(total_bytes_sent)>100000 THEN 8.0\nWHEN count(distinct(destination_ip))>10 THEN 10.0\nWHEN count(distinct(destination_ip))>4 THEN 8.0\nELSE max(lhub_score)\nEND AS lhub_score,\ncount(distinct(destination_ip)) as distinct_destinations, sum(_count) AS event_count, sum(total_bytes_sent) AS total_bytes_sent, collect_set(destination_ip) AS destination_addresses from Get_nonzero_scores where action=\"deny\" GROUP BY source_ip, application, action`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 150,
          "y": 545,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b00174ed-d93e-43a6-8840-9d7e413be609",
          "name": "Allowed_activity",
          "kind": "augmentation",
          "lql": "`select CASE WHEN sum(total_bytes_sent)>1000000 THEN 10.0\nWHEN sum(total_bytes_sent)>100000 THEN 8.0\nWHEN count(distinct(destination_ip))>10 THEN 10.0\nWHEN count(distinct(destination_ip))>4 THEN 8.0\nELSE max(lhub_score)\nEND AS lhub_score,\ncount(distinct(destination_ip)) as distinct_destinations, sum(_count) AS event_count, sum(total_bytes_sent) AS total_bytes_sent, collect_set(destination_ip) AS destination_addresses from Get_nonzero_scores where action!=\"deny\" GROUP BY source_ip, application, action`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 450,
          "y": 545,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ccdc1ca6-9559-447c-bd30-afdda6d29e0e",
          "name": "INDICATOR_blocked_exfiltration_possible",
          "kind": "augmentation",
          "lql": "`select concat(\"Possible attempted \",application,\" exfiltration by address \",source_ip) AS alert_title, lhub_score, concat (\"ACTION: \",action,\"\\n\\nNUMBER OF EVENTS:\",event_count,\"\\n\\nTOTAL BYTES SENT: \",total_bytes_sent,\"\\n\\nDISTINCT BLOCKED DESTINATIONS: \",distinct_destinations,\"\\n\\nDESTINATION BLOCKED ADDRESSES: \",concat_ws(\"; \",destination_addresses)) AS alert_details from Denied_activity`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 150,
          "y": 675,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "f886f883-b131-4a55-bfb8-bd38b632c7b6",
          "name": "INDICATOR_allowed_exfiltration_possible",
          "kind": "augmentation",
          "lql": "`select concat(\"Possible \",application,\" exfiltration by address \",source_ip) AS alert_title, lhub_score, concat (\"ACTION: \",action,\"\\n\\nNUMBER OF EVENTS:\",event_count,\"\\n\\nTOTAL BYTES SENT: \",total_bytes_sent,\"\\n\\nDISTINCT DESTINATIONS: \",distinct_destinations,\"\\n\\nDESTINATION ADDRESSES: \",concat_ws(\"; \",destination_addresses)) AS alert_details from Allowed_activity`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 450,
          "y": 675,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1adca22d-6db3-4580-938b-082a282bf596",
          "name": "Join_all_results",
          "kind": "augmentation",
          "lql": "unionAll(INDICATOR_blocked_exfiltration_possible, INDICATOR_allowed_exfiltration_possible)",
          "operator": "unionAll",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 830,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "unionAll"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Union All",
          "usedByEventTypes": []
        },
        {
          "id": "a4d0e0be-0ea4-4054-9d4b-090b93057482",
          "name": "Smart_Case_Creation",
          "kind": "step",
          "inputs": [
            "9fe41bf3-2a0c-475d-b275-58221747e543"
          ],
          "isLeaf": true,
          "warnings": [],
          "description": "Receives case title and case details. If an open case matches the title, the case details will be appended to the open case. Otherwise, a new case will be created.\n\n",
          "isExplainable": true,
          "x": 600,
          "y": 1090,
          "vertices": [],
          "title": "Smart Case Creation",
          "moduleId": "SmartCaseCreation",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 16,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "case_description": "alert_details",
            "reporter": "reporter",
            "parent0": "Add_reporter_field",
            "Create_New_Cases_integration**connection": "22",
            "Append_To_Cases_ACTION_integration**parameters": "{\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_comment_template\":\"DUPLICATE CASE OCCURRED\\n{{case_description_within_module}}\",\"case_management_comment_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"case_management_case_id_column_name\":\"caseToAppendTo\",\"__lh_action_timeout_sec\":\"\"}",
            "case_title": "alert_title",
            "Get_All_Previous_Cases_integration**parameters": "{\"__lh_action_timeout_sec\":\"\",\"__lh_rows_to_process\":\"\"}",
            "Create_New_Cases_integration**parameters": "{\"case_management_assignee_column_name\":\"\",\"case_management_title_template\":\"{{case_title_within_module}}\",\"case_management_custom_fields\":\"\",\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_description_template\":\"{{case_description_within_module}}\",\"case_management_status_column_name\":\"status\",\"case_management_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"__lh_action_timeout_sec\":\"\",\"case_management_priority_column_name\":\"priority\"}",
            "Append_To_Cases_ACTION_integration**connection": "22",
            "Get_All_Previous_Cases_integration**connection": "22"
          },
          "stepParams": {
            "kind": "module",
            "title": "Smart Case Creation (v1 OLD)"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "SmartCaseCreation",
            "name": "Smart Case Creation (v1 OLD)",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 16,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "SmartCaseCreation"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: Smart Case Creation (v1 OLD)",
          "usedByEventTypes": []
        },
        {
          "id": "9fe41bf3-2a0c-475d-b275-58221747e543",
          "name": "Add_reporter_field",
          "kind": "augmentation",
          "lql": "`select *, 'anthony.morris@logichub.com' AS reporter from Join_all_results where lhub_score>=8`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 450,
          "y": 960,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "fd9c5902-71c2-4a90-96e6-74baead5b6da",
          "name": "LHub_score_less_than_8",
          "kind": "augmentation",
          "lql": "`select * from Join_all_results where lhub_score<8`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 1105,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": true,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "0a2560ae-3605-4ba9-b8a3-58022efe63ab",
          "name": "Output",
          "kind": "output",
          "warnings": [],
          "description": "",
          "nodes": [
            "fd9c5902-71c2-4a90-96e6-74baead5b6da",
            "97b4f54e-73b9-4904-8582-712e20ed0c87"
          ],
          "isExplainable": true,
          "x": 150,
          "y": 1250,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "97b4f54e-73b9-4904-8582-712e20ed0c87",
          "name": "Smart_Case_Creation_v2",
          "kind": "step",
          "inputs": [
            "9fe41bf3-2a0c-475d-b275-58221747e543"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Receives case title and case details. If an open case matches the title, the case details will be appended to the open case. Otherwise, a new case will be created.",
          "isExplainable": true,
          "x": 300,
          "y": 1090,
          "vertices": [],
          "title": "Smart Case Creation v2",
          "moduleId": "lhub.mdr.smart_case_creation_v2",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 8,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "case_description": "alert_details",
            "get_case_details_integration**parameters": "{\"case_management_case_id_column_name\":\"result__id\",\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"__lh_action_timeout_sec\":\"\",\"__lh_rows_to_process\":\"\"}",
            "reporter": "anthony.morris@logichub.com",
            "get_case_details_integration**connection": "22",
            "parent0": "Add_reporter_field",
            "Create_New_Cases_integration**connection": "22",
            "Append_To_Cases_ACTION_integration**parameters": "{\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_comment_template\":\"DUPLICATE CASE OCCURRED\\n{{case_description_within_module}}\",\"case_management_comment_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"case_management_case_id_column_name\":\"caseToAppendTo\",\"__lh_action_timeout_sec\":\"\"}",
            "case_title": "alert_title",
            "Get_All_Previous_Cases_integration**parameters": "{\"case_management_case_limit\":\"\",\"__lh_action_timeout_sec\":\"\",\"__lh_rows_to_process\":\"\"}",
            "Create_New_Cases_integration**parameters": "{\"case_management_assignee_column_name\":\"\",\"case_management_title_template\":\"{{case_title_within_module}}\",\"case_management_custom_fields\":\"\",\"case_management_time_between_consecutive_requests_milliseconds\":\"\",\"case_management_description_template\":\"{{case_description_within_module}}\",\"case_management_status_column_name\":\"status\",\"case_management_reporter_column_name\":\"case_reporter_within_module\",\"__lh_rows_to_process\":\"\",\"__lh_action_timeout_sec\":\"\",\"case_management_priority_column_name\":\"priority\"}",
            "Append_To_Cases_ACTION_integration**connection": "22",
            "Get_All_Previous_Cases_integration**connection": "22"
          },
          "stepParams": {
            "kind": "module",
            "title": "Smart Case Creation v2"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "lhub.mdr.smart_case_creation_v2",
            "name": "Smart Case Creation v2",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 8,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": true,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "lhub.mdr.smart_case_creation_v2"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: Smart Case Creation v2",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1018",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [
    {
      "id": "eventType-12",
      "data": {
        "name": "Palo_Alto_Possible_Exfil_Using_Ping_or_DNS",
        "query": "(_sourceCategory=syslog) \",TRAFFIC,\" \",0,\" (\",ping,\" OR \",icmp,\" OR \",dns,\")\n | csv _raw extract FUTURE_USE_1, Receive_Time, Serial_Number, Type, Threat_Content_Type, FUTURE_USE_2, Generated_Time, Source_IP, Destination_IP, NAT_Source_IP, NAT_Destination_IP, Rule_Name, Source_User, Destination_User, Application, Virtual_System, Source_Zone, Destination_Zone, Inbound_Interface, Outbound_Interface, Log_Action, FUTURE_USE_3, Session_ID, Repeat_Count, Source_Port, Destination_Port, NAT_Source_Port, NAT_Destination_Port, Flags, Protocol, Action, Bytes, Bytes_Sent, Bytes_Received, Packets, Start_Time, Elapsed_Time, Category, FUTURE_USE_4, Sequence_Number, Action_Flags, Source_Location, Destination_Location, FUTURE_USE_5, Packets_Sent, Packets_Received, Session_End_Reason, Device_Group_Hierarchy_Level_1, Device_Group_Hierarchy_Level_2, Device_Group_Hierarchy_Level_3, Device_Group_Hierarchy_Level_4, Virtual_System_Name, Device_Name, Action_Source, Source_VM_UUID, Destination_VM_UUID, Tunnel_ID_IMSI, Monitor_Tag_IMEI, Parent_Session_ID, Parent_Start_Time, Tunnel_Type, SCTP_Association_ID, SCTP_Chunks, SCTP_Chunks_Sent, SCTP_Chunks_Received|where !isPrivateIp(Destination_IP) AND Destination_Zone!=\"dmz\" AND bytes_sent != bytes_Received| sum(bytes_sent) as total_bytes_sent, sum(bytes_received) as total_bytes_received, count by source_ip, destination_ip, Application, Action|where total_bytes_sent>10000",
        "keyColumns": "source_ip,destination_ip,application,total_bytes_sent,action,total_bytes_received,_count",
        "connection": "connection-7",
        "connectionTypeEntities": {
          "entities": [
            {
              "connectionType": {
                "connectionType": "sumologic",
                "value": "query"
              },
              "connectionTypeDetail": {
                "query": "(_sourceCategory=syslog) \",TRAFFIC,\" \",0,\" (\",ping,\" OR \",icmp,\" OR \",dns,\")\n | csv _raw extract FUTURE_USE_1, Receive_Time, Serial_Number, Type, Threat_Content_Type, FUTURE_USE_2, Generated_Time, Source_IP, Destination_IP, NAT_Source_IP, NAT_Destination_IP, Rule_Name, Source_User, Destination_User, Application, Virtual_System, Source_Zone, Destination_Zone, Inbound_Interface, Outbound_Interface, Log_Action, FUTURE_USE_3, Session_ID, Repeat_Count, Source_Port, Destination_Port, NAT_Source_Port, NAT_Destination_Port, Flags, Protocol, Action, Bytes, Bytes_Sent, Bytes_Received, Packets, Start_Time, Elapsed_Time, Category, FUTURE_USE_4, Sequence_Number, Action_Flags, Source_Location, Destination_Location, FUTURE_USE_5, Packets_Sent, Packets_Received, Session_End_Reason, Device_Group_Hierarchy_Level_1, Device_Group_Hierarchy_Level_2, Device_Group_Hierarchy_Level_3, Device_Group_Hierarchy_Level_4, Virtual_System_Name, Device_Name, Action_Source, Source_VM_UUID, Destination_VM_UUID, Tunnel_ID_IMSI, Monitor_Tag_IMEI, Parent_Session_ID, Parent_Start_Time, Tunnel_Type, SCTP_Association_ID, SCTP_Chunks, SCTP_Chunks_Sent, SCTP_Chunks_Received|where !isPrivateIp(Destination_IP) AND Destination_Zone!=\"dmz\" AND bytes_sent != bytes_Received| sum(bytes_sent) as total_bytes_sent, sum(bytes_received) as total_bytes_received, count by source_ip, destination_ip, Application, Action|where total_bytes_sent>10000",
                "connection": "connection-7"
              }
            }
          ]
        },
        "defaultConnectionType": {
          "connectionType": "sumologic",
          "value": "query"
        }
      }
    }
  ],
  "connections": [
    {
      "id": "connection-7",
      "data": {
        "connectionType": "sumologic",
        "name": "sumologic-mdr",
        "isActive": false,
        "account": "",
        "secret": "",
        "url": "https://api.us2.sumologic.com/api/v1"
      }
    }
  ],
  "modules": [
    {
      "id": "SmartCaseCreation",
      "name": "Smart Case Creation (v1 OLD)",
      "description": "Preserving temporarily in case we need to revert back from v2; otherwise do not use.",
      "templateNodes": [
        {
          "name": "limit_to_one_row",
          "templateLQL": "`select * from Module_Start LIMIT 1`",
          "isOutput": false
        },
        {
          "name": "Determine_Which_Alerts_Need_New_Cases",
          "templateLQL": "`SELECT * FROM Determine_Next_Action WHERE nextAction = \"newCase\"`",
          "isOutput": false
        },
        {
          "name": "Collect_Case_Sets",
          "templateLQL": "`select collect_set(result__status) as caseDisposition, collect_set(concat(result__id,\":\",result__status)) AS caseCollection from filter_out_closed_cases GROUP BY result__title `",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_ACTION",
          "templateLQL": "runAction(Append_To_Cases_Final, %%%Append_To_Cases_ACTION_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Determine_Next_Action",
          "templateLQL": "`SELECT *, CASE WHEN array_contains(caseDisposition, \"todo\") THEN \"Append To Case\" WHEN array_contains(caseDisposition, \"inprogress\") THEN \"Append To Case\" ELSE \"newCase\" END AS nextAction FROM Module_StartChild1 WHERE GET_JSON_OBJECT(lhub_execution_metadata, '$.batch_url') != ''`",
          "isOutput": false
        },
        {
          "name": "Create_New_Cases",
          "templateLQL": "runAction(Add_Required_Case_Fields, %%%Create_New_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Join_Results_Output",
          "templateLQL": "unionAll(Get_Append_To_Case_Results, Get_Create_New_Case_Results)",
          "isOutput": true
        },
        {
          "name": "Get_Append_To_Case_Results",
          "templateLQL": "`select nextAction, result from Append_To_Cases_ACTION`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Split",
          "templateLQL": "`SELECT split(col, ':') AS caseSplit,* from Append_To_Cases_Filter_Done`",
          "isOutput": false
        },
        {
          "name": "Add_Required_Case_Fields",
          "templateLQL": "`select \"%%%reporter%%%\" AS reporter, \"todo\" AS status, \"Low\" as priority, * from Determine_Which_Alerts_Need_New_Cases`",
          "isOutput": false
        },
        {
          "name": "Convert_Case_JSON_To_Columns",
          "templateLQL": "jsonToColumns(Get_All_Previous_Cases, \"result\")",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Step1",
          "templateLQL": "`SELECT *, explode(caseCollection) FROM Determine_Next_Action WHERE nextAction = \"Append To Case\"`",
          "isOutput": false
        },
        {
          "name": "Get_Create_New_Case_Results",
          "templateLQL": "`select nextAction, result from Create_New_Cases`",
          "isOutput": false
        },
        {
          "name": "Get_All_Previous_Cases",
          "templateLQL": "runAction(limit_to_one_row, %%%Get_All_Previous_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Filter_Done",
          "templateLQL": "`SELECT * FROM Append_To_Cases_Step1 WHERE NOT col REGEXP \":done\"`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Final",
          "templateLQL": "`SELECT \"%%%reporter%%%\" AS reporter, *, concat_ws(', ', slice(caseSplit, 0, 1)) AS caseToAppendTo FROM Append_To_Cases_Split`",
          "isOutput": false
        },
        {
          "name": "Module_StartChild1",
          "templateLQL": "`select L.case_reporter_within_module, L.case_title_within_module, L.case_description_within_module, L.lhub_execution_metadata, R.result__title, R.caseDisposition, R.caseCollection\nfrom Module_Start L\nLEFT JOIN Collect_Case_SetsChild1 R\nON L.case_title_within_module=R.result__title `",
          "isOutput": false
        },
        {
          "name": "Collect_Case_SetsChild1",
          "templateLQL": "`select * from Collect_Case_Sets`",
          "isOutput": false
        },
        {
          "name": "Get_Flow_Start_Time",
          "templateLQL": "addExecutionMetadata(%%%parent0%%%)",
          "isOutput": false
        },
        {
          "name": "filter_out_closed_cases",
          "templateLQL": "`select * from Convert_Case_JSON_To_Columns WHERE result__status != \"done\"`",
          "isOutput": false
        },
        {
          "name": "Module_Start",
          "templateLQL": "`select *, %%%reporter%%% as case_reporter_within_module, %%%case_title%%% as case_title_within_module, %%%case_description%%% as case_description_within_module from reformat_dedupe_key`",
          "isOutput": false
        },
        {
          "name": "ensure_dedupe_key_exists",
          "templateLQL": "ensureTableHasColumns(Get_Flow_Start_Time, \"dedupekey\")",
          "isOutput": false
        },
        {
          "name": "reformat_dedupe_key",
          "templateLQL": "`select coalesceEmpty(dedupekey, %%%case_title%%%) AS lh__module_dedupe_key, * from ensure_dedupe_key_exists`",
          "isOutput": false
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent 0",
              "label": "Parent 0",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            },
            {
              "id": "case_title",
              "description": "Column containing the Use Case Title",
              "label": "Case Title",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "case_description",
              "description": "Column containing the case description",
              "label": "Case Description",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "reporter",
              "description": "User within Logichub which we report the case",
              "label": "Name of Reporter",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Append_To_Cases_ACTION_integration",
            "integrationId": "logichub.case_management",
            "actionId": "append_comment",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Create_New_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "create_case",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Get_All_Previous_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "get_all_cases",
            "forcedParameterValues": {}
          },
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "anthony.morris@logichub.com",
      "categories": [],
      "isEditable": true,
      "integrations": [
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m47.18"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template(Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title and Description(Summary) of the case. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default 'Yes')",
                        "label": "Split Results (Optional)",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case. Ignored, by default",
                        "label": "Task Id Column (Optional)",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template (Optional)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}}. Default is Command Description ",
                        "label": "Task Description Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template (Optional)",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Default Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "Default User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (optional, default is 120)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.4",
          "compatible_versions": [],
          "tags": []
        }
      ],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 16,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    },
    {
      "id": "lhub.mdr.smart_case_creation_v2",
      "name": "Smart Case Creation v2",
      "description": "Receives case title and case details. If an open case matches the title, the case details will be appended to the open case. Otherwise, a new case will be created.",
      "templateNodes": [
        {
          "name": "Collect_Case_Sets",
          "templateLQL": "`select collect_set(result__status) as caseDisposition, collect_set(concat(result__id,\":\",result__status)) AS caseCollection from parse_dedupe_key_from_cases GROUP BY result__title, lh__module_dedupe_key `",
          "isOutput": false
        },
        {
          "name": "limit_to_one_row",
          "templateLQL": "`select * from Module_Start LIMIT 1`",
          "isOutput": false
        },
        {
          "name": "if_run_in_a_batch",
          "templateLQL": "`SELECT * FROM Determine_Next_Action\nWHERE GET_JSON_OBJECT(lhub_execution_metadata, '$.batch_url') != ''`",
          "isOutput": false
        },
        {
          "name": "ensure_optional_columns_exist",
          "templateLQL": "ensureTableHasColumns(Get_Flow_Start_Time, \"dedupekey, lhub_score\")",
          "isOutput": false
        },
        {
          "name": "Determine_Which_Alerts_Need_New_Cases",
          "templateLQL": "`SELECT * FROM if_run_in_a_batch WHERE nextAction = \"newCase\"`",
          "isOutput": false
        },
        {
          "name": "get_case_details",
          "templateLQL": "runAction(filter_out_closed_cases, %%%get_case_details_integration%%%)",
          "isOutput": false
        },
        {
          "name": "reformat_dedupe_key",
          "templateLQL": "`select coalesceEmpty(dedupekey, %%%case_title%%%) AS lh__module_dedupe_key, * from ensure_optional_columns_exist`",
          "isOutput": false
        },
        {
          "name": "simulate_output",
          "templateLQL": "`SELECT lhub_score, '-' AS case_id, nextAction,\nPRINTF('Not run in a batch, so output simulated\\n%s',\nCASE nextAction WHEN 'newCase' THEN 'New case would have been created' ELSE PRINTF('Would have added a comment to case %s', REGEXP_REPLACE(ELEMENT_AT(caseCollection, 1), ':.*', '')) END\n) AS result\nFROM if_not_run_in_a_batch`",
          "isOutput": false
        },
        {
          "name": "Get_All_Previous_Cases",
          "templateLQL": "runAction(limit_to_one_row, %%%Get_All_Previous_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Get_Flow_Start_Time",
          "templateLQL": "addExecutionMetadata(%%%parent0%%%)",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Final",
          "templateLQL": "`SELECT \"reporter\" AS reporter, *, concat_ws(', ', slice(caseSplit, 0, 1)) AS caseToAppendTo FROM Append_To_Cases_Split`",
          "isOutput": false
        },
        {
          "name": "Module_StartChild1",
          "templateLQL": "`select L.lhub_score, L.case_reporter_within_module, L.case_title_within_module, L.case_description_within_module, L.lhub_execution_metadata, L.lh__module_dedupe_key, R.result__title, R.caseDisposition, R.caseCollection\nfrom Module_Start L\nLEFT JOIN Collect_Case_SetsChild1 R\nON L.case_title_within_module=R.result__title `",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_ACTION",
          "templateLQL": "runAction(Append_To_Cases_Final, %%%Append_To_Cases_ACTION_integration%%%)",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Filter_Done",
          "templateLQL": "`SELECT * FROM Append_To_Cases_Step1 WHERE NOT col REGEXP \":done\"`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Split",
          "templateLQL": "`SELECT split(col, ':') AS caseSplit,* from Append_To_Cases_Filter_Done`",
          "isOutput": false
        },
        {
          "name": "if_not_run_in_a_batch",
          "templateLQL": "`SELECT * FROM Determine_Next_Action\nWHERE GET_JSON_OBJECT(lhub_execution_metadata, '$.batch_url') = ''`",
          "isOutput": false
        },
        {
          "name": "Module_Start",
          "templateLQL": "`select *, \"%%%reporter%%%\" AS case_reporter_within_module,\n%%%case_title%%% as case_title_within_module,\n%%%case_description%%% as case_description_within_module\nfrom reformat_dedupe_key`",
          "isOutput": false
        },
        {
          "name": "Determine_Next_Action",
          "templateLQL": "`SELECT *, CASE WHEN array_contains(caseDisposition, \"todo\") THEN \"Append To Case\" WHEN array_contains(caseDisposition, \"inprogress\") THEN \"Append To Case\" ELSE \"newCase\" END AS nextAction FROM Module_StartChild1`",
          "isOutput": false
        },
        {
          "name": "Get_Create_New_Case_Results",
          "templateLQL": "`select lhub_score, GET_JSON_OBJECT(result, \"$.id\") AS case_id, nextAction, result from Create_New_Cases`",
          "isOutput": false
        },
        {
          "name": "filter_out_closed_cases",
          "templateLQL": "`select * from Convert_Case_JSON_To_Columns WHERE result__status != \"done\"`",
          "isOutput": false
        },
        {
          "name": "Add_Required_Case_Fields",
          "templateLQL": "`select *,\n\"reporter\" AS reporter,\n\"todo\" AS status,\n\"Low\" as priority,\nTO_JSON(ARRAY(MAP(\"id\", \"lh_dedupe_key\", \"value\", lh__module_dedupe_key))) AS dedupekey_input\nFROM Determine_Which_Alerts_Need_New_Cases`",
          "isOutput": false
        },
        {
          "name": "Append_To_Cases_Step1",
          "templateLQL": "`SELECT *, explode(caseCollection) FROM if_run_in_a_batch WHERE nextAction = \"Append To Case\"`",
          "isOutput": false
        },
        {
          "name": "Convert_Case_JSON_To_Columns",
          "templateLQL": "jsonToColumns(fail_if_case_query_failed, \"result\", \"status, id, title\")",
          "isOutput": false
        },
        {
          "name": "parse_dedupe_key_from_cases",
          "templateLQL": "`select result__id, result__status, result__title, GET_JSON_OBJECT(result, PRINTF(\"$.fields[%s].value\", ARRAY_POSITION(FROM_JSON(GET_JSON_OBJECT(result, \"$.fields[*].displayName\"), 'array<string>'), \"lh_dedupe_key\") - 1)) AS lh__module_dedupe_key, result from fail_if_detail_fetch_fails`",
          "isOutput": false
        },
        {
          "name": "Get_Append_To_Case_Results",
          "templateLQL": "`select lhub_score, GET_JSON_OBJECT(result, \"$.caseId\") AS case_id, nextAction, result from Append_To_Cases_ACTION`",
          "isOutput": false
        },
        {
          "name": "Collect_Case_SetsChild1",
          "templateLQL": "`select * from Collect_Case_Sets`",
          "isOutput": false
        },
        {
          "name": "Create_New_Cases",
          "templateLQL": "runAction(Add_Required_Case_Fields, %%%Create_New_Cases_integration%%%)",
          "isOutput": false
        },
        {
          "name": "join_outputs",
          "templateLQL": "unionAll(Get_Append_To_Case_Results, Get_Create_New_Case_Results, simulate_output)",
          "isOutput": false
        },
        {
          "name": "final_check_for_errors",
          "templateLQL": "`SELECT *,\nCASE WHEN case_id = '-' OR GET_JSON_OBJECT(result, \"$.has_error\") = false THEN '' \nELSE PRINTF('%s (%s)',\nCASE\n    WHEN GET_JSON_OBJECT(result, \"$.error\") != '' THEN GET_JSON_OBJECT(result, \"$.error\")\n    ELSE \"Case management integration failed, but no error provided\" END,\nnextAction)\nEND AS error\nFROM join_outputs`",
          "isOutput": false
        },
        {
          "name": "force_failure_if_final_check_fails",
          "templateLQL": "forceFail(final_check_for_errors, \"error\")",
          "isOutput": true
        },
        {
          "name": "check_for_errors_in_case_search",
          "templateLQL": "`SELECT *,\nCASE WHEN GET_JSON_OBJECT(result, \"$.has_error\") = false THEN '' \nELSE PRINTF('Integration failure while searching existing cases: %s',\nCASE\n    WHEN GET_JSON_OBJECT(result, \"$.error\") != '' THEN GET_JSON_OBJECT(result, \"$.error\")\n    ELSE \"Case management integration failed, but no error provided\" END)\nEND AS error\nFROM Get_All_Previous_Cases`",
          "isOutput": false
        },
        {
          "name": "fail_if_case_query_failed",
          "templateLQL": "forceFail(check_for_errors_in_case_search, \"error\")",
          "isOutput": false
        },
        {
          "name": "check_for_errors_while_fetching_details",
          "templateLQL": "`SELECT *,\nCASE WHEN GET_JSON_OBJECT(result, \"$.has_error\") = false THEN '' \nELSE PRINTF('Integration failure while fetching case details: %s',\nCASE\n    WHEN GET_JSON_OBJECT(result, \"$.error\") != '' THEN GET_JSON_OBJECT(result, \"$.error\")\n    ELSE \"Case management integration failed, but no error provided\" END)\nEND AS error2\nFROM get_case_details`",
          "isOutput": false
        },
        {
          "name": "fail_if_detail_fetch_fails",
          "templateLQL": "forceFail(check_for_errors_while_fetching_details, \"error2\")",
          "isOutput": false
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent node",
              "label": "Parent Node",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            },
            {
              "id": "case_title",
              "description": "Column containing the title of the case to be created",
              "label": "Case Title",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "case_description",
              "description": "Column containing the description to be used in the new case",
              "label": "Case Description",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "reporter",
              "description": "Username of a valid user to use as the case reporter",
              "label": "Reporter",
              "dataType": "string",
              "inputType": "text",
              "dependsOn": "",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "get_case_details_integration",
            "integrationId": "logichub.case_management",
            "actionId": "get_case",
            "forcedParameterValues": {
              "case_management_case_id_column_name": "result__id",
              "case_management_time_between_consecutive_requests_milliseconds": "",
              "__lh_action_timeout_sec": "",
              "__lh_rows_to_process": ""
            }
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Get_All_Previous_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "get_all_cases",
            "forcedParameterValues": {
              "case_management_case_limit": "",
              "__lh_action_timeout_sec": "",
              "__lh_rows_to_process": ""
            }
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Append_To_Cases_ACTION_integration",
            "integrationId": "logichub.case_management",
            "actionId": "append_comment",
            "forcedParameterValues": {
              "case_management_time_between_consecutive_requests_milliseconds": "",
              "case_management_comment_template": "DUPLICATE CASE OCCURRED\n{{case_description_within_module}}",
              "case_management_comment_reporter_column_name": "case_reporter_within_module",
              "__lh_rows_to_process": "",
              "case_management_case_id_column_name": "caseToAppendTo",
              "__lh_action_timeout_sec": ""
            }
          },
          "isVariadic": false
        },
        {
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "inputs": [],
          "integration": {
            "parameterId": "Create_New_Cases_integration",
            "integrationId": "logichub.case_management",
            "actionId": "create_case",
            "forcedParameterValues": {
              "case_management_assignee_column_name": "",
              "case_management_title_template": "{{case_title_within_module}}",
              "case_management_custom_fields": "{{dedupekey_input}}",
              "case_management_time_between_consecutive_requests_milliseconds": "",
              "case_management_description_template": "{{case_description_within_module}}",
              "case_management_status_column_name": "status",
              "case_management_reporter_column_name": "case_reporter_within_module",
              "__lh_rows_to_process": "",
              "__lh_action_timeout_sec": "",
              "case_management_priority_column_name": "priority"
            }
          },
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "chad@logichub.com",
      "categories": [
        "analyze"
      ],
      "isEditable": true,
      "integrations": [
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m50.20"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "optional": true,
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 results)",
                        "label": "Limit Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "Yes",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 cases)",
                        "label": "Limit Search Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                        "label": "Task Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.5",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m50.20"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "optional": true,
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 results)",
                        "label": "Limit Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "Yes",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 cases)",
                        "label": "Limit Search Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                        "label": "Task Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.5",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m50.20"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "optional": true,
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 results)",
                        "label": "Limit Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "Yes",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 cases)",
                        "label": "Limit Search Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                        "label": "Task Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.5",
          "compatible_versions": [],
          "tags": []
        },
        {
          "id": "logichub.case_management",
          "name": "Case Management",
          "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
          "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
          "documentationSlug": "case-management",
          "categories": [
            "ticketing_systems"
          ],
          "runtimeEnvironment": {
            "runtimeType": "docker",
            "descriptor": {
              "image": "logichub/integrations-builtin:m50.20"
            },
            "id": "default",
            "version": "v0"
          },
          "instantiation": {
            "steps": [
              {
                "name": "Case Management Authentication Information",
                "description": "Enter authentication information for Case Management integration",
                "inputs": [
                  {
                    "id": "__lh_label",
                    "description": "Label for this integration instance.",
                    "label": "Label",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "__lh_ssl_verify",
                    "description": "SSL Certificate Verification",
                    "label": "Verify SSL",
                    "dataType": "string",
                    "inputType": "select",
                    "options": [
                      {
                        "value": "True",
                        "label": "Verify SSL Certificate"
                      },
                      {
                        "value": "False",
                        "label": "Skip Verifying SSL Certificate"
                      }
                    ],
                    "optional": true,
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_server_url",
                    "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                    "label": "URL",
                    "dataType": "string",
                    "inputType": "text",
                    "columnTemplating": false
                  },
                  {
                    "id": "case_management_api_token",
                    "description": "API Token for accessing Case Management",
                    "label": "API Token",
                    "dataType": "string",
                    "inputType": "password",
                    "columnTemplating": false
                  }
                ],
                "isVariadic": false
              }
            ],
            "validation": {
              "cmd": "python -m src.case_management.instance_validation"
            }
          },
          "actions": [
            {
              "id": "create_case",
              "name": "Create Case",
              "description": "Creates a case with parameters provided.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Create Case",
                    "description": "Creates a case with parameters provided.",
                    "inputs": [
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter of the Case",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee for the Case",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status of the Case",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority for the Case",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                        "label": "Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_all_cases",
              "name": "Get All Cases",
              "description": "Retrieves all cases.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get All Cases",
                    "description": "Retrieves all cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 results)",
                        "label": "Limit Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "echo \"[result]\" {}"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-cases_exec"
              },
              "isDataSource": "Yes",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case",
              "name": "Get Case Details",
              "description": "Retrieves Details of a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Details",
                    "description": "Retrieves Details of a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "delete_case",
              "name": "Delete Case",
              "description": "Deletes a Case associated with a case id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Delete Case",
                    "description": "Deletes a Case associated with a case id.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_delete-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_case",
              "name": "Update Case",
              "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Case",
                    "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing Reporter to be updated for the Case",
                        "label": "Updated Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing Assignee to be updated for the Case",
                        "label": "Updated Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing Status to be updated for the Case",
                        "label": "Updated Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing Priority to be updated for the Case",
                        "label": "Updated Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_title_template",
                        "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                        "label": "Updated Case Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_description_template",
                        "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                        "label": "Updated Case Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_custom_fields",
                        "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                        "label": "Updated Case Custom Fields Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-case_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_comment",
              "name": "Append Comment",
              "description": "Appends comment to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Append Comment",
                    "description": "Appends comment to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_reporter_column_name",
                        "description": "Column name from parent table containing LogicHub username",
                        "label": "Reporter Username",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_comment_template",
                        "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                        "label": "Comment Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_create-comment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_create-comment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "append_task",
              "name": "Add manual Task",
              "description": "Adds Manual task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add manual Task",
                    "description": "Adds Manual task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Column name from parent table containing task reporter username",
                        "label": "Task Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_manual_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_manual_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "search_cases",
              "name": "Search Cases",
              "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Search Cases",
                    "description": "Search for cases.",
                    "inputs": [
                      {
                        "id": "case_management_case_search_text_column_name",
                        "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                        "label": "Search Text",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_status_column_name",
                        "description": "Column name from parent table containing case status.",
                        "label": "Case Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_assignee_column_name",
                        "description": "Column name from parent table containing case assignee username",
                        "label": "Case Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_priority_column_name",
                        "description": "Column name from parent table containing case priority",
                        "label": "Case Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_reporter_column_name",
                        "description": "Column name from parent table containing case reporter username",
                        "label": "Case Reporter",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_case_limit",
                        "description": "Limit number of search results to (Default is 10,000 cases)",
                        "label": "Limit Search Results",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_search-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_search-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_tasks",
              "name": "Get Tasks",
              "description": "Get all tasks of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Tasks",
                    "description": "Get all tasks of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-tasks_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "patch_task",
              "name": "Update Task",
              "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Update Task",
                    "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the task",
                        "label": "Task Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_assignee_column_name",
                        "description": "Column name from parent table containing task assignee username",
                        "label": "Task Assignee",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_priority_column_name",
                        "description": "Column name from parent table containing task priority",
                        "label": "Task Priority",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_status_column_name",
                        "description": "Column name from parent table containing status of the task",
                        "label": "Task Status",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_summary_template",
                        "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                        "label": "Task Summary Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_patch-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_patch-task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "download_case_attachment",
              "name": "Get/Download Case Attachment",
              "description": "Download an attachment for a case identified by attachment-id.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get/Download Case Attachment",
                    "description": "Download an attachment for a case identified by attachment-id.",
                    "inputs": [
                      {
                        "id": "case_management_attachment_id_column_name",
                        "description": "Column name from parent table containing Attachment Id of Attachment",
                        "label": "Attachment Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_case_attachments",
              "name": "Get Case Attachments",
              "description": "Get attachments of a case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Case Attachments",
                    "description": "Get attachments of a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_case_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "get_task_attachments",
              "name": "Get Task Attachments",
              "description": "Get attachments of a task.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Get Task Attachments",
                    "description": "Get attachments of a task.",
                    "inputs": [
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_split_results",
                        "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                        "label": "Split Results",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "true",
                            "label": "Yes"
                          },
                          {
                            "value": "false",
                            "label": "No"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_get-task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_get-all-attachments_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_attachment",
              "name": "Add Attachment",
              "description": "Add an attachment to a case (optionally to a specific task of a case).",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Attachment",
                    "description": "Add an attachment to a case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_name_column_name",
                        "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                        "label": "File Name Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_attachment_file_id_column_name",
                        "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                        "label": "File Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_task_id_column_name",
                        "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                        "label": "Task Id Column",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add-attachment_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add-attachment_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "add_automatic_task",
              "name": "Add Automated Task",
              "description": "Adds Automated task to a Case.",
              "instantiation": {
                "steps": [
                  {
                    "name": "Add Automated Task",
                    "description": "Adds Automated task to a Case.",
                    "inputs": [
                      {
                        "id": "case_management_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_command_column_name",
                        "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                        "label": "Command Template",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_title_template",
                        "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                        "label": "Task Title Template",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_reporter_column_name",
                        "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                        "label": "Task Reporter",
                        "dataType": "string",
                        "inputType": "text",
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_description_template",
                        "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                        "label": "Task Description Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_parameters_column_name",
                        "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                        "label": "Task Parameters Template",
                        "dataType": "string",
                        "inputType": "textarea",
                        "optional": true,
                        "columnTemplating": true
                      },
                      {
                        "id": "case_management_task_trigger_type",
                        "description": "Select trigger type of task. (Default is Automatic)",
                        "label": "Trigger Type",
                        "dataType": "string",
                        "inputType": "select",
                        "options": [
                          {
                            "value": "Automatic Task",
                            "label": "Automatic"
                          },
                          {
                            "value": "User Trigger Task",
                            "label": "On Click"
                          }
                        ],
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_add_automatic_task_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_add_automatic_task_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            },
            {
              "id": "link_cases",
              "name": "Link Cases",
              "description": "Link a case with another case",
              "instantiation": {
                "steps": [
                  {
                    "name": "Link Cases",
                    "description": "Link a case with another case",
                    "inputs": [
                      {
                        "id": "link_case_case_id_column_name",
                        "description": "Column name from parent table containing Case Id of the Case",
                        "label": "Case Id",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "link_case_case_ids_column_name",
                        "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                        "label": "Case Ids to link",
                        "dataType": "column",
                        "inputType": "columnSelect",
                        "columnTemplating": false
                      },
                      {
                        "id": "case_management_time_between_consecutive_requests_milliseconds",
                        "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                        "label": "Time between consecutive API requests (in millis)",
                        "dataType": "string",
                        "inputType": "number",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_action_timeout_sec",
                        "description": "Timeout in seconds (Default is 120 seconds)",
                        "label": "Action Timeout",
                        "dataType": "string",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      },
                      {
                        "id": "__lh_rows_to_process",
                        "description": "Number of rows to read from parent table",
                        "label": "Rows to Process",
                        "dataType": "number",
                        "inputType": "text",
                        "optional": true,
                        "columnTemplating": false
                      }
                    ],
                    "isVariadic": false
                  }
                ],
                "validation": {
                  "cmd": "python -m src.case_management.action_link-cases_validate"
                }
              },
              "execution": {
                "cmd": "python -m src.case_management.action_link-cases_exec"
              },
              "isDataSource": "No",
              "isMultiThreaded": "No",
              "tags": []
            }
          ],
          "version": "1.0.5",
          "compatible_versions": [],
          "tags": []
        }
      ],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 8,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    }
  ],
  "annotations": [],
  "filters": [],
  "ruleSets": [
    {
      "name": "",
      "id": "ruleSet-1",
      "isPublic": false,
      "rules": []
    }
  ],
  "integrationInstances": [
    {
      "label": "Builtin Case Manager",
      "descriptor": {
        "id": "logichub.case_management",
        "name": "Case Management",
        "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
        "documentationSlug": "case-management",
        "categories": [
          "ticketing_systems"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:m50.11"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "Case Management Authentication Information",
              "description": "Enter authentication information for Case Management integration",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "case_management_server_url",
                  "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com",
                  "label": "URL",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "case_management_api_token",
                  "description": "API Token for accessing Case Management",
                  "label": "API Token",
                  "dataType": "string",
                  "inputType": "password",
                  "columnTemplating": false
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python -m src.case_management.instance_validation"
          }
        },
        "actions": [
          {
            "id": "create_case",
            "name": "Create Case",
            "description": "Creates a case with parameters provided.",
            "instantiation": {
              "steps": [
                {
                  "name": "Create Case",
                  "description": "Creates a case with parameters provided.",
                  "inputs": [
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing Reporter of the Case",
                      "label": "Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing Assignee for the Case",
                      "label": "Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing Status of the Case",
                      "label": "Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing Priority for the Case",
                      "label": "Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]. ",
                      "label": "Case Custom Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_create-case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_create-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_all_cases",
            "name": "Get All Cases",
            "description": "Retrieves all cases.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get All Cases",
                  "description": "Retrieves all cases.",
                  "inputs": [
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 results)",
                      "label": "Limit Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "echo \"[result]\" {}"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-cases_exec"
            },
            "isDataSource": "Yes",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_case",
            "name": "Get Case Details",
            "description": "Retrieves Details of a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Details",
                  "description": "Retrieves Details of a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "delete_case",
            "name": "Delete Case",
            "description": "Deletes a Case associated with a case id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Delete Case",
                  "description": "Deletes a Case associated with a case id.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_delete-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "patch_case",
            "name": "Update Case",
            "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Case",
                  "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing Reporter to be updated for the Case",
                      "label": "Updated Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing Assignee to be updated for the Case",
                      "label": "Updated Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing Status to be updated for the Case",
                      "label": "Updated Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing Priority to be updated for the Case",
                      "label": "Updated Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Updated Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Updated Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for case custom fields. Input is expected in valid json-array as given in example. e.g. [{\"id\":\"field-name\", \"value\":\"{{column1}}\"}, {\"id\":\"field-name\", \"value\":\"{{column2}}\"}]",
                      "label": "Updated Case Custom Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_patch-case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_patch-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "append_comment",
            "name": "Append Comment",
            "description": "Appends comment to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Append Comment",
                  "description": "Appends comment to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_reporter_column_name",
                      "description": "Column name from parent table containing LogicHub username",
                      "label": "Reporter Username",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_template",
                      "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                      "label": "Comment Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_create-comment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_create-comment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "append_task",
            "name": "Add manual Task",
            "description": "Adds Manual task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add manual Task",
                  "description": "Adds Manual task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Column name from parent table containing task reporter username",
                      "label": "Task Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add_manual_task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add_manual_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "search_cases",
            "name": "Search Cases",
            "description": "Search for cases. Search string will be matched against Title, Summary and Comments of the issues. Also filter subsequent matched cases with priority, status, assignee, reporter etc.",
            "instantiation": {
              "steps": [
                {
                  "name": "Search Cases",
                  "description": "Search for cases.",
                  "inputs": [
                    {
                      "id": "case_management_case_search_text_column_name",
                      "description": "Column name from parent table containing search text for the Case. This search string will be used to search from case title and summary",
                      "label": "Search Text",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing case status.",
                      "label": "Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing case assignee username",
                      "label": "Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing case priority",
                      "label": "Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing case reporter username",
                      "label": "Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 cases)",
                      "label": "Limit Search Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_search-cases_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_search-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_tasks",
            "name": "Get Tasks",
            "description": "Get all tasks of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Tasks",
                  "description": "Get all tasks of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-tasks_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "patch_task",
            "name": "Update Task",
            "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Task",
                  "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the task",
                      "label": "Task Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_patch-task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_patch-task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "download_case_attachment",
            "name": "Get/Download Case Attachment",
            "description": "Download an attachment for a case identified by attachment-id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get/Download Case Attachment",
                  "description": "Download an attachment for a case identified by attachment-id.",
                  "inputs": [
                    {
                      "id": "case_management_attachment_id_column_name",
                      "description": "Column name from parent table containing Attachment Id of Attachment",
                      "label": "Attachment Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_get-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_case_attachments",
            "name": "Get Case Attachments",
            "description": "Get attachments of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Attachments",
                  "description": "Get attachments of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "get_task_attachments",
            "name": "Get Task Attachments",
            "description": "Get attachments of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Task Attachments",
                  "description": "Get attachments of a task.",
                  "inputs": [
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_get-task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "add_attachment",
            "name": "Add Attachment",
            "description": "Add an attachment to a case (optionally to a specific task of a case).",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Attachment",
                  "description": "Add an attachment to a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_name_column_name",
                      "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                      "label": "File Name Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_id_column_name",
                      "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                      "label": "File Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "add_automatic_task",
            "name": "Add Automated Task",
            "description": "Adds Automated task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Automated Task",
                  "description": "Adds Automated task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_command_column_name",
                      "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                      "label": "Command Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                      "label": "Task Reporter",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_description_template",
                      "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                      "label": "Task Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_parameters_column_name",
                      "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                      "label": "Task Parameters Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_trigger_type",
                      "description": "Select trigger type of task. (Default is Automatic)",
                      "label": "Trigger Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "Automatic Task",
                          "label": "Automatic"
                        },
                        {
                          "value": "User Trigger Task",
                          "label": "On Click"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_add_automatic_task_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_add_automatic_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          },
          {
            "id": "link_cases",
            "name": "Link Cases",
            "description": "Link a case with another case",
            "instantiation": {
              "steps": [
                {
                  "name": "Link Cases",
                  "description": "Link a case with another case",
                  "inputs": [
                    {
                      "id": "link_case_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "link_case_case_ids_column_name",
                      "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                      "label": "Case Ids to link",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.case_management.action_link-cases_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.case_management.action_link-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "No",
            "tags": []
          }
        ],
        "version": "1.0.5",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2020-02-28T11:48:59Z",
        "failedAttempt": {
          "modified": "2022-09-02T08:57:24.797Z",
          "errorMessage": "This imported connection is using a different version of the Case Management (logichub.case_management) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_label": "Builtin Case Manager",
        "__lh_ssl_verify": "False",
        "case_management_server_url": "https://mdr1.trials.logichub.io"
      },
      "id": 22,
      "isDefault": false
    }
  ],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}