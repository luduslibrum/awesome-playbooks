{
  "flows": [
    {
      "name": "Sample Playbook - Create Case with Markdown via Playbook",
      "nodes": [
        {
          "id": "start-node-d61f27b2-de85-45a8-9f64-018e0820dd43",
          "name": "_Start_Node",
          "kind": "start",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 0,
          "vertices": [],
          "title": "Trigger",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "be6a6c28-dc4e-4a1d-b695-45f312134acd",
          "name": "Create_Sample_Case",
          "kind": "task",
          "lql": "runAction(set_case_fields, \"logichub.case_management\", 32, \"create_case_v2\", {\"case_management_custom_fields\": \"\", \"__lh_action_timeout_sec\": \"\", \"__lh_rows_to_process\": \"\", \"case_management_case_type_template\": \"Default\", \"case_management_assignee_column_name\": \"\", \"case_management_priority_column_name\": \"Low\", \"case_management_time_between_consecutive_requests_milliseconds\": \"\", \"case_management_reporter_column_name\": \"\", \"case_management_description_template\": \"{{case_description}}\", \"case_management_title_template\": \"Sample Case - Markdown Examples\", \"__lh_multithread_count\": \"\"})",
          "operator": "runAction",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "maxRowsToProcess": 500,
          "delayBetweenRowsMillis": 0,
          "x": 0,
          "y": 342,
          "vertices": [],
          "actionInstance": {
            "actionId": "create_case_v2",
            "integrationId": "logichub.case_management",
            "integrationInstanceId": 32,
            "data": {
              "case_management_assignee_column_name": "",
              "__lh_multithread_count": "",
              "case_management_title_template": "Sample Case - Markdown Examples",
              "case_management_custom_fields": "",
              "case_management_time_between_consecutive_requests_milliseconds": "",
              "case_management_description_template": "{{case_description}}",
              "case_management_case_type_template": "Default",
              "case_management_reporter_column_name": "",
              "__lh_rows_to_process": "",
              "__lh_action_timeout_sec": "",
              "case_management_priority_column_name": "Low"
            }
          },
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "contentMetadata": {
            "integrationId": "logichub.case_management",
            "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
            "name": "Case Management",
            "actionId": "create_case_v2",
            "actionName": "Create Case"
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "IntegrationContentKind",
            "id": "logichub.case_management/create_case_v2"
          },
          "categoryKind": "Integration",
          "iconTitle": "Integration: Case Management - Create Case",
          "usedByEventTypes": []
        },
        {
          "id": "c103c51c-96aa-4ece-a12f-eae2b27bcf51",
          "name": "set_case_fields",
          "kind": "augmentation",
          "lql": "`SELECT\n\n'See [markdownguide.com](https://www.markdownguide.org/basic-syntax/) for help with the formatting described below.\n\n# Links\n\nFormat links like this:\n\n\\`\\`\\`\n[TEXT](URL)\n\\`\\`\\`\n\nFormat links with titles (mouseover text) like this:\n\n\\`\\`\\`\n[ALT TEXT](URL \"TITLE TEXT\")\n\\`\\`\\`\n\nExamples:\n\n[Standard Link](https://www.youtube.com/watch?v=dQw4w9WgXcQ)\n\n[Link with Title](https://www.youtube.com/watch?v=dQw4w9WgXcQ \"Never Gonna Give You Up!\")\n\n# Links: Reference-style\n\nFrom Markdownguide.com: \"Reference-style links are a special kind of link that make URLs easier to display and read in Markdown. Reference-style links are constructed in two parts: the part you keep inline with your text and the part you store somewhere else in the file to keep the text easy to read.\"\n\nThe examples below show different acceptable syntax:\n\n\\`\\`\\`\nLink without a title [here][1]. Link with a title [here][2].\n\n[Sample Link 3][3]\n[Sample Link 4][4]\n[Sample Link 5][5]\n\n[1]: https://www.markdownguide.org/basic-syntax/\n[2]: https://www.markdownguide.org/basic-syntax/ \"See markdownguide.com for help\"\n[3]: https://www.markdownguide.org/basic-syntax/ (See markdownguide.com for help)\n[4]: <https://www.markdownguide.org/basic-syntax/> \"See markdownguide.com for help\"\n[5]: <https://www.markdownguide.org/basic-syntax/> (See markdownguide.com for help)\n\\`\\`\\`\n\nRendered:\n\nLink without a title [here][1]. Link with a title [here][2].\n\n[Sample Link 3][3]\n[Sample Link 4][4]\n[Sample Link 5][5]\n\n[1]: https://www.markdownguide.org/basic-syntax/\n[2]: https://www.markdownguide.org/basic-syntax/ \"See markdownguide.com for help\"\n[3]: https://www.markdownguide.org/basic-syntax/ (See markdownguide.com for help)\n[4]: <https://www.markdownguide.org/basic-syntax/> \"See markdownguide.com for help\"\n[5]: <https://www.markdownguide.org/basic-syntax/> (See markdownguide.com for help)\n\n# Headings\n\nFormat different headings like this:\n\n    # Heading level 1\n    ## Heading level 2\n    ### Heading level 3\n    #### Heading level 4\n\nOr with HTML, like this:\n\n\\`\\`\\`\n<h1>Heading level 1 via HTML</h1>\n<h2>Heading level 2 via HTML</h2>\n<h3>Heading level 3 via HTML</h3>\n<h4>Heading level 4 via HTML</h4>\n\\`\\`\\`\n\nRendered (and quoted to avoid confusion):\n\n> # Heading level 1\n> ## Heading level 2\n> ### Heading level 3\n> #### Heading level 4\n\n# Emphasis: Italics\n\nText can be given *italic formatting* like this:\n\n\\`\\`\\`\n*italic text via asterisks*\n_italic text via underscores_\n<em>italic text via HTML</em>\n\\`\\`\\`\n\n# Emphasis: Bold\n\nText can be given **bold formatting** like this:\n\n\\`\\`\\`\n**bold text via asterisks**\n__bold text via underscores__\n<strong>bold text via HTML</strong>\n\\`\\`\\`\n\n# Emphasis: Bold and Italic\n\nText can be given ***bold and italic formatting*** together like this:\n\n\\`\\`\\`\n***bold and italic text via asterisks**\n___bold and italic text via underscores___\n*__bold and italic text with a mix__*\n<strong><em>bold and italic text via HTML</em></strong>\n\\`\\`\\`\n\n# Emphasis: Strikethrough\n\nText can be given ~~strikethrough formatting~~ together like this:\n\n\\`\\`\\`\n~~incorrect text~~ correct text\n\\`\\`\\`\n\n# Line separators\n\nYou can use a line with 3 or more dashes (with an extra blank line before and after) to add a line separator, like these:\n\n\\`\\`\\`\n---\n***\n-----------\n\\`\\`\\`\n\nRendered:\n\n---\n\n# Ordered Lists\n\nStandard approach is like this:\n\n\\`\\`\\`\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n\\`\\`\\`\n\nBut an easy alternative is to lead each with just the number 1 like this:\n\n\\`\\`\\`\n1. First item\n1. Second item\n1. Third item\n1. Fourth item\n\\`\\`\\`\n\nIf the order of numbers is incorrect, markdown will correct it anyway:\n\n\\`\\`\\`\n1. First item\n8. Second item\n3. Third item\n5. Fourth item\n\\`\\`\\`\n\nRendered:\n\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n\n# Ordered Lists: Indentation\n\nIndent sub-items like this:\n\n\\`\\`\\`\n1. First item\n2. Second item\n3. Third item\n    1. Indented item\n    2. Indented item\n4. Fourth item\n\\`\\`\\`\n\nRendered:\n\n1. First item\n2. Second item\n3. Third item\n    1. Indented item\n    2. Indented item\n4. Fourth item\n\n# Ordered Lists: HTML\n\nHTML works for ordered lists too, but it may appear slightly different.\n\n\\`\\`\\`\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n<li>Fourth item</li>\n</ol>\n\\`\\`\\`\n\nRendered:\n\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n<li>Fourth item</li>\n</ol>\n\n# Unordered lists\n\nMethod 1:\n\n\\`\\`\\`\n- First item\n- Second item\n- Third item\n- Fourth item\n\\`\\`\\`\n\nMethod 2:\n\n\\`\\`\\`\n* First item\n* Second item\n* Third item\n* Fourth item\n\\`\\`\\`\n\nMethod 3:\n\n\\`\\`\\`\n+ First item\n+ Second item\n+ Third item\n+ Fourth item\n\\`\\`\\`\n\nRendered:\n\n- First item\n- Second item\n- Third item\n- Fourth item\n\n# Unordered lists: Indentation\n\n\\`\\`\\`\n- First item\n- Second item\n- Third item\n    - Indented item\n    - Indented item\n- Fourth item\n\\`\\`\\`\n\nRendered:\n\n- First item\n- Second item\n- Third item\n    - Indented item\n    - Indented item\n- Fourth item\n\n# Unordered lists: HTML\n\n\\`\\`\\`\n<ul>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n<li>Fourth item</li>\n</ul>\n\\`\\`\\`\n\nRendered:\n\n<ul>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n<li>Fourth item</li>\n</ul>\n\n# Block Quotes\n\nStandard block quote:\n\n\\`\\`\\`\n> This is a block quote\n\\`\\`\\`\n\nRendered:\n\n> This is a block quote\n\n# Block Quotes: Nested\n\nNesting within block quotes:\n\n\\`\\`\\`\n> This is another block quote...\n>> but with a nested block quote\n\\`\\`\\`\n\nRendered:\n\n> This is another block quote...\n>> but with a nested block quote\n\n# Block Quotes with Other Elements\n\nInclude other elements within a block quote:\n\n\\`\\`\\`\n> Quoted text\n> ### With a heading\n> And other elements:\n> - Such as bullets\n> - With **bold text**\n> - And *italics!*\n\\`\\`\\`\n\nRendered:\n\n> Quoted text\n> ### With a heading\n> And other elements:\n> - Such as bullets\n> - With **bold text**\n> - And *italics!*\n\n# Code\n\nWrap text with tick marks to format certain text (such as a command or a small code snippet):\n\n\\`\\`\\`\n\\`like this\\`\n\\`\\`\\`\n\nExample:\n\nRun command: \\`calc.exe\\`\n\n# Code: Disable automatic URL linking\n\nYou can use code definition to prevent URLs from being turned into links automatically, like this:\n\n\\`\\`\\`\n\\`http://www.example.com\\`\n\\`\\`\\`\n\nRendered:\n\n\\`http://www.example.com\\`\n\n# Code Blocks\n\nYou can create a code block by indenting every line with 4 spaces or a tab:\n\n\\`\\`\\`\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"age\": 25\n    }\n\\`\\`\\`\n\nRendered:\n\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"age\": 25\n    }\n\n# Code Blocks: Fenced Code Blocks\n\nAlternatively, you can wrap text with 3 tick marks, like this:\n\n    \\`\\`\\`\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"age\": 25\n    }\n    \\`\\`\\`\n\nRendered:\n\n\\`\\`\\`\n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"age\": 25\n}\n\\`\\`\\`\n\n# JSON Syntax Highlighting\n\nAdded in m80: Special code block option just for displaying JSON data in a more readable format. Simply add the text \"json\" after the tick marks, followed by a line break and then the desired JSON text.\n\n    \\`\\`\\`json\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"age\": 25\n    }\n    \\`\\`\\`\n\nRendered:\n\n\\`\\`\\`json\n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"age\": 25\n}\n\\`\\`\\`\n\n# Images\n\nEmbed an image (with optional alt text and title) like this:\n\n\\`\\`\\`\n![Alt Text Here](http://domain/some_image.png \"Title Here\")\n\\`\\`\\`\n\nThe title appears when you mouseover the image. The alt text shows when the image fails to load.\n<br>\n\nExample 1:\n\n![Alt Text Here](/images/logos/logo.svg \"Title Here\")\n<br>\n\nExample 2:\n\nIn the example below, we point to a non-existent URL so that the alt text will be displayed.\n\n![Alt Text Here](/images/logos/invalid_logo_url.svg \"Title Here\")\n\n# Advanced HTML Examples\n\nThe following are some custom HTML examples which may be useful in more advanced use cases.\n\n## Images\n\nUsing HTML instead of markdown takes longer, but you can use it to set specific properties, such as the width and height of the image, like this:\n\n\\`\\`\\`\n<img src=\"/images/logos/logo.svg\" width=\"25%\" height=\"25%\">\n\\`\\`\\`\n\nRendered:\n\n<img src=\"/images/logos/logo.svg\" width=\"25%\" height=\"25%\">\n\n<br>\n\n## Definition Lists\n\nA definition list is a list of terms and corresponding definitions. The \"extended markdown\" version of definition lists is not supported by LogicHub, but it can be done via HTML:\n\n\\`\\`\\`\n<dl>\n<dt>First Term</dt>\n<dd>This is the definition of the first term.</dd>\n<dt>Second Term</dt>\n<dd>This is one definition of the second term. </dd>\n<dd>This is another definition of the second term.</dd>\n</dl>\n\\`\\`\\`\n\nRendered:\n\n<dl>\n<dt>First Term</dt>\n<dd>This is the definition of the first term.</dd>\n<dt>Second Term</dt>\n<dd>This is one definition of the second term. </dd>\n<dd>This is another definition of the second term.</dd>\n</dl>\n\n## Text Color\n\nUsing HTML, you can define <font color=green>colored text.</font>\n\n\\`\\`\\`\n<font color=green>colored text.</font>\n\\`\\`\\`\n\n## HTML Tables: Basic\n\nHere is a basic HTML table:\n<br>\n\n\\`\\`\\`\n<table>\n<tr><td>Server</td><td>Disk Usage</td></tr>\n<tr><td>Server 1</td><td>93% (426 GB)</td></tr>\n<tr><td>Server 2</td><td>75% (344 GB)</td></tr>\n<tr><td>Server 3</td><td>43% (197 GB)</td></tr>\n<tr><td>Server 4</td><td>24% (110 GB)</td></tr>\n</table>\n\\`\\`\\`\n\nRendered:\n<br>\n\n<table>\n<tr><td>Server</td><td>Disk Usage</td></tr>\n<tr><td>Server 1</td><td>93% (426 GB)</td></tr>\n<tr><td>Server 2</td><td>75% (344 GB)</td></tr>\n<tr><td>Server 3</td><td>43% (197 GB)</td></tr>\n<tr><td>Server 4</td><td>24% (110 GB)</td></tr>\n</table>\n\n## HTML Tables: Advanced Formatting\n\nHere is a more robust version with a number of enhancements:\n\n* Specific widths for each column and for the table as a whole\n* Set first row as the header row\n* Alternating background color for standard text\n* Customized background color by severity\n* Specific cell padding, margin, borders\n<br>\n\n\\`\\`\\`\n<head>\n<style>\n#test_table {\n    width:323px;\n    border: 2px solid black;\n    border-collapse: collapse;\n}\n#test_table table { border: 1px solid black; }\n#test_table tbody { border: 2px solid black; }\n#test_table tr { border: 1px solid black; }\n#test_table tr:nth-child(even) { background-color: #f0f1f2; }\n#test_table td {\n    margin:0;\n    padding:4px;\n    border: 1px solid black;\n    border-right: 2px solid black;\n}\n#test_table th {\n    margin:0;\n    padding:4px;\n    border: 1px solid black;\n    background-color: #f0f1f2;\n    border-right: 2px solid black;\n}\n.sev1 { background-color: #ff8080; }\n.sev2 { background-color: #ffe0b3; }\n.sev3 { background-color: #ffff99; }\n.sev4 { background-color: #b1ff99; }\n</style>\n</head>\n<table id=\"test_table\">\n<colgroup>\n<col span=\"1\" style=\"width: 200px;\">\n<col span=\"1\" style=\"width: 120px;\">\n</colgroup>\n<thead>\n<tr><th>Server</th><th>Disk Usage</th></tr>\n</thead>\n<tbody>\n<tr><td>Server 1</td><td class=\"sev1\">93% (426 GB)</td></tr>\n<tr><td>Server 2</td><td class=\"sev2\">75% (344 GB)</td></tr>\n<tr><td>Server 3</td><td class=\"sev3\">43% (197 GB)</td></tr>\n<tr><td>Server 4</td><td class=\"sev4\">24% (110 GB)</td></tr>\n</tbody>\n</table>\n\\`\\`\\`\n\nRendered:\n\n<head>\n<style>\n#test_table {\n    width:323px;\n    border: 2px solid black;\n    border-collapse: collapse;\n}\n#test_table table { border: 1px solid black; }\n#test_table tbody { border: 2px solid black; }\n#test_table tr { border: 1px solid black; }\n#test_table tr:nth-child(even) { background-color: #f0f1f2; }\n#test_table td {\n    margin:0;\n    padding:4px;\n    border: 1px solid black;\n    border-right: 2px solid black;\n}\n#test_table th {\n    margin:0;\n    padding:4px;\n    border: 1px solid black;\n    background-color: #f0f1f2;\n    border-right: 2px solid black;\n}\n.sev1 { background-color: #ff8080; }\n.sev2 { background-color: #ffe0b3; }\n.sev3 { background-color: #ffff99; }\n.sev4 { background-color: #b1ff99; }\n</style>\n</head>\n<table id=\"test_table\">\n<colgroup>\n<col span=\"1\" style=\"width: 200px;\">\n<col span=\"1\" style=\"width: 120px;\">\n</colgroup>\n<thead>\n<tr><th>Server</th><th>Disk Usage</th></tr>\n</thead>\n<tbody>\n<tr><td>Server 1</td><td class=\"sev1\">93% (426 GB)</td></tr>\n<tr><td>Server 2</td><td class=\"sev2\">75% (344 GB)</td></tr>\n<tr><td>Server 3</td><td class=\"sev3\">43% (197 GB)</td></tr>\n<tr><td>Server 4</td><td class=\"sev4\">24% (110 GB)</td></tr>\n</tbody>\n</table>\n' AS case_description\n\nFROM _Start_Node`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Create a static case description containing examples of various markdown uses and techniques",
          "isExplainable": true,
          "x": 0,
          "y": 131,
          "vertices": [],
          "title": "set case fields",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c9eec720-38ce-4b1b-b958-a622f479d6d6",
          "name": "parse_integration_response",
          "kind": "augmentation",
          "lql": "`SELECT \nGET_JSON_OBJECT(result, \"$.id\") AS new_case_id,\nGET_JSON_OBJECT(result, \"$.has_error\") AS has_error,\nIFNULL(GET_JSON_OBJECT(result, \"$.error\"), '') AS error,\n*\nFROM Create_Sample_Case`",
          "operator": "SELECT",
          "isLeaf": true,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 473,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1060",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [],
  "connections": [],
  "modules": [],
  "annotations": [],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [
    {
      "label": "Builtin",
      "descriptor": {
        "id": "logichub.case_management",
        "name": "Case Management",
        "description": "An Integration to manage LogicHub Cases. It can create new cases, get all cases, get a specific case's details and update or delete a case.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
        "documentationSlug": "case-management",
        "categories": [
          "ticketing_systems"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:abnormal_case"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "Case Management Authentication Information",
              "description": "Enter authentication information for Case Management integration",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "case_management_server_url",
                  "description": "URL of your Logichub instance. Eg: https://xyz.logichub.com (Default to connect to the local LogicHub server using https://nginx:8443)",
                  "label": "URL",
                  "dataType": "string",
                  "inputType": "text",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "case_management_api_token",
                  "description": "API Token for accessing Case Management",
                  "label": "API Token",
                  "dataType": "string",
                  "inputType": "password",
                  "columnTemplating": false,
                  "isCredential": true
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python3 -m src.case_management.instance_validation"
          }
        },
        "actions": [
          {
            "id": "fetch_cases",
            "name": "Search Issues (deprecated)",
            "description": "Search issues. Uses older APIs, no longer under maintenance.",
            "instantiation": {
              "steps": [
                {
                  "name": "Search Issues",
                  "description": "Search issues",
                  "inputs": [
                    {
                      "id": "case_management_case_search_query",
                      "description": "Jinja2 template for search text. Leave empty to get all cases. For advanced query see help: https://help.logichub.com/docs/advanced-case-search",
                      "label": "Filter Query",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_explode_flag",
                      "description": "Explode each result in a separate row. (default: No)",
                      "label": "Explode Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "True",
                          "label": "Yes"
                        },
                        {
                          "value": "False",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 cases)",
                      "label": "Limit Search Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_search-cases_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_search-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "fetch_cases_v2",
            "name": "Search Issues",
            "description": "Search Issues (Requires minimum logichub version M59.)",
            "instantiation": {
              "steps": [
                {
                  "name": "Search Issues",
                  "description": "Search issues",
                  "inputs": [
                    {
                      "id": "case_management_case_search_query",
                      "description": "Jinja2 template for search text. Leave empty to get all cases. For advanced query see help: https://help.logichub.com/docs/advanced-case-search",
                      "label": "Filter Query",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_explode_flag",
                      "description": "Explode each result in a separate row. (default: No)",
                      "label": "Explode Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "True",
                          "label": "Yes"
                        },
                        {
                          "value": "False",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_case_limit",
                      "description": "Limit number of search results to (Default is 10,000 cases)",
                      "label": "Limit Search Results",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_fetch_case_details_with_case_search",
                      "description": "Get case details as well (default: No)",
                      "label": "Fetch case details",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_get_history",
                      "description": "Get history of the case as well. Applicable only when Fetch case details is \"Yes\". (default: No)",
                      "label": "Fetch case history",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_get_comment_in_history",
                      "description": "Get comments in history of the case as well. Applicable only when Fetch case history is \"Yes\" (default: No)",
                      "label": "Fetch comments in history",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_exclude_comment_regex",
                      "description": "Jinja templated string representing a regex such that all comments matching with the regex would be excluded from the result. Applicable only when Fetch case details is \"Yes\". Example {{regex_column}}",
                      "label": "Exclude comments",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_search-cases_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_search-cases_exec_v2"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "create_case_v2",
            "name": "Create Case",
            "description": "Creates a case with parameters provided.",
            "instantiation": {
              "steps": [
                {
                  "name": "Create Case",
                  "description": "Creates a case with parameters provided.",
                  "inputs": [
                    {
                      "id": "case_management_case_type_template",
                      "description": "Jinja2 template for case type. e.g. This is {{case_type_column_name}}",
                      "label": "Case Type Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Jinja template containing Reporter of the Case",
                      "label": "Case Reporter",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Jinja template containing assignee of the Case.",
                      "label": "Case Assignee",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Jinja template containing Priority for the Case.",
                      "label": "Case Priority",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for other case fields. Input is expected in valid json as given in example, for \"field-name1\" which is a text field and \"field-name2\" which is a multi-valued field input would look like this: {\"field-name1\":\"{{column1}}\", \"field-name2\":[\"{{column2}}\", \"another_value\"]}.",
                      "label": "Other Case Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_create-case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_create-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "get_case",
            "name": "Get Case Details",
            "description": "Retrieves Details of a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Details",
                  "description": "Retrieves Details of a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_get_history",
                      "description": "Get history of the case as well (default: No)",
                      "label": "Fetch case history",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_get_comment_in_history",
                      "description": "Get comments in history of the case as well. Applicable only when Fetch case history is \"Yes\" (default: Yes)",
                      "label": "Fetch comments in history",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_exclude_comment_regex",
                      "description": "Jinja templated string representing a regex such that all comments matching with the regex would be excluded from the result. Example {{regex_column}}",
                      "label": "Exclude comments",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_get-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "patch_case",
            "name": "Update Case",
            "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Case",
                  "description": "Updates Reporter, Assignee, Status, Priority, Title and/or Description of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_reporter_column_name",
                      "description": "Column name from parent table containing Reporter to be updated for the Case",
                      "label": "Updated Case Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_assignee_column_name",
                      "description": "Column name from parent table containing Assignee to be updated for the Case",
                      "label": "Updated Case Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_status_column_name",
                      "description": "Column name from parent table containing Status to be updated for the Case",
                      "label": "Updated Case Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_priority_column_name",
                      "description": "Column name from parent table containing Priority to be updated for the Case",
                      "label": "Updated Case Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_title_template",
                      "description": "Jinja2 template for case title. e.g. This is {{case_title_column_name}}",
                      "label": "Updated Case Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_description_template",
                      "description": "Markdown template for case description (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}}",
                      "label": "Updated Case Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_custom_fields",
                      "description": "Jinja2 template for other case fields. Input is expected in valid json as given in example, for \"field-name1\" which is a text field and \"field-name2\" which is a multi-valued field input would look like this: {\"field-name1\":\"{{column1}}\", \"field-name2\":[\"{{column2}}\", \"another_value\"]}.",
                      "label": "Updated Case Custom Fields Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_patch-case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_patch-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "delete_case",
            "name": "Delete Case",
            "description": "Deletes a Case associated with a case id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Delete Case",
                  "description": "Deletes a Case associated with a case id.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_delete-case_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "append_comment",
            "name": "Append Comment",
            "description": "Appends comment to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Append Comment",
                  "description": "Appends comment to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_reporter_column_name",
                      "description": "Column name from parent table containing LogicHub username",
                      "label": "Reporter Username",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_comment_template",
                      "description": "Jinja2 template for comment. e.g This is {{comment_column_name}}",
                      "label": "Comment Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_create-comment_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_create-comment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "link_cases",
            "name": "Link Cases",
            "description": "Link a case with another case",
            "instantiation": {
              "steps": [
                {
                  "name": "Link Cases",
                  "description": "Link a case with another case",
                  "inputs": [
                    {
                      "id": "link_case_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "link_case_case_ids_column_name",
                      "description": "Column name from parent table containing Case Ids in comma separated manner. Example: case_id1,case_id2,case_id3 ",
                      "label": "Case Ids to link",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_link-cases_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_link-cases_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "append_task",
            "name": "Add manual Task",
            "description": "Adds Manual task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add manual Task",
                  "description": "Adds Manual task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Column name from parent table containing task reporter username",
                      "label": "Task Reporter",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_add_manual_task_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_add_manual_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "add_automatic_task",
            "name": "Add Automated Task",
            "description": "Adds Automated task to a Case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Automated Task",
                  "description": "Adds Automated task to a Case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_command_column_name",
                      "description": "Jinja2 template for Command of the task. e.g. Either mention command name directly or as {{commandNameColumn}}",
                      "label": "Command Template",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}. Default is Command Name",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_reporter_column_name",
                      "description": "Jinja2 template for task reporter username. e.g. Either mention reporter name directly or as {{reporterColumnName}}",
                      "label": "Task Reporter",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_description_template",
                      "description": "Jinja2 template for task description. e.g. This is {{description_column_name}} (Default is Command Description) ",
                      "label": "Task Description Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_parameters_column_name",
                      "description": "Jinja2 template for parameters of the task. Input is expected in json format {\"key1\": \"val1\", \"key2\": \"val2\"}. You can either pass json of command directly or use jinja2 template like {{taskParamColumnName}}",
                      "label": "Task Parameters Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_trigger_type",
                      "description": "Select trigger type of task. (Default is Automatic)",
                      "label": "Trigger Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "Automatic Task",
                          "label": "Automatic"
                        },
                        {
                          "value": "User Trigger Task",
                          "label": "On Click"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_add_automatic_task_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_add_automatic_task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "get_tasks",
            "name": "Get Tasks",
            "description": "Get all tasks of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Tasks",
                  "description": "Get all tasks of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_get-all-tasks_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "patch_task",
            "name": "Update Task",
            "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Update Task",
                  "description": "Updates Assignee, Status, Priority, Title and/or Summary of a task.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the task",
                      "label": "Task Id",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_title_template",
                      "description": "Jinja2 template for task title. e.g. This is {{title_column_name}}",
                      "label": "Task Title Template",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_task_assignee_column_name",
                      "description": "Column name from parent table containing task assignee username",
                      "label": "Task Assignee",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_priority_column_name",
                      "description": "Column name from parent table containing task priority",
                      "label": "Task Priority",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_status_column_name",
                      "description": "Column name from parent table containing status of the task",
                      "label": "Task Status",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_summary_template",
                      "description": "Markdown template for task summary (Blockquotes and HTML tags are not supported). e.g. **Reporter**: {{reporter_column_name}}. \r\n **Severity**: {{score_column_name}} ",
                      "label": "Task Summary Template",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_patch-task_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_patch-task_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "download_case_attachment",
            "name": "Get/Download Case Attachment",
            "description": "Download an attachment for a case identified by attachment-id.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get/Download Case Attachment",
                  "description": "Download an attachment for a case identified by attachment-id.",
                  "inputs": [
                    {
                      "id": "case_management_attachment_id_column_name",
                      "description": "Column name from parent table containing Attachment Id of Attachment",
                      "label": "Attachment Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_get-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_get-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "get_case_attachments",
            "name": "Get Case Attachments",
            "description": "Get attachments of a case.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Case Attachments",
                  "description": "Get attachments of a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_case_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "fetch_cases",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "get_task_attachments",
            "name": "Get Task Attachments",
            "description": "Get attachments of a task.",
            "instantiation": {
              "steps": [
                {
                  "name": "Get Task Attachments",
                  "description": "Get attachments of a task.",
                  "inputs": [
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_split_results",
                      "description": "Split attachments in separate rows. (Default is 'Yes' to split)",
                      "label": "Split Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "true",
                          "label": "Yes"
                        },
                        {
                          "value": "false",
                          "label": "No"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_get-task_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_get-all-attachments_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          },
          {
            "id": "add_attachment",
            "name": "Add Attachment",
            "description": "Add an attachment to a case (optionally to a specific task of a case).",
            "instantiation": {
              "steps": [
                {
                  "name": "Add Attachment",
                  "description": "Add an attachment to a case.",
                  "inputs": [
                    {
                      "id": "case_management_case_id_column_name",
                      "description": "Column name from parent table containing Case Id of the Case",
                      "label": "Case Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_name_column_name",
                      "description": "Column name from parent table containing Name of the file to be added as an Attachment",
                      "label": "File Name Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_attachment_file_id_column_name",
                      "description": "Column name from parent table containing file-id of file to be added as an Attachment",
                      "label": "File Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_task_id_column_name",
                      "description": "Column name from parent table containing Task Id of the Case. If value corresponding to column-name is empty, task-id will be ignored and attachment will be added to case.(Default is Ignore attachment)",
                      "label": "Task Id Column",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "case_management_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.case_management.action_add-attachment_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.case_management.action_add-attachment_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "case_management",
              "logichub_app",
              "cases"
            ]
          }
        ],
        "version": "2.1.1",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2021-07-02T23:14:42.460Z",
        "failedAttempt": {
          "modified": "2022-09-02T09:07:18.334Z",
          "errorMessage": "This imported connection is using a different version of the Case Management (logichub.case_management) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_table_key_value": "",
        "case_management_api_token": "****restricted****",
        "__lh_ssl_verify": "",
        "__lh_label": "Builtin",
        "case_management_server_url": "",
        "__lh_use_agent": ""
      },
      "id": 32,
      "isDefault": false
    }
  ],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}