{
  "flows": [
    {
      "name": "OOB: SSL/TLS Vulnerability Detected Triage",
      "nodes": [
        {
          "id": "start-node-266b5a0d-7e5f-4fb0-9fa1-565b6c1675f1",
          "name": "_Start_Node",
          "kind": "start",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 0,
          "vertices": [],
          "title": "Trigger",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "afac3e04-60a8-4f60-a6f4-8e0ff732d4f0",
          "name": "parent_node",
          "kind": "augmentation",
          "lql": "`select * from _Start_Node`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 130,
          "vertices": [],
          "title": "parent_node",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "231954ca-f1ef-4268-90d7-c4aade118966",
          "name": "grab_vul_solution",
          "kind": "step",
          "inputs": [
            "8f0c6006-7c20-4792-8099-0eecf89eff49"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Replace with Splunk Query Action\n\nSample Query : \"inputlookup qualys_kb.csv | search QID={{QID}} | table SOLUTION\"\n\nGrabbing the solution published in KBs for the respective QIDs by Qualys or else, which is already there in a lookup file in Splunk.",
          "isExplainable": true,
          "x": 300,
          "y": 470,
          "vertices": [],
          "title": "Grab Vulnerability Solution from Qualys KB",
          "isEditable": false,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "8f0c6006-7c20-4792-8099-0eecf89eff49",
          "name": "get_siem_notables",
          "kind": "step",
          "inputs": [
            "afac3e04-60a8-4f60-a6f4-8e0ff732d4f0"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Replace with Event Type which will pull Splunk/QRadar or any other SIEM Notable related to SSL Vulnerability detected\n\nExample query: `notable` | search search_name=\"<*SSL Vulnerability Detected*>\"\n\nSelect ENVIRONMENT, IP, QID, TITLE, SEVERITY, ACTIVE_SINCE, FIRST_FOUND_ON, LAST_FOUND_ON, PATCHABLE, CVE and other relevant fields required.",
          "isExplainable": true,
          "x": 300,
          "y": 260,
          "vertices": [],
          "title": "Grab Splunk Notables",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "50a4a0c5-a726-49cb-9a4a-940dcea9696d",
          "name": "Drop_Integration_Errors",
          "kind": "augmentation",
          "lql": "`SELECt * FROM grab_vul_solution WHERE GET_JSON_OBJECT(result, \"$.error\") IS NULL`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Only process successful Splunk integration actions.",
          "isExplainable": true,
          "x": 450,
          "y": 710,
          "vertices": [],
          "title": "Drop Integration Errors",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "765f940c-15b6-406b-8cc6-0b239cbe9dcc",
          "name": "fetch_solution_field",
          "kind": "augmentation",
          "lql": "`SELECT *, \n\nGET_JSON_OBJECT(result, \"$.SOLUTION\") AS solution, event_id \n\nFROM Drop_Integration_Errors`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Fetch the Solution for the QIDs detected for vulnerable IPs",
          "isExplainable": true,
          "x": 450,
          "y": 875,
          "vertices": [],
          "title": "Fetch Solution for QIDs",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "d34e5446-3a1f-4952-a66c-8d8b3755f1f7",
          "name": "check_ciphers_using_nmap",
          "kind": "step",
          "inputs": [
            "765f940c-15b6-406b-8cc6-0b239cbe9dcc"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Grab a linux box credentials e.g., IP, Username, Private Key.\n\nCreate SSH Connection to that box using Logichub SSH Integration. SSH lets you run a command on a remote host.\n\nRun the \"Execute Command\" action with a NMAP Query to get list of all ciphers present on a specific IP/Host.\n\nSample Query : \"nmap -sV -Pn --script ssl-enum-ciphers  {{IP}}\"",
          "isExplainable": true,
          "x": 450,
          "y": 1045,
          "vertices": [],
          "title": "Run NMAP Query using SSH on a Remote Host",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "5f4e2ea4-8c11-4850-9e26-63dddedf2da4",
          "name": "no_weak_ciphers",
          "kind": "augmentation",
          "lql": "`SELECT *, ciphers \nFROM regex_match\nWHERE ciphers=\"[]\"`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "If the parent node gives \"NULL\" in ciphers, i.e., no matches found during regex operation. Thus no weak or vulnerable ciphers are present.",
          "isExplainable": true,
          "x": 600,
          "y": 2195,
          "vertices": [],
          "title": "No Weak Ciphers Found",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "75a901c4-28d1-40a2-b113-4525ceb455c7",
          "name": "weak_ciphers",
          "kind": "augmentation",
          "lql": "`select * \nFROM regex_match \nWHERE ciphers!=\"[]\"`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "If the parent node gives some match values in ciphers, i.e., some of the few matching weak/vulnerable ciphers are present.",
          "isExplainable": true,
          "x": 300,
          "y": 1515,
          "vertices": [],
          "title": "Weak Ciphers Found",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "54783368-d79d-48ad-a97b-583f83359da0",
          "name": "env_1_notables",
          "kind": "augmentation",
          "lql": "`SELECT * \nFROM weak_ciphers \nWHERE ENVIRONMENT=\"<>\"`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "If you have multiple environments, segregate and branch it in multiple flow path.\n\nEnvironment 1 : PROD\nEnvironment 1 : DEV\nEnvironment 1 : UAT\netc",
          "isExplainable": true,
          "x": 300,
          "y": 1730,
          "vertices": [],
          "title": "Segregate based on Environments",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b11bcc1b-7874-401b-883a-23062cd6a1d9",
          "name": "create_tickets",
          "kind": "step",
          "inputs": [
            "54783368-d79d-48ad-a97b-583f83359da0"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Run Create Issue Action from Jira Integration in Logichub.\n\nSelect the respective Queue/Project of the particular Environment.\n\nProvide Title of the Ticket,\nSample : \"Weak Ciphers detected on IP\"\n\nProvide Description and other relevant information required for the stakeholders to fix the issue.\nSample : Hi Team,\nWe observed below SSL/TLS vulnerability on IP . Kindly fix this vulnerability as per the Solution provided below.\nIP : {{IP}}\nTITLE : {{TITLE}}\nSOLUTION : {{solution}}",
          "isExplainable": true,
          "x": 300,
          "y": 1960,
          "vertices": [],
          "title": "Create Tickets for Stakeholders",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "53f1171d-474b-43aa-b37a-79455f21ff9c",
          "name": "pick_integration_errors",
          "kind": "augmentation",
          "lql": "`SELECt * FROM grab_vul_solution WHERE GET_JSON_OBJECT(result, \"$.error\") IS NOT NULL`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Grab all notables where the integration wasn't successful or some error occurred.",
          "isExplainable": true,
          "x": 0,
          "y": 2210,
          "vertices": [],
          "title": "Pick Integration Errors",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c45a47ae-84d8-4082-bea3-31fdc958ca64",
          "name": "get_jira_details",
          "kind": "augmentation",
          "lql": "`SELECT ENVIRONMENT, IP,QID, TITLE, STATUS, LAST_FOUND_ON, solution,ciphers,alert_trig_time, COALESCE(GET_JSON_OBJECT(result, \"$.key\"), \"NULL\") AS jira_ticket,443 as PORT,event_id,\n\nFROM_UNIXTIME(CAST(UNIX_TIMESTAMP() AS long), \"yyyy-MM-dd HH:mm:ss z\") AS jira_creation_time,\n\"no\" AS escalated\nFROM create_tickets`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Grab the newly created Jira Ticket ID",
          "isExplainable": true,
          "x": 300,
          "y": 2215,
          "vertices": [],
          "title": "Grab Jira Ticket Number",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b200c4f6-8de1-4e82-af11-66c527101287",
          "name": "notable_update",
          "kind": "step",
          "inputs": [
            "5f4e2ea4-8c11-4850-9e26-63dddedf2da4"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Prepare a comment.\n\nSample Comment : \"Verified  by running nmap scan and no weak SSL ciphers/protocols detected on IP. Closing this Notable.\"\n\nRun Splunk Notable Update Action to update the above comment on Notable and thus closure of alert.",
          "isExplainable": true,
          "x": 600,
          "y": 2418,
          "vertices": [],
          "title": "Splunk Notable Update for Clean IP/Hosts",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "fefab231-e9af-4b5b-ab97-59cf65044009",
          "name": "splunk_update_unprocessed",
          "kind": "step",
          "inputs": [
            "53f1171d-474b-43aa-b37a-79455f21ff9c"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Prepare a comment.\n\nSample Comment : \"Some Error Occurred while processing this Notable. Please triage this manually.\"\n\nRun Splunk Notable Update Action to update the above comment on Notable and thus closure of alert.",
          "isExplainable": true,
          "x": 0,
          "y": 2405,
          "vertices": [],
          "title": "Splunk Notable Update for Unprocessed Notables",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "f260ece9-e814-48ac-967c-0dd881267961",
          "name": "update_notable_detected",
          "kind": "step",
          "inputs": [
            "c45a47ae-84d8-4082-bea3-31fdc958ca64"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Prepare a comment.\n\nSample Comment : \"We have raised a Jira Ticket to the respective stakeholder for this IP/Host. Please refer Jira #Jira_Ticket_ID for more details.\"\n\nRun Splunk Notable Update Action to update the above comment on Notable and thus closure of alert.",
          "isExplainable": true,
          "x": 300,
          "y": 2418,
          "vertices": [],
          "title": "Splunke Notable Update for Detected IP/Hosts",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        },
        {
          "id": "1445237f-414d-41c7-baaa-22b6c2eff888",
          "name": "join_all",
          "kind": "augmentation",
          "lql": "unionAll(notable_update, update_notable_detected, splunk_update_unprocessed)",
          "operator": "unionAll",
          "isLeaf": false,
          "warnings": [],
          "description": "Join all Notables whether processed (clean or detected) or unprocessed.",
          "isExplainable": true,
          "x": 300,
          "y": 2665,
          "vertices": [],
          "title": "Join all Notables",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": true,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "unionAll"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Union All",
          "usedByEventTypes": []
        },
        {
          "id": "576c267f-4ca7-4fbc-94ca-a187244f1a01",
          "name": "Output",
          "kind": "output",
          "warnings": [],
          "description": "",
          "nodes": [
            "1445237f-414d-41c7-baaa-22b6c2eff888"
          ],
          "isExplainable": true,
          "x": 300,
          "y": 2855,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "d0348d7d-e080-4960-9f3c-f69582e8776d",
          "name": "regex_match",
          "kind": "step",
          "inputs": [
            "d34e5446-3a1f-4952-a66c-8d8b3755f1f7"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Grab NMAP Results for checking weak or vulnerable ciphers\n\nUse Multi Value action from Regex_Action Integration in Logichub to get multi-values matching the regular expression.\n\nSample Regex : (\\.*DES)|(\\.*TLSv1.0)|(\\.*TLSv1.1)|(\\.*TLSv1.2)\nAll the above mentioned ciphers are weak and vulnerable. \n\nIf the regex match is successful, it will give you these keywords in JSON results of integration,\nIf not, it will give NULL",
          "isExplainable": true,
          "x": 450,
          "y": 1280,
          "vertices": [],
          "title": "Do Regex Matching to find vulnerable ciphers",
          "isEditable": false,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "DraftContentKind",
            "id": "draft"
          },
          "categoryKind": "Draft",
          "iconTitle": "Draft",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1080",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [],
  "connections": [],
  "modules": [],
  "annotations": [
    {
      "flowId": "flow-1080",
      "nodeId": "b11bcc1b-7874-401b-883a-23062cd6a1d9",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "d0348d7d-e080-4960-9f3c-f69582e8776d",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "fefab231-e9af-4b5b-ab97-59cf65044009",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "d34e5446-3a1f-4952-a66c-8d8b3755f1f7",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "231954ca-f1ef-4268-90d7-c4aade118966",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "f260ece9-e814-48ac-967c-0dd881267961",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "8f0c6006-7c20-4792-8099-0eecf89eff49",
      "tags": [
        "replace"
      ]
    },
    {
      "flowId": "flow-1080",
      "nodeId": "b200c4f6-8de1-4e82-af11-66c527101287",
      "tags": [
        "replace"
      ]
    }
  ],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}