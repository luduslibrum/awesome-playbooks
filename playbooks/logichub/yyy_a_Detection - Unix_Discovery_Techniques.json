{
  "flows": [
    {
      "name": "yyy_a_Detection - Unix_Discovery_Techniques",
      "nodes": [
        {
          "id": "417a987f-9b42-43c3-bdf6-f631c171d682",
          "name": "Limit_Network_Connections_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Systems_Network_Connections_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 900,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "40aed721-c7af-45ca-b130-a19a44d415ca",
          "name": "Output",
          "kind": "output",
          "warnings": [],
          "description": "",
          "nodes": [
            "2a795732-0398-4f74-bd52-982ec6481142"
          ],
          "isExplainable": true,
          "x": 2100,
          "y": 790,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "47b609c3-ef1a-4c0d-9e06-189d14eb873e",
          "name": "INDICATOR_System_Time_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00199' AS alert_id, 'Possible_Unix_System_Time_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Time Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_System_Time_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 4200,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "543853ab-3b87-4802-b0f2-cd595f6be99f",
          "name": "INDICATOR_Possible_Unix_Account_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00190' AS alert_id, 'Possible_Unix_Account_Discovery' AS alert_type, 'Discovery' AS tactic, 'Account Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Account_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2700,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "4b5155f3-6288-41dd-8588-7e68ce466f8d",
          "name": "System_Owner_User_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%who%' OR command like '%uname%' OR command like 'id %' OR command like '%lastlog%' OR command like 'w %'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "060579c2-82a1-4e22-aa4b-82c360246f32",
          "name": "Limit_Network_Configuration_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`SELECT * FROM System_Network_Configuration_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3300,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "5e357caa-d3c8-41af-9f58-0b132ba4dd65",
          "name": "Process_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%ps %' OR command like '% /proc%' OR command like'top %' OR command like 'iotop %'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1500,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "bc0bdc2f-f6c7-4a56-b9e7-7ba2de5f6815",
          "name": "Limit_Virtualization_Sandbox_Evasion_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Virtualization_Sandbox_Evasion WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2100,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "62146f3d-0afa-400d-bb7f-82503167fd13",
          "name": "Remote_System_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%hosts%' OR command like '%nmap%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "780e9e78-aa84-4f04-aa55-185bcf6fbfc3",
          "name": "INDICATOR_System_Information_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00203' AS alert_id, 'Possible_Unix_System_Information_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Information Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_System_Information_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1200,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "42f52517-a164-4d15-9e48-c99de433d514",
          "name": "Limit_FaDD_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from File_And_Directory_Discovery  WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "7f1bf1c0-e1f5-40ab-85ca-932e2ca3654e",
          "name": "Limit_Process_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Process_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1500,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b19765c8-51b6-4a3a-b00f-ac806ab0885c",
          "name": "File_And_Directory_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where (command like 'ls%' OR command like ' ls%' OR command like '%find %' OR command like '%mnt%')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "6db254b8-4518-46a0-ba2d-d4517111457a",
          "name": "Limit_Account_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Account_Discovery  WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2700,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "931d4300-3c5d-4974-aa06-3684937e7e31",
          "name": "Unix_Discovery_Techniques",
          "kind": "eventType",
          "isLeaf": false,
          "eventType": "eventType-45",
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2100,
          "y": 0,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "EventTypeContentKind",
            "id": "eventType-45"
          },
          "categoryKind": "FetchData",
          "linkToTrigger": true,
          "iconTitle": "Fetch Data: Unix_Discovery_Techniques",
          "usedByEventTypes": []
        },
        {
          "id": "f96c442a-cf61-4427-afde-7e77782592c3",
          "name": "System_Network_Configuration_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques\nWHERE command LIKE '%ifconfig %' OR command LIKE '%route %' OR command LIKE \"ip %\" OR command LIKE \"/ip %\" OR command LIKE '%config/network%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3300,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "35f25d7d-fc6e-4040-868c-353d9e82ae19",
          "name": "Limit_System_Service_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from System_Service_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1800,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "4338d35c-9ab3-43e5-a3cd-c6c8c908d82f",
          "name": "Virtualization_Sandbox_Evasion",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%hypervisor%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2100,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "156c82b1-a0ef-453a-b543-62ec32fdd772",
          "name": "INDICATOR_Possible_File_And_Directory_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00191' AS alert_id, 'Possible_Unix_File_And_Directory_Discovery' AS alert_type, 'Discovery' AS tactic, 'File and Directory Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data \nfrom Limit_FaDD_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "69589758-c5c3-4007-bd41-e41e3a8bafb3",
          "name": "Limit_Peripheral_Device_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Peripheral_Device_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3600,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "37aa729c-58d2-4e8e-9e2c-3c6494ad57d9",
          "name": "INDICATOR_Virtualization_Sandbox_Evasion",
          "kind": "augmentation",
          "lql": "`select 'LH00204' AS alert_id, 'Possible_Unix_Virtualization_Sandbox_Evasion' AS alert_type, 'Discovery' AS tactic, 'Virtualization Sandbox Evasion' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Virtualization_Sandbox_Evasion_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2100,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "417e9aba-2a61-47e6-9a19-9d9c9752099e",
          "name": "Limit_System_Time_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from System_Time_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 4200,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "a1b99797-ba6d-424f-ba29-7c60787ba311",
          "name": "Permission_Groups_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%group%' OR command like '%grp%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3900,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "3a72d98f-e9e1-4506-8635-bb0bcabca35a",
          "name": "System_Time_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%time%' OR command like '%ntp%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 4200,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1900fed2-e406-42ec-9a5c-a5a400b92b50",
          "name": "Limit_Remote_System_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Remote_System_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2a4b6253-e775-48c1-9a04-283fbbd8ba2e",
          "name": "System_Information_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where (command like '%/etc/%' OR command like '%history%' OR command like '%/root%') AND\nNOT(command like '%ps %' OR command like '% /proc%' OR command like'top %' OR command like 'iotop %') AND\nNOT (command like '%time%' OR command like '%ntp%') AND\nNOT (command like '%who%' OR command like '%uname%' OR command like 'id %' OR command like '%lastlog%' OR command like 'w %') AND\nNOT (command like '%hosts%' OR command like '%nmap%') AND\nNOT (command like '% /srv%') AND\nNOT (command like '% /dev%' OR command like '% /media%' OR command like '% /sys/devices%') AND\nNOT (command like '% /run%' OR command like '% /sbin%' OR command like'% /usr%' OR command like '% /opt%') AND\nNOT (command like '% /selinux%' OR command like '%ipchains%') AND\nNOT (command like '%group%' OR command like '%grp%') AND\nNOT (command like '%hypervisor%') AND\nNOT (command like 'ls%' OR command like ' ls%' OR command like '%find %' OR command like '%mnt%') AND\nNOT (command LIKE '%ifconfig %' OR command LIKE '%route %' OR command LIKE \"ip %\" OR command LIKE \"/ip %\" OR command LIKE '%config/network%') AND\nNOT (command like '%passwd%' OR command like '%shadow%' OR (command like'ls%' AND command like '%/home%' ) OR command like '%sudoers%') AND\nNOT (command like '%netstat %' OR command like '%ping %')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1200,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "0176532f-ea13-4f1c-bcf9-7d59dc5d81a3",
          "name": "Limit_Security_Software_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Security_Software_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2400,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "40be1fa4-1cfe-4366-91e9-b10c7c762d82",
          "name": "Security_Software_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '% /selinux%' OR command like '%ipchains%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2400,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "db50d86f-ade7-464e-b401-b821879f91da",
          "name": "INDICATOR_Possible_Unix_Network_Configuration_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00192' AS alert_id, 'Possible_Unix_Network_Configuration_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Network Configuration Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data \nFROM Limit_Network_Configuration_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3300,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c55cea9f-a55e-4b92-89be-3366e2ab08a9",
          "name": "INDICATOR_Security_Software_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00198' AS alert_id, 'Possible_Unix_Security_Software_Discovery' AS alert_type, 'Discovery' AS tactic, 'Security Software Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Security_Software_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2400,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1ea26554-73bb-406a-9ff9-e006d0cee1e0",
          "name": "System_Service_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '% /srv%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1800,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "07b036b2-a7ca-4833-8d8c-103a901e21f6",
          "name": "Limit_System_Information_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from System_Information_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1200,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b6566c58-f800-4ba4-8959-886b08c038f1",
          "name": "Limit_Permission_Groups_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Permission_Groups_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3900,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ca54c1e3-c49c-4613-8ba7-12609274d027",
          "name": "INDICATOR_Peripheral_Device_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00196' AS alert_id, 'Possible_Unix_Peripheral_Device_Discovery' AS alert_type, 'Discovery' AS tactic, 'Peripheral Device Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Peripheral_Device_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3600,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "f60247da-86f5-4608-9605-3bf5adc146aa",
          "name": "INDICATOR_Remote_System_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00202' AS alert_id, 'Possible_Unix_Remote_System_Discovery' AS alert_type, 'Discovery' AS tactic, 'Remote System Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Remote_System_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 300,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "e796881c-2904-449a-8d9d-78ffd7b1fe01",
          "name": "INDICATOR_Permission_Groups_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00195' AS alert_id, 'Possible_Unix_Permission_Groups_Discovery' AS alert_type, 'Discovery' AS tactic, 'Permission Groups Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Permission_Groups_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3900,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "3f95b6eb-64b7-4259-a078-898d31dd7008",
          "name": "INDICATOR_System_Service_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00200' AS alert_id, 'Possible_Unix_System_Service_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Service Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_System_Service_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1800,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1a2ab18c-4461-4f3b-9364-c46cd691787a",
          "name": "INDICATOR_System_Owner_User_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00201' AS alert_id, 'Possible_Unix_System_Owner_User_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Owner/User Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_System_Owner_User_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c2c64621-3ced-4cff-9ac9-ec4cf99cc63c",
          "name": "Peripheral_Device_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '% /dev%' OR command like '% /media%' OR command like '% /sys/devices%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3600,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "bf70430f-3a7c-46e8-8409-53396c36044b",
          "name": "Systems_Network_Connections_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where (command like '%netstat %' OR command like '%ping %')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 900,
          "y": 112,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "59eca2ad-545f-46b5-ab50-be34978e1d4b",
          "name": "Account_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where command like '%passwd%' OR command like '%shadow%' OR (command like'ls%' AND command like '%/home%' ) OR command like '%sudoers%'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2700,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "024303f3-d2a3-4cb5-8510-59e863831346",
          "name": "Software_Discovery",
          "kind": "augmentation",
          "lql": "`SELECT command, dstuser, pwd, srcuser, tty, BIGINT(FLOAT(first_seen)) AS first_seen, _sourcehost, SIZE(COLLECT_SET(_sourcehost) OVER (PARTITION BY command, dstuser, pwd, srcuser, tty)) AS distinct_host_count\nFROM Unix_Discovery_Techniques where (command like '% /run%' OR command like '% /sbin%' OR command like'% /usr%' OR command like '% /opt%')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3000,
          "y": 122,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "86cea3c7-68f8-4602-96db-d162c1dff391",
          "name": "INDICATOR_Process_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00194' AS alert_id, 'Possible_Unix_Process_Discovery' AS alert_type, 'Discovery' AS tactic, 'Process Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Process_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1500,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "321a437f-28a4-47da-8bd2-48181233ace6",
          "name": "Limit_Software_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from Software_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3000,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "d907e2fa-f187-415c-9272-55fb16a8c14c",
          "name": "INDICATOR_Software_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00197' AS alert_id, 'Possible_Unix_Software_Discovery' AS alert_type, 'Discovery' AS tactic, 'Software Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Software_Discovery_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3000,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "59fcbfa6-d8f9-436d-8a67-1f3eaea5a975",
          "name": "Limit_System_Owner_User_Discovery_To_Uncommon_Commands",
          "kind": "augmentation",
          "lql": "`select * from System_Owner_User_Discovery WHERE distinct_host_count < 5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 600,
          "y": 244,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2b616380-164d-489f-9ff1-43efd41d5b91",
          "name": "Join_all_indicators",
          "kind": "augmentation",
          "lql": "unionAll(INDICATOR_Peripheral_Device_Discovery, INDICATOR_Possible_Unix_Account_Discovery, INDICATOR_Possible_File_And_Directory_Discovery, INDICATOR_Possible_Unix_Network_Configuration_Discovery, INDICATOR_Possible_Unix_Network_Connections_Discovery, INDICATOR_Remote_System_Discovery, INDICATOR_System_Service_Discovery, INDICATOR_Process_Discovery, INDICATOR_Security_Software_Discovery, INDICATOR_Permission_Groups_Discovery, INDICATOR_System_Information_Discovery, INDICATOR_Software_Discovery, INDICATOR_System_Owner_User_Discovery, INDICATOR_System_Time_Discovery, INDICATOR_Virtualization_Sandbox_Evasion)",
          "operator": "unionAll",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2100,
          "y": 508,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "unionAll"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Union All",
          "usedByEventTypes": []
        },
        {
          "id": "e0e6ecc5-c5fe-4278-8bc0-cf3eab45982e",
          "name": "INDICATOR_Possible_Unix_Network_Connections_Discovery",
          "kind": "augmentation",
          "lql": "`select 'LH00193' AS alert_id, 'Possible_Unix_Network_Connections_Discovery' AS alert_type, 'Discovery' AS tactic, 'System Network Connections Discovery' AS technique, 2.0 AS lhub_score, 1.0 AS risk_score, 2.0 AS fidelity_score, BIGINT(first_seen/1000) AS alert_time, dstuser AS dest_user, srcuser AS src_user, CASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN _sourcehost\nELSE \" \"\nEND AS src_ip, \nCASE WHEN _sourcehost regexp '\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+' THEN \" \"\nELSE _sourcehost\nEND AS src_machine_name, TO_JSON(STRUCT(command,pwd,tty)) AS additional_data from Limit_Network_Connections_To_Uncommon_Commands`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 900,
          "y": 376,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2a795732-0398-4f74-bd52-982ec6481142",
          "name": "LogicHub_MDR_Format_Alert_for_Sumo",
          "kind": "step",
          "inputs": [
            "2b616380-164d-489f-9ff1-43efd41d5b91"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Format event output to send to SumoLogic destination",
          "isExplainable": true,
          "x": 2100,
          "y": 620,
          "vertices": [],
          "title": "LogicHub MDR: Format Alert for Sumo",
          "moduleId": "logichub.mdr.format_alert_for_sumo",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 31,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "parent0": "Join_all_indicators"
          },
          "stepParams": {
            "kind": "module",
            "title": "LogicHub MDR: Format Alert for Sumo"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "logichub.mdr.format_alert_for_sumo",
            "name": "LogicHub MDR: Format Alert for Sumo",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 31,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": true,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "logichub.mdr.format_alert_for_sumo"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: LogicHub MDR: Format Alert for Sumo",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1054",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [
    {
      "id": "eventType-45",
      "data": {
        "name": "Unix_Discovery_Techniques",
        "query": "_sourceCategory=server/nutanix/* sudo AND\n(((\"cat \" OR \"grep \" OR \"awk \" OR \"more \" OR \"less \" OR \"vi \" OR \"vim \" OR (\"echo \" AND \">\")) AND \n(*passwd* OR  \"/shadow\" OR \"/home\" OR \"sudoers\" OR \"/proc\" OR \"group \" OR \"/grp\" OR \"/dev/\" OR \"/media/\" OR \"/run/\" OR \"/sbin/\" OR \"/usr/\" OR \"/opt/\" OR \"/selinux\" OR \"ipchains\" OR \"/srv/\" OR *name* OR *hosts OR \".history\" OR \"/etc/\" OR \"/root/\" OR \"hypervisor\"))\n OR \n(\"find \" OR \"mnt \" OR \"ifconfig \" OR \"route \" OR \"ip \" OR \"netstat \" OR *ping OR \"ps \" OR \"time \" OR ntp* OR \"nmap \" OR \"top\" or \"iotop\" OR \"lastlog\" OR \"w \" OR who* OR \"id \" OR \"history\")) \n| parse regex field=_raw \".*sudo\\[\\d{4,5}\\]:\\s+(?<srcUser>\\w+)\\s+:\\s+TTY=(?<TTY>[\\w\\\\\\/]+)\\s+;\\s+PWD=(?<PWD>[\\w\\\\\\/]+)\\s+;\\s+USER=(?<dstUser>[\\w\\\\\\/]+)\\s+;\\s+COMMAND=(?<COMMAND>.*)\" nodrop\n|min(_messagetime) AS first_seen, count by command, dstUser, PWD, srcUser, TTY, _sourcehost\n|where command matches \"*echo*>*\" OR !(command matches \"*echo*\")\n|where command != \"\"",
        "keyColumns": "command,dstuser,pwd,srcuser,tty,_sourcehost,first_seen",
        "connection": "connection-2",
        "connectionTypeEntities": {
          "entities": [
            {
              "connectionType": {
                "connectionType": "sumologic",
                "value": "query"
              },
              "connectionTypeDetail": {
                "query": "_sourceCategory=server/nutanix/* sudo AND\n(((\"cat \" OR \"grep \" OR \"awk \" OR \"more \" OR \"less \" OR \"vi \" OR \"vim \" OR (\"echo \" AND \">\")) AND \n(*passwd* OR  \"/shadow\" OR \"/home\" OR \"sudoers\" OR \"/proc\" OR \"group \" OR \"/grp\" OR \"/dev/\" OR \"/media/\" OR \"/run/\" OR \"/sbin/\" OR \"/usr/\" OR \"/opt/\" OR \"/selinux\" OR \"ipchains\" OR \"/srv/\" OR *name* OR *hosts OR \".history\" OR \"/etc/\" OR \"/root/\" OR \"hypervisor\"))\n OR \n(\"find \" OR \"mnt \" OR \"ifconfig \" OR \"route \" OR \"ip \" OR \"netstat \" OR *ping OR \"ps \" OR \"time \" OR ntp* OR \"nmap \" OR \"top\" or \"iotop\" OR \"lastlog\" OR \"w \" OR who* OR \"id \" OR \"history\")) \n| parse regex field=_raw \".*sudo\\[\\d{4,5}\\]:\\s+(?<srcUser>\\w+)\\s+:\\s+TTY=(?<TTY>[\\w\\\\\\/]+)\\s+;\\s+PWD=(?<PWD>[\\w\\\\\\/]+)\\s+;\\s+USER=(?<dstUser>[\\w\\\\\\/]+)\\s+;\\s+COMMAND=(?<COMMAND>.*)\" nodrop\n|min(_messagetime) AS first_seen, count by command, dstUser, PWD, srcUser, TTY, _sourcehost\n|where command matches \"*echo*>*\" OR !(command matches \"*echo*\")\n|where command != \"\"",
                "connection": "connection-2"
              }
            }
          ]
        },
        "defaultConnectionType": {
          "connectionType": "sumologic",
          "value": "query"
        }
      }
    }
  ],
  "connections": [
    {
      "id": "connection-2",
      "data": {
        "connectionType": "sumologic",
        "name": "SumoLogic",
        "isActive": false,
        "account": "",
        "secret": "",
        "url": "https://api.us2.sumologic.com/api/v1"
      }
    }
  ],
  "modules": [
    {
      "id": "logichub.mdr.format_alert_for_sumo",
      "name": "LogicHub MDR: Format Alert for Sumo",
      "description": "Format event output to send to a SumoLogic destination",
      "templateNodes": [
        {
          "name": "alert_output_for_sumo",
          "templateLQL": "`SELECT \n/* always include lhub_score in the final output */\nlhub_score,\n\n/* format the final JSON output */\nTO_JSON(STRUCT(\n\n/* Required/Standard fields first */\nlhub_score, alert_time,\nlh_batch_end, lh_batch_id, lh_hostname, lh_alert_id,\nalert_id, alert_type, technique, tactic, risk_score, fidelity_score,\n\n/* All other fields EXCEPT additional_data */\nattack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user,\n\n/* place additional_data last so it will be at the bottom of the JSON formatted output */\nadditional_data)) AS alert_output\nFROM validate_required_input`",
          "isOutput": true
        },
        {
          "name": "ensure_defined_fields_exist",
          "templateLQL": "ensureTableHasColumns(comment_ensure_table_has_columns, \"lhub_score, lhub_ts, alert_title, alert_time, alert_id, alert_type, technique, tactic, risk_score, fidelity_score, additional_data, attack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user\")",
          "isOutput": false
        },
        {
          "name": "final_columns",
          "templateLQL": "`SELECT \n/* Required/standard fields first */\nlh__new_score AS lhub_score,\nlh__new_ts AS lhub_ts,\nlh__new_ts AS alert_time,\nlh_batch_end, lh_batch_id, lh_hostname, lh_alert_id,\nalert_id,\n\n/* Legacy support for \"alert_title\" which is now called \"alert_type\" */\nCOALESCEEMPTY(alert_type, alert_title) AS alert_type,\n\ntechnique, tactic, risk_score, fidelity_score,\n\n/* All other supported fields */\nadditional_data, attack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user\n\nFROM calculate_new_score_and_time`",
          "isOutput": false
        },
        {
          "name": "add_batch_metadata",
          "templateLQL": "addExecutionMetadata(ensure_defined_fields_exist)",
          "isOutput": false
        },
        {
          "name": "calculate_new_score_and_time",
          "templateLQL": "`SELECT \n/* If lhub_score = 0, keep it 0, otherwise use the greater of the original value or risk times fidelity */\nCASE DOUBLE(lhub_score) WHEN 0 THEN DOUBLE(lhub_score) ELSE GREATEST(risk_score * fidelity_score, DOUBLE(lhub_score)) END AS lh__new_score,\n\n/* For timestamp, look first for alert_time, then lhub_ts, then batch end time */\nCASE\n  WHEN BIGINT(alert_time) IS NOT NULL THEN BIGINT(alert_time)\n  WHEN BIGINT(lhub_ts) IS NOT NULL THEN BIGINT(lhub_ts) ELSE BIGINT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.interval_end_millis\"))\nEND AS lh__new_ts,\n\nREGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), '://(.*?)/') AS lh_hostname,\nREGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), '(batch-\\\\d+)$') AS lh_batch_id,\nBIGINT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.interval_end_millis\")) AS lh_batch_end,\n\n/* Generate a unique (mostly) event ID from the batch number + lhub_id */\nBIGINT(PRINTF('%s%s', REGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), 'batch-(\\\\d+)$'), lhub_id)) AS lh_alert_id,\n*\nFROM add_batch_metadata`",
          "isOutput": false
        },
        {
          "name": "comment_ensure_table_has_columns",
          "templateLQL": "`\n/* Since some columns are only conditionally required, there has to be a step to explicitly check for values in those fields anyway, so to keep it simple, all possible fields are protected in ensureTableHasColumns, and some are validated later to ensure that they have a value.\n\nFields supported but not part of the final JSON schema:\n- lhub_score - can be used to override final score\n- lhub_ts - when available, used to calculate alert_time\n- alert_title - legacy support, but since renamed to alert_type\n\nNot expected from input but allowed when available:\n- alert_time: calculated from lhub_ts or batch time, but if this is available then we'll accept it as truth\n\nAfter that, ALL SUPPORTED FIELDS from supported schema\nhttps://logichub.atlassian.net/wiki/spaces/CON/pages/797671425/Output+Schema+for+LogicHub+Content\n*/\n\nselect * from %%%parent0%%%`",
          "isOutput": false
        },
        {
          "name": "check_for_required_fields",
          "templateLQL": "`/*\nOnce all calculations are done, verify that all the required fields have values.\nNote that some fields allow empty strings for the time being, as long as they aren't null. This is just to allow us to transition into this new alert schema while we figure it all out.\n*/\n\nSELECT *,\nCASE\n    /* array_sort will put nulls at the end, so this is a quick way to check all required inputs at once */\n    WHEN ELEMENT_AT(ARRAY_SORT(ARRAY(alert_id, alert_type, technique, tactic, risk_score, fidelity_score)), -1) IS NULL THEN 'One or more required inputs is missing or null. Required fields: alert_id, alert_type, technique, tactic, risk_score, fidelity_score'\n    WHEN TRIM(alert_id) = '' THEN 'alert_id cannot be empty'\n    WHEN TRIM(alert_type) = '' THEN 'alert_type cannot be empty'\n    WHEN risk_score NOT IN (1, 2, 3) THEN PRINTF('Invalid value for risk_score (%s). Acceptable values are from 1 (low), 2 (medium) and 3 (high).', risk_score)\n    WHEN fidelity_score NOT IN (1, 2, 3) THEN PRINTF('Invalid value for fidelity_score (%s). Acceptable values are from 1 (low), 2 (medium) and 3 (high).', fidelity_score)\n    WHEN FLOAT(lhub_score) IS NULL THEN 'Unable to calculate lhub_score from provided columns'\n    WHEN lhub_score > 10 OR lhub_score < 0 THEN PRINTF('Invalid value for lhub_score (%s). Acceptable values are from 0-10.', lhub_score)\nEND AS error\n\nFROM final_columns`",
          "isOutput": false
        },
        {
          "name": "validate_required_input",
          "templateLQL": "forceFail(check_for_required_fields, \"error\")",
          "isOutput": false
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent node",
              "label": "Parent Node",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "chad@logichub.com",
      "categories": [],
      "isEditable": true,
      "integrations": [],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 31,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    }
  ],
  "annotations": [],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}