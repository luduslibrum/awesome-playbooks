{
  "flows": [
    {
      "name": "yyy_a_Detection - Proofpoint_Monitoring",
      "nodes": [
        {
          "id": "3b7d3f58-7d8f-4544-972f-d974b1372b52",
          "name": "Proofpoint",
          "kind": "eventType",
          "isLeaf": false,
          "eventType": "eventType-13",
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 0,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "EventTypeContentKind",
            "id": "eventType-13"
          },
          "categoryKind": "FetchData",
          "linkToTrigger": true,
          "iconTitle": "Fetch Data: Proofpoint",
          "usedByEventTypes": []
        },
        {
          "id": "4968cd5f-a766-4232-9a82-e63c1ba2765f",
          "name": "Convert_Parts_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Extract_Initial_JSON_fields, \"msgparts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "0be697dc-cfac-4054-8872-327713821a49",
          "name": "Explode_Parts_To_Rows",
          "kind": "augmentation",
          "lql": "`select *, explode(array_msgparts) msgparts_single from Convert_Parts_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 443,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2777ed61-4be9-4839-88d9-d1bac497deb5",
          "name": "Extract_Initial_JSON_fields",
          "kind": "augmentation",
          "lql": "`select get_json_object(_raw, \"$.filter.qid\") AS qid, get_json_object(_raw, \"$.filter.disposition\") AS disposition, get_json_object(_raw, \"$.msg.header.subject[0]\") AS subject, get_json_object(_raw, \"$.envelope.rcpts\") AS rcpts, get_json_object(_raw, \"$.connection.host\") AS host, get_json_object(_raw, \"$.connection.ip\") AS ip, get_json_object(_raw, \"$.filter.routeDirection\") AS direction, get_json_object(_raw, \"$.msg.parsedAddresses.from[0]\") AS sender, get_json_object(_raw, \"$.msg.header.reply-to[0]\") AS replyto, GET_JSON_OBJECT(_raw,\"$.msgParts\") as msgParts, * from Proofpoint`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 131,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "93956b59-17d2-48e5-a240-ba92d52c2a7a",
          "name": "Extract_JSON_fields_From_Parts",
          "kind": "augmentation",
          "lql": "`select get_json_object(msgparts_single, \"$.md5\") AS md5, get_json_object(msgparts_single, \"$.labeledMime\") AS labeledMime, get_json_object(msgparts_single, \"$.detectedMime\") AS detectedMime, get_json_object(msgparts_single, \"$.detectedExt\") AS detectedExt, get_json_object(msgparts_single, \"$.labeledExt\") AS labeledExt, get_json_object(msgparts_single, \"$.labeledName\") AS labeledName, get_json_object(msgparts_single, \"$.detectedName\") AS detectedName, get_json_object(msgparts_single, \"$.urls\") AS urls, * from Explode_Parts_To_Rows`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 574,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "acaea8bc-71d0-4e9f-8827-40df38940528",
          "name": "Convert_URLs_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Extract_JSON_fields_From_Parts, \"urls\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 960,
          "y": 743,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "87201c25-489c-4f25-9354-a6c492fb69b6",
          "name": "Parsed_Proofpoint_Data",
          "kind": "augmentation",
          "lql": "`select * from Convert_URLs_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 960,
          "y": 899,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "9ce492ac-3a94-48b5-a12c-3a65845ba7bf",
          "name": "Subjects_with_multiple_dispositions",
          "kind": "augmentation",
          "lql": "`select count(distinct(disposition)) as _count, collect_set(disposition) as dispositions, collect_set(qid) AS qids from Parsed_Proofpoint_Data WHERE subject != '' GROUP BY subject HAVING _count>1`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2420,
          "y": 1042,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "bd360192-a37a-477b-be85-f79164935e60",
          "name": "Explode_Subject_QIDs_to_rows",
          "kind": "augmentation",
          "lql": "`select *, explode(qids) qid from Subjects_with_multiple_dispositions`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2420,
          "y": 1211,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "56ba2e5d-0642-4ba3-a75b-409175f2f8a3",
          "name": "Interesting_Subject_QIDs",
          "kind": "augmentation",
          "lql": "`select count(*) AS _count from Explode_Subject_QIDs_to_rows GROUP BY qid`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2420,
          "y": 1393,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "03e0259f-0fc1-4b3e-a593-56965bc816ab",
          "name": "Join_Subject_QIDs_To_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Interesting_Subject_QIDs,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2340,
          "y": 1549,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "c2e8a687-3bcb-44c1-9b28-9d503616e7f8",
          "name": "Convert_Subject_Anomoly_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Find_Subject_QIDs_That_Continued, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2340,
          "y": 2469,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "4058250a-93fb-49cf-b838-aa8c70fa6b24",
          "name": "Make_Individual_Recipients_From_Subject_Anomolies",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Subject_Anomoly_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2340,
          "y": 2663,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c807c710-ea61-4df2-9153-722817d487bb",
          "name": "Explode_sender_QIDs_to_rows",
          "kind": "augmentation",
          "lql": "`select *, explode(qids) qid from Senders_with_multiple_dispositions`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 550,
          "y": 1211,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "798773bf-4ca6-496b-ab85-06e3eb6fd676",
          "name": "Interesting_Sender_QIDs",
          "kind": "augmentation",
          "lql": "`select count(*) AS _count from Explode_sender_QIDs_to_rows GROUP BY qid `",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 550,
          "y": 1393,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "3df154fd-e804-48a2-af0f-eda0393f7512",
          "name": "Find_Sender_QIDs_That_Continued",
          "kind": "augmentation",
          "lql": "`select * from Join_Sender_QIDs_To_Original_Logs where disposition='continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 630,
          "y": 1731,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c6039f70-e433-4ea6-ac49-0599270a0c5b",
          "name": "Find_Subject_QIDs_That_Continued",
          "kind": "augmentation",
          "lql": "`select * from Join_Subject_QIDs_To_Original_Logs where disposition='continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2340,
          "y": 2300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "4a1ab18d-688e-45de-9228-d41c3b4e8e11",
          "name": "Join_Sender_QIDs_To_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Interesting_Sender_QIDs,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 630,
          "y": 1549,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "4161292c-57ed-45cf-b8b8-1ec7f6bcc2cf",
          "name": "Convert_Sender_Anomoly_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Find_Sender_QIDs_That_Continued, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 630,
          "y": 1925,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "d9371ef7-4fd8-4c73-9f43-838167d34b0a",
          "name": "Make_Individual_Recipients_From_Sender_Anomolies",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Sender_Anomoly_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 630,
          "y": 2105,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "37bf2dc9-9a97-43d3-b4ac-b4b03a58fb40",
          "name": "Senders_with_multiple_dispositions",
          "kind": "augmentation",
          "lql": "`select count(distinct(disposition)) as _count, collect_set(disposition) as dispositions, collect_set(qid) AS qids from Parsed_Proofpoint_Data WHERE subject != '' GROUP BY sender HAVING _count>1`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 550,
          "y": 1042,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "595a2632-8088-42aa-a0b8-1f45605def8b",
          "name": "Relays_with_multiple_dispositions",
          "kind": "augmentation",
          "lql": "`select count(distinct(disposition)) as _count, collect_set(disposition) as dispositions, collect_set(qid) AS qids from Parsed_Proofpoint_Data WHERE subject != '' GROUP BY host HAVING _count>1`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1510,
          "y": 1042,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "31ec889d-76ad-4e31-bea4-fe46cbceba7b",
          "name": "Explode_relay_QIDs_to_rows",
          "kind": "augmentation",
          "lql": "`select *, explode(qids) qid from Relays_with_multiple_dispositions`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1510,
          "y": 1211,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "7c7c82d7-f844-4ae1-b5e3-d16f30bbe8e2",
          "name": "Interesting_relay_QIDs",
          "kind": "augmentation",
          "lql": "`select count(*) AS _count from Explode_relay_QIDs_to_rows GROUP BY qid `",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1510,
          "y": 1393,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ea6f3dc5-8eb0-42bf-8a57-2dcf7a3f1e79",
          "name": "Join_Relay_QIDs_To_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Interesting_relay_QIDs,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 1549,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "f268fc5c-80ab-46e5-bd8f-2b9f5b6c44dc",
          "name": "Find_Relay_QIDs_That_Continued",
          "kind": "augmentation",
          "lql": "`select * from Join_Relay_QIDs_To_Original_Logs where disposition='continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 1731,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "6ab661e5-97ed-4e9a-965b-e6333d130014",
          "name": "Convert_Relay_Anomoly_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Find_Relay_QIDs_That_Continued, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 1925,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "27da1dcc-9a95-43a5-a492-9a234f676f30",
          "name": "Make_Individual_Recipients_From_Relay_Anomolies",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Relay_Anomoly_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 2105,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "af5262c8-c8a2-4e7d-aa3f-bad4d4f46193",
          "name": "Blocked_outbound_emails",
          "kind": "augmentation",
          "lql": "`select * from Extract_Initial_JSON_fields where direction='outbound' AND sender like '%@%' AND disposition != 'continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 800,
          "y": 2482,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "e5a15e64-e3af-4f71-8eec-06ec7d9c976e",
          "name": "Look_for_attachments_with_space_after_filename",
          "kind": "augmentation",
          "lql": "`select * from Extract_Initial_JSON_fields where (msgParts regexp '\\\"detectedName\\\":\\\"[^\\\"]+ \\\",') OR (msgParts regexp '\\\"labeledName\\\":\\\"[^\\\"]+ \\\",')`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 2287,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "d5eec447-b099-43f2-9da8-9c116094e208",
          "name": "Convert_File_Space_Exploit_Rcpts_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Look_for_attachments_with_space_after_filename, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 2482,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "acd0dda3-6973-41c2-80ca-6775118278a5",
          "name": "Make_Individual_Recipients_From_File_Space_Exploit",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_File_Space_Exploit_Rcpts_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 2663,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "19745350-73d8-452d-bd7b-899f5e5692df",
          "name": "Common_Office_Attachments",
          "kind": "augmentation",
          "lql": "`select * from Extract_JSON_fields_From_Parts where detectedExt IN ('DOCX', 'XLSX', 'PPT', 'PPTX', 'DOC', 'PDF', 'XLS', 'RTF') AND disposition!='reject' AND disposition!='discard'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1740,
          "y": 2300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "fc3b3e77-7f66-46c8-be53-34549ea39bb1",
          "name": "Convert_Common_Attachment_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Common_Office_Attachments, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1740,
          "y": 2469,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "addab4c4-7df2-4042-b086-d67a24194570",
          "name": "Make_Individual_Recipients_From_Common_Attachments_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Common_Attachment_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1740,
          "y": 2651,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "a033c6fc-90ca-4029-b027-069c8ee89af6",
          "name": "Uncommon_Attachments",
          "kind": "augmentation",
          "lql": "`select * from Extract_JSON_fields_From_Parts where detectedExt IN ('SCR', 'COM', 'BAT', 'EXE', 'LNK', 'PIF', 'CPL','PS1','PS','VBA') AND disposition!='reject' AND disposition!='discard'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 2313,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "8bd43494-7778-4a4b-a65a-283725571b89",
          "name": "Convert_Uncommon_Attachment_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Uncommon_Attachments, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 2469,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "d75089cd-dda1-4fb4-beb4-461a8140603b",
          "name": "Make_Individual_Recipients_From_Uncommon_Attachments_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Uncommon_Attachment_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 2651,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "87fe0cd1-814e-4d7d-964d-40ea5fe80b8c",
          "name": "Set_Time_Buckets",
          "kind": "augmentation",
          "lql": "timeBucket(Remove_Selected_Subject_Modifications, \"2m\")",
          "operator": "timeBucket",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3220,
          "y": 443,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "timeBucket"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Time Bucket",
          "usedByEventTypes": []
        },
        {
          "id": "b34221c8-fe06-41f7-9d3d-80c626c79fa1",
          "name": "Remove_Selected_Subject_Modifications",
          "kind": "augmentation",
          "lql": "`select lhub_ts, trim(regexp_replace(subject, '(FW:)|(\\\\[EXTERNAL\\\\])|(FWD:)', '')) AS subject, qid, disposition, rcpts, host, ip, direction, sender, replyto,msgParts from Extract_Initial_JSON_fields`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3220,
          "y": 287,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "c556f1b0-9ce7-4ccb-9068-ee6fb09690a3",
          "name": "Join_forwarding_QIDs_to_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Explode_forwarding_QIDs_to_rows,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3140,
          "y": 1042,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "8f12e37c-2bc4-4e49-b30e-8af750765eaf",
          "name": "Find_Possible_Forwarding",
          "kind": "augmentation",
          "lql": "`select count(distinct(direction)) AS _count, collect_set(concat(direction,'@',from_unixtime(lhub_ts/1000))) AS direction_set, collect_set(qid) AS related_qids from Set_Time_Buckets GROUP BY subject, lhub_start_ts, lhub_end_ts HAVING _count>1`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3220,
          "y": 574,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "b95bf625-3387-4f21-8a18-fdfd367d588c",
          "name": "Explode_forwarding_QIDs_to_rows",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(related_qids) qid FROM Reduce_To_Outbound`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3220,
          "y": 886,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "fcb1b3dc-f4bf-461d-9db3-a217f674708d",
          "name": "INDICATOR_Possible_Automatic_Email_Forwarding",
          "kind": "augmentation",
          "lql": "`select 'LH00241' AS alert_id, 'Possible Automatic Email Forwarding' AS alert_type, 'Exfiltration' AS tactic, 'Automated Exfiltration' AS technique, 1.0 AS lhub_score, 1.0 AS risk_score, 1.0 AS fidelity_score, lhub_ts AS alert_time, \" \" AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(subject,direction_set,related_qids,rcpts)) AS additional_data from Join_forwarding_QIDs_to_Original_Logs`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3140,
          "y": 1198,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ec74805f-5d7d-4f71-86ab-2fa04a6113fb",
          "name": "Reduce_To_Outbound",
          "kind": "augmentation",
          "lql": "`select * from Find_Possible_Forwarding where concat_ws(\";\",direction_set) regexp '.*outbound.*' AND subject != 'Returned mail: see transcript for details'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 3220,
          "y": 743,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "4de0796c-bc3d-4e9a-b336-2e4176dd5049",
          "name": "Find_double_extensions",
          "kind": "augmentation",
          "lql": "`select * from Extract_JSON_fields_From_Parts where lower(labeledName) regexp '^.*\\\\.(doc|docx|xls|xlsx|ppt|pptx|pdf|rtf|txt|jpg|gif|png)\\\\.\\\\w{3,4}$' AND disposition='continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 2313,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "4d142e2b-16d3-4a51-9167-01883d8194d1",
          "name": "Convert_double_Extension_recipients_to_array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Find_double_extensions, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 2469,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "6fda8c41-6b94-4d42-97f3-558bca577196",
          "name": "Make_Individual_Recipients_From_Double_Attachment_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_double_Extension_recipients_to_array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 2663,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "48a36ce2-e011-42f5-a461-d9dd23e3bb11",
          "name": "Find_accepted_incoming_emails_with_urls",
          "kind": "augmentation",
          "lql": "`select * from Parsed_Proofpoint_Data where direction='inbound' and disposition='continue' and size(array_urls)>0`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 1042,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "77ac3d33-2281-4e39-b3e7-659976368c47",
          "name": "Explode_to_individual_URLs",
          "kind": "augmentation",
          "lql": "`select *, explode(array_urls) url_as_json from Find_accepted_incoming_emails_with_urls`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 1211,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "79aefef9-2e31-4810-90b2-a21d2b657765",
          "name": "Remove_mailto_urls",
          "kind": "augmentation",
          "lql": "`select get_json_object(url_as_json, \"$.url\") AS url, * from Explode_to_individual_URLs where get_json_object(url_as_json, \"$.url\") NOT LIKE \"mailto:%\"`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 1393,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "82bf28ad-0142-4828-b308-b3b0f70f3294",
          "name": "Check_virus_total_url_reputation",
          "kind": "task",
          "lql": "runAction(Aggregate_distinct_URLs, \"logichub.virustotal\", 23, \"analyze_url\", {\"__lh_action_timeout_sec\": \"\", \"__lh_rows_to_process\": \"\", \"vt_action_type\": \"report\", \"vt_column_name\": \"url\", \"vt_time_between_consecutive_requests_millis\": \"2000\", \"__lh_multithread_count\": \"\"})",
          "operator": "runAction",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "maxRowsToProcess": 500,
          "delayBetweenRowsMillis": 0,
          "x": 230,
          "y": 1731,
          "vertices": [],
          "actionInstance": {
            "actionId": "analyze_url",
            "integrationId": "logichub.virustotal",
            "integrationInstanceId": 23,
            "data": {
              "__lh_multithread_count": "",
              "vt_action_type": "report",
              "vt_column_name": "url",
              "__lh_rows_to_process": "",
              "__lh_action_timeout_sec": "",
              "vt_time_between_consecutive_requests_millis": "2000"
            }
          },
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "contentMetadata": {
            "integrationId": "logichub.virustotal",
            "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/virius-total-logo.svg",
            "name": "Virus Total",
            "actionId": "analyze_url",
            "actionName": "Analyze URL"
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "IntegrationContentKind",
            "id": "logichub.virustotal/analyze_url"
          },
          "categoryKind": "Integration",
          "iconTitle": "Integration: Virus Total - Analyze URL",
          "usedByEventTypes": []
        },
        {
          "id": "11a5346d-bc39-4656-bacc-8064cb8bda98",
          "name": "Aggregate_distinct_URLs",
          "kind": "augmentation",
          "lql": "`select collect_set(qid) AS qids from Remove_mailto_urls GROUP BY url`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 1562,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "192ead5e-04f4-4389-baa1-15084083cb0a",
          "name": "Expand_malicious_url_qids",
          "kind": "augmentation",
          "lql": "`select *, explode(qids) qid from Find_malicious_urls`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 2118,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "9fc17a39-decf-4b14-a25f-f74edfcd8940",
          "name": "Convert_malicious_url_recipients_to_array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Join_malicious_url_qids_to_Original_Logs, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 310,
          "y": 2482,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "bff94f27-df71-4ebc-926a-d5f8ae133f50",
          "name": "Make_Individual_Recipients_From_Malicious_URL_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_malicious_url_recipients_to_array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 310,
          "y": 2651,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "60e88276-4ab7-4aff-9db7-149813fa77ab",
          "name": "Find_malicious_urls",
          "kind": "augmentation",
          "lql": "`select * from Check_virus_total_url_reputation where get_json_object(result, \"$.positives\") > 0`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 230,
          "y": 1937,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1df5a60e-72d3-449b-b0bf-fa5a18ef0b5b",
          "name": "Check_Virustotal_MD5_Database",
          "kind": "task",
          "lql": "runAction(Remove_probable_benign_attachmentsChild1, \"logichub.virustotal\", 23, \"analyze_file_hash\", {\"__lh_action_timeout_sec\": \"\", \"__lh_rows_to_process\": \"\", \"vt_column_name\": \"md5\", \"vt_time_between_consecutive_requests_millis\": \"2000\", \"__lh_multithread_count\": \"\"})",
          "operator": "runAction",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "maxRowsToProcess": 500,
          "delayBetweenRowsMillis": 0,
          "x": 2740,
          "y": 1042,
          "vertices": [],
          "actionInstance": {
            "actionId": "analyze_file_hash",
            "integrationId": "logichub.virustotal",
            "integrationInstanceId": 23,
            "data": {
              "__lh_multithread_count": "",
              "vt_column_name": "md5",
              "__lh_rows_to_process": "",
              "__lh_action_timeout_sec": "",
              "vt_time_between_consecutive_requests_millis": "2000"
            }
          },
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "contentMetadata": {
            "integrationId": "logichub.virustotal",
            "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/virius-total-logo.svg",
            "name": "Virus Total",
            "actionId": "analyze_file_hash",
            "actionName": "Analyze File Hash"
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "IntegrationContentKind",
            "id": "logichub.virustotal/analyze_file_hash"
          },
          "categoryKind": "Integration",
          "iconTitle": "Integration: Virus Total - Analyze File Hash",
          "usedByEventTypes": []
        },
        {
          "id": "cb162541-4629-4aef-b8d2-4bbafefd1fbe",
          "name": "Remove_probable_benign_attachmentsChild1",
          "kind": "augmentation",
          "lql": "`select collect_set(qid) AS qids from Remove_probable_benign_attachments GROUP BY md5`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2740,
          "y": 886,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "1b54e33a-d0ca-4a5f-86fd-bc38e2a98709",
          "name": "Find_results_with_malicious_attachments",
          "kind": "augmentation",
          "lql": "`select * from Check_Virustotal_MD5_Database where (get_json_object(result, \"$.has_error\") != TRUE) AND (get_json_object(result, \"$.positives\") > 0)`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2740,
          "y": 1211,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "ada68790-d633-40f2-a69f-517ef716ef52",
          "name": "Expand_malicious_attachment_qids",
          "kind": "augmentation",
          "lql": "`select *, explode(qids) qid from Find_results_with_malicious_attachments`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2740,
          "y": 1380,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "5834f225-a9da-46fb-8bf6-dec0e63756ac",
          "name": "Join_malicious_url_qids_to_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Expand_malicious_url_qids,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 310,
          "y": 2300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "bf14ce10-7a98-436a-b025-a334afa2c7aa",
          "name": "Join_malicious_attachment_qids_to_Original_Logs",
          "kind": "augmentation",
          "lql": "autoJoinTables([Expand_malicious_attachment_qids,Extract_Initial_JSON_fields])",
          "operator": "autoJoinTables",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2660,
          "y": 1536,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoinTables"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join Tables",
          "usedByEventTypes": []
        },
        {
          "id": "dbaa719f-183b-4d94-9075-01349e87d5ef",
          "name": "Convert_malicious_attachment_recipients_to_array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Join_malicious_attachment_qids_to_Original_Logs, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2660,
          "y": 1718,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "8d8ea7d4-f41d-49a0-96aa-c31f56ef067c",
          "name": "Make_Individual_Recipients_From_Malicious_Attachment_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_malicious_attachment_recipients_to_array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2660,
          "y": 1900,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "977fb0ca-6d75-468d-b56a-b61346bc3033",
          "name": "INDICATOR_Malicious_URL_Delivered_in_Email",
          "kind": "augmentation",
          "lql": "`select 'LH00243' AS alert_id, 'Malicious URL Delivered in Email' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Link' AS technique, 6.0 AS lhub_score, 3.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, _raw AS additional_data from Make_Individual_Recipients_From_Malicious_URL_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 310,
          "y": 2869,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "6f5f0af3-4c80-4f40-8eda-7ccfd3175a16",
          "name": "Output",
          "kind": "output",
          "warnings": [],
          "description": "",
          "nodes": [
            "f7facbb7-0338-4587-ab41-cdb8f46ddfd4"
          ],
          "isExplainable": true,
          "x": 1580,
          "y": 3375,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "6c501256-88f9-43d0-980e-0e4cc53d2b07",
          "name": "Remove_probable_benign_attachments",
          "kind": "augmentation",
          "lql": "`select * from Extract_JSON_fields_From_Parts WHERE detectedExt NOT in('TXT','HTML','ICS','JPG','PNG','GIF','CSV','XML','MSG','PDF') AND direction='inbound' and disposition='continue'\n/* DEVELOPER NOTE - PDF files may or may not be benign, but in this case, it was excluded to manage volume */`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2740,
          "y": 730,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "bc553ecb-bc9e-4402-84e9-1ec422528a15",
          "name": "INDICATOR_Blocked_Subject_Delivered",
          "kind": "augmentation",
          "lql": "`select 'LH00233' AS alert_id, 'Blocked Subject Delivered' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Link' AS technique, 4.0 AS lhub_score, 2.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject)) AS additional_data from Make_Individual_Recipients_From_Subject_Anomolies`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2340,
          "y": 2869,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "d8bc3732-cf25-4207-a4e8-c062e7d6680f",
          "name": "INDICATOR_Email_From_Blocked_Sender_Delivered",
          "kind": "augmentation",
          "lql": "`select 'LH00234' AS alert_id, 'Email From Blocked Sender Delivered' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Link' AS technique, 4.0 AS lhub_score, 2.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject)) AS additional_data from Make_Individual_Recipients_From_Sender_Anomolies`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 630,
          "y": 2287,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "73c8a105-731d-442c-99e3-bf4b7df2fe5a",
          "name": "INDICATOR_Double_Extension_Attachment_Delivered",
          "kind": "augmentation",
          "lql": "`select 'LH00242' AS alert_id, 'Double Extension Attachment Delivered' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Attachment' AS technique, 1.0 AS lhub_score, 1.0 AS risk_score, 1.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject,labeledName)) AS additional_data from Make_Individual_Recipients_From_Double_Attachment_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 0,
          "y": 2856,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "83d3ee23-471d-42b0-a3ca-c00d8aa60fa2",
          "name": "INDICATOR_Common_Attachment_User_Execution",
          "kind": "augmentation",
          "lql": "`select 'LH00238' AS alert_id, 'Common Attachment User Execution' AS alert_type, 'Execution' AS tactic, 'User Execution' AS technique, 1.0 AS lhub_score, 1.0 AS risk_score, 1.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject, detectedName)) AS additional_data from Make_Individual_Recipients_From_Common_Attachments_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1740,
          "y": 2856,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "138722ec-b8cf-4243-9b04-f50a87c521d1",
          "name": "INDICATOR_Proofpoint_Space_After_Filename",
          "kind": "augmentation",
          "lql": "`select 'LH00237' AS alert_id, 'Proofpoint - Space after Filename' AS alert_type, 'Execution' AS tactic, 'Space after Filename' AS technique, 4.0 AS lhub_score, 2.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, _raw AS additional_data from Make_Individual_Recipients_From_File_Space_Exploit`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2040,
          "y": 2869,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "e8cb8311-5a6d-4290-8b9e-73376f3fbc9d",
          "name": "INDICATOR_Email_From_Blocked_Relay_Delivered",
          "kind": "augmentation",
          "lql": "`select 'LH00235' AS alert_id, 'Email From Blocked Relay Delivered' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Link' AS technique, 4.0 AS lhub_score, 2.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject,host)) AS additional_data from Make_Individual_Recipients_From_Relay_Anomolies`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1430,
          "y": 2300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "f1cbceec-11a4-4d65-a48f-c6db4dc6c7ad",
          "name": "INDICATOR_Uncommon_Attachment_User_Execution",
          "kind": "augmentation",
          "lql": "`select 'LH00239' AS alert_id, 'Uncommon Email Attachment Delivered' AS alert_type, 'Execution' AS tactic, 'User Execution' AS technique, 3.0 AS lhub_score, 3.0 AS risk_score, 1.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject, detectedName)) AS additional_data from Make_Individual_Recipients_From_Uncommon_Attachments_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1120,
          "y": 2856,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "3648ec31-6550-4579-aaae-74e0a448d2a1",
          "name": "INDICATOR_Malicious_Attachment_Delivered",
          "kind": "augmentation",
          "lql": "`select 'LH00264' AS alert_id, 'Malicious Attachment Delivered in Email' AS alert_type, 'Initial Access' AS tactic, 'Spearphishing Attachment' AS technique, 6.0 AS lhub_score, 3.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject,md5)) AS additional_data from Make_Individual_Recipients_From_Malicious_Attachment_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2660,
          "y": 2118,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "99fe9a88-41e0-46a4-88d7-c52cbabedc46",
          "name": "Convert_Internal_Recipients_To_Array",
          "kind": "augmentation",
          "lql": "jsonListToArray(Find_Internal_Stopped_Emails, \"rcpts\")",
          "operator": "jsonListToArray",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 2118,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "jsonListToArray"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Json List To Array",
          "usedByEventTypes": []
        },
        {
          "id": "d3e52f40-1cb8-4348-82d5-faa418f1e535",
          "name": "Make_Individual_Internal_Recipients",
          "kind": "augmentation",
          "lql": "`SELECT *, explode(array_rcpts) individual_recipient FROM Convert_Internal_Recipients_To_Array`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 2300,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "62157827-1161-4b57-9e21-b90884e3b093",
          "name": "Find_Internal_Stopped_Emails",
          "kind": "augmentation",
          "lql": "`select * from Extract_Initial_JSON_fields where /* direction='internal' AND */ sender like '%@%' AND disposition != 'continue'`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 1925,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "85bee11a-6eea-42b9-b660-a2afa3702af8",
          "name": "Sender_and_Recipients_With_Same_Domain",
          "kind": "augmentation",
          "lql": "`select * from Find_sender_and_recipient_domains where sender_domain=recipient_domain`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 2676,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "57cb4099-5469-4f31-b16b-243e6f13e5d9",
          "name": "Find_sender_and_recipient_domains",
          "kind": "augmentation",
          "lql": "`SELECT regexp_extract(sender, '.*@(.*)') AS sender_domain, regexp_extract(individual_recipient, '.*@(.*)') AS recipient_domain, * from Make_Individual_Internal_Recipients`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 2482,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "2a6b8f1f-b2cf-4d48-a059-1e297176baf0",
          "name": "INDICATOR_Possible_Internal_Spearphishing",
          "kind": "augmentation",
          "lql": "`select 'LH00716' AS alert_id, 'Possible Internal Spearphishing' AS alert_type, 'Lateral Movement' AS tactic, 'Spearphishing Link' AS technique, 1.0 AS lhub_score, 1.0 AS risk_score, 1.0 AS fidelity_score, lhub_ts AS alert_time, individual_recipient AS dest_user, sender AS src_user, TO_JSON(STRUCT(_messageid,subject)) AS additional_data from Sender_and_Recipients_With_Same_Domain`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 2970,
          "y": 2869,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "5786e455-8c0d-4faa-8d7b-1f2f35799ca8",
          "name": "Join_all_indicators",
          "kind": "augmentation",
          "lql": "unionAll(INDICATOR_Email_From_Blocked_Sender_Delivered, INDICATOR_Blocked_Subject_Delivered, INDICATOR_Email_From_Blocked_Relay_Delivered, INDICATOR_Blocked_outbound_emails, INDICATOR_Proofpoint_Space_After_Filename, INDICATOR_Common_Attachment_User_Execution, INDICATOR_Uncommon_Attachment_User_Execution, INDICATOR_Possible_Automatic_Email_Forwarding, INDICATOR_Double_Extension_Attachment_Delivered, INDICATOR_Malicious_URL_Delivered_in_Email, INDICATOR_Malicious_Attachment_Delivered, INDICATOR_Possible_Internal_Spearphishing)",
          "operator": "unionAll",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 1580,
          "y": 3038,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "unionAll"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Union All",
          "usedByEventTypes": []
        },
        {
          "id": "d9f71c07-e38c-4891-8d90-91100ce488bd",
          "name": "Ensure_columns_for_Blocked_outbound_emails",
          "kind": "augmentation",
          "lql": "ensureTableHasColumns(Blocked_outbound_emails, \"_messageid\")",
          "operator": "ensureTableHasColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 800,
          "y": 2663,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "ensureTableHasColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Ensure Table Has Columns",
          "usedByEventTypes": []
        },
        {
          "id": "8bc1937e-fd02-4ad9-9f79-c0533991d536",
          "name": "INDICATOR_Blocked_outbound_emails",
          "kind": "augmentation",
          "lql": "`select 'LH00236' AS alert_id, 'Blocked outbound_email' AS alert_type, 'Exfiltration' AS tactic, 'Exfiltration Over Alternative Protocol' AS technique, 4.0 AS lhub_score, 2.0 AS risk_score, 2.0 AS fidelity_score, lhub_ts AS alert_time, ' ' AS dest_user, sender AS src_user, \" \" AS src_ip, \n\" \" AS src_machine_name, TO_JSON(STRUCT(_messageid,subject)) AS additional_data from Ensure_columns_for_Blocked_outbound_emails`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 800,
          "y": 2869,
          "vertices": [],
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "formType": "LQLEditor",
          "categoryKind": "Code",
          "iconTitle": "Code: SQL",
          "usedByEventTypes": []
        },
        {
          "id": "f7facbb7-0338-4587-ab41-cdb8f46ddfd4",
          "name": "LogicHub_MDR_Format_Alert_for_Sumo",
          "kind": "step",
          "inputs": [
            "5786e455-8c0d-4faa-8d7b-1f2f35799ca8"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Format event output to send to SumoLogic destination",
          "isExplainable": true,
          "x": 1580,
          "y": 3169,
          "vertices": [],
          "title": "LogicHub MDR: Format Alert for Sumo",
          "moduleId": "logichub.mdr.format_alert_for_sumo",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 31,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "parent0": "Join_all_indicators"
          },
          "stepParams": {
            "kind": "module",
            "title": "LogicHub MDR: Format Alert for Sumo"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "logichub.mdr.format_alert_for_sumo",
            "name": "LogicHub MDR: Format Alert for Sumo",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 31,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": true,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "logichub.mdr.format_alert_for_sumo"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: LogicHub MDR: Format Alert for Sumo",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1019",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [
    {
      "id": "eventType-13",
      "data": {
        "name": "Proofpoint",
        "query": "_sourceCategory=security/email/proofpoint/prod",
        "keyColumns": "_raw",
        "connection": "connection-2",
        "connectionTypeEntities": {
          "entities": [
            {
              "connectionType": {
                "connectionType": "sumologic",
                "value": "query"
              },
              "connectionTypeDetail": {
                "query": "_sourceCategory=security/email/proofpoint/prod",
                "connection": "connection-2"
              }
            }
          ]
        },
        "defaultConnectionType": {
          "connectionType": "sumologic",
          "value": "query"
        }
      }
    }
  ],
  "connections": [
    {
      "id": "connection-2",
      "data": {
        "connectionType": "sumologic",
        "name": "SumoLogic",
        "isActive": false,
        "account": "",
        "secret": "",
        "url": "https://api.us2.sumologic.com/api/v1"
      }
    }
  ],
  "modules": [
    {
      "id": "logichub.mdr.format_alert_for_sumo",
      "name": "LogicHub MDR: Format Alert for Sumo",
      "description": "Format event output to send to a SumoLogic destination",
      "templateNodes": [
        {
          "name": "alert_output_for_sumo",
          "templateLQL": "`SELECT \n/* always include lhub_score in the final output */\nlhub_score,\n\n/* format the final JSON output */\nTO_JSON(STRUCT(\n\n/* Required/Standard fields first */\nlhub_score, alert_time,\nlh_batch_end, lh_batch_id, lh_hostname, lh_alert_id,\nalert_id, alert_type, technique, tactic, risk_score, fidelity_score,\n\n/* All other fields EXCEPT additional_data */\nattack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user,\n\n/* place additional_data last so it will be at the bottom of the JSON formatted output */\nadditional_data)) AS alert_output\nFROM validate_required_input`",
          "isOutput": true
        },
        {
          "name": "ensure_defined_fields_exist",
          "templateLQL": "ensureTableHasColumns(comment_ensure_table_has_columns, \"lhub_score, lhub_ts, alert_title, alert_time, alert_id, alert_type, technique, tactic, risk_score, fidelity_score, additional_data, attack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user\")",
          "isOutput": false
        },
        {
          "name": "final_columns",
          "templateLQL": "`SELECT \n/* Required/standard fields first */\nlh__new_score AS lhub_score,\nlh__new_ts AS lhub_ts,\nlh__new_ts AS alert_time,\nlh_batch_end, lh_batch_id, lh_hostname, lh_alert_id,\nalert_id,\n\n/* Legacy support for \"alert_title\" which is now called \"alert_type\" */\nCOALESCEEMPTY(alert_type, alert_title) AS alert_type,\n\ntechnique, tactic, risk_score, fidelity_score,\n\n/* All other supported fields */\nadditional_data, attack_chain, dest_ip, dest_machine_name, dest_machine_fqdn, dest_nt_domain, dest_port, dest_user, src_ip, src_machine_name, src_machine_fqdn, src_nt_domain, src_port, src_user\n\nFROM calculate_new_score_and_time`",
          "isOutput": false
        },
        {
          "name": "add_batch_metadata",
          "templateLQL": "addExecutionMetadata(ensure_defined_fields_exist)",
          "isOutput": false
        },
        {
          "name": "calculate_new_score_and_time",
          "templateLQL": "`SELECT \n/* If lhub_score = 0, keep it 0, otherwise use the greater of the original value or risk times fidelity */\nCASE DOUBLE(lhub_score) WHEN 0 THEN DOUBLE(lhub_score) ELSE GREATEST(risk_score * fidelity_score, DOUBLE(lhub_score)) END AS lh__new_score,\n\n/* For timestamp, look first for alert_time, then lhub_ts, then batch end time */\nCASE\n  WHEN BIGINT(alert_time) IS NOT NULL THEN BIGINT(alert_time)\n  WHEN BIGINT(lhub_ts) IS NOT NULL THEN BIGINT(lhub_ts) ELSE BIGINT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.interval_end_millis\"))\nEND AS lh__new_ts,\n\nREGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), '://(.*?)/') AS lh_hostname,\nREGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), '(batch-\\\\d+)$') AS lh_batch_id,\nBIGINT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.interval_end_millis\")) AS lh_batch_end,\n\n/* Generate a unique (mostly) event ID from the batch number + lhub_id */\nBIGINT(PRINTF('%s%s', REGEXP_EXTRACT(GET_JSON_OBJECT(lhub_execution_metadata, \"$.batch_url\"), 'batch-(\\\\d+)$'), lhub_id)) AS lh_alert_id,\n*\nFROM add_batch_metadata`",
          "isOutput": false
        },
        {
          "name": "comment_ensure_table_has_columns",
          "templateLQL": "`\n/* Since some columns are only conditionally required, there has to be a step to explicitly check for values in those fields anyway, so to keep it simple, all possible fields are protected in ensureTableHasColumns, and some are validated later to ensure that they have a value.\n\nFields supported but not part of the final JSON schema:\n- lhub_score - can be used to override final score\n- lhub_ts - when available, used to calculate alert_time\n- alert_title - legacy support, but since renamed to alert_type\n\nNot expected from input but allowed when available:\n- alert_time: calculated from lhub_ts or batch time, but if this is available then we'll accept it as truth\n\nAfter that, ALL SUPPORTED FIELDS from supported schema\nhttps://logichub.atlassian.net/wiki/spaces/CON/pages/797671425/Output+Schema+for+LogicHub+Content\n*/\n\nselect * from %%%parent0%%%`",
          "isOutput": false
        },
        {
          "name": "check_for_required_fields",
          "templateLQL": "`/*\nOnce all calculations are done, verify that all the required fields have values.\nNote that some fields allow empty strings for the time being, as long as they aren't null. This is just to allow us to transition into this new alert schema while we figure it all out.\n*/\n\nSELECT *,\nCASE\n    /* array_sort will put nulls at the end, so this is a quick way to check all required inputs at once */\n    WHEN ELEMENT_AT(ARRAY_SORT(ARRAY(alert_id, alert_type, technique, tactic, risk_score, fidelity_score)), -1) IS NULL THEN 'One or more required inputs is missing or null. Required fields: alert_id, alert_type, technique, tactic, risk_score, fidelity_score'\n    WHEN TRIM(alert_id) = '' THEN 'alert_id cannot be empty'\n    WHEN TRIM(alert_type) = '' THEN 'alert_type cannot be empty'\n    WHEN risk_score NOT IN (1, 2, 3) THEN PRINTF('Invalid value for risk_score (%s). Acceptable values are from 1 (low), 2 (medium) and 3 (high).', risk_score)\n    WHEN fidelity_score NOT IN (1, 2, 3) THEN PRINTF('Invalid value for fidelity_score (%s). Acceptable values are from 1 (low), 2 (medium) and 3 (high).', fidelity_score)\n    WHEN FLOAT(lhub_score) IS NULL THEN 'Unable to calculate lhub_score from provided columns'\n    WHEN lhub_score > 10 OR lhub_score < 0 THEN PRINTF('Invalid value for lhub_score (%s). Acceptable values are from 0-10.', lhub_score)\nEND AS error\n\nFROM final_columns`",
          "isOutput": false
        },
        {
          "name": "validate_required_input",
          "templateLQL": "forceFail(check_for_required_fields, \"error\")",
          "isOutput": false
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Parent node",
              "label": "Parent Node",
              "dataType": "node",
              "inputType": "columnSelect",
              "dependsOn": "",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "chad@logichub.com",
      "categories": [],
      "isEditable": true,
      "integrations": [],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 31,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    }
  ],
  "annotations": [
    {
      "flowId": "flow-1019",
      "nodeId": "fcb1b3dc-f4bf-461d-9db3-a217f674708d",
      "tags": [
        ""
      ]
    },
    {
      "flowId": "flow-1019",
      "nodeId": "ec74805f-5d7d-4f71-86ab-2fa04a6113fb",
      "tags": []
    },
    {
      "flowId": "flow-1019",
      "nodeId": "c6039f70-e433-4ea6-ac49-0599270a0c5b",
      "tags": [
        ""
      ]
    },
    {
      "flowId": "flow-1019",
      "nodeId": "60e88276-4ab7-4aff-9db7-149813fa77ab",
      "tags": [
        ""
      ]
    },
    {
      "flowId": "flow-1019",
      "nodeId": "5786e455-8c0d-4faa-8d7b-1f2f35799ca8",
      "tags": [
        ""
      ]
    }
  ],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [
    {
      "label": "VirusTotal_POC",
      "descriptor": {
        "id": "logichub.virustotal",
        "name": "Virus Total",
        "description": "Analyze suspicious files and URLs to detect types of malware including viruses, worms, and trojans.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/virius-total-logo.svg",
        "categories": [
          "investigative",
          "threat_intelligence"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:m51.14"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "VirusTotal authentication",
              "description": "Provide a name for the connection and an API key for authentication with VirusTotal",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "vt_apikey",
                  "description": "API key for VirusTotal",
                  "label": "API Key",
                  "dataType": "string",
                  "inputType": "password",
                  "columnTemplating": false
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python3 -m src.virustotal.instance_validation"
          }
        },
        "actions": [
          {
            "id": "analyze_domain",
            "name": "Analyze Domain",
            "description": "Retrieves a domain report",
            "instantiation": {
              "steps": [
                {
                  "name": "Analyze Domain",
                  "description": "Retrieves a domain report",
                  "inputs": [
                    {
                      "id": "vt_column_name",
                      "description": "Name of the column in the parent table containing domain to submit to VirusTotal",
                      "label": "Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_time_between_consecutive_requests_millis",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.virustotal.action-domain_file_hash_ip-validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.virustotal.action-analyze_domain-exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": []
          },
          {
            "id": "analyze_file_hash",
            "name": "Analyze File Hash",
            "description": "Retrieves a file hash report",
            "instantiation": {
              "steps": [
                {
                  "name": "Analyze File Hash",
                  "description": "Retrieves a file hash report",
                  "inputs": [
                    {
                      "id": "vt_column_name",
                      "description": "Name of the column in the parent table containing file hash to submit to VirusTotal",
                      "label": "Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_time_between_consecutive_requests_millis",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.virustotal.action-domain_file_hash_ip-validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.virustotal.action-analyze_file_hash-exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": []
          },
          {
            "id": "analyze_ip_address",
            "name": "Analyze IP Address",
            "description": "Retrieves an IP address report",
            "instantiation": {
              "steps": [
                {
                  "name": "Analyze IP Address",
                  "description": "Retrieves an IP address report",
                  "inputs": [
                    {
                      "id": "vt_column_name",
                      "description": "Name of the column in the parent table containing IP address to submit to VirusTotal",
                      "label": "Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_time_between_consecutive_requests_millis",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.virustotal.action-domain_file_hash_ip-validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.virustotal.action-analyze_ip_address-exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": []
          },
          {
            "id": "analyze_url",
            "name": "Analyze URL",
            "description": "Analyze URL by VirusTotal",
            "instantiation": {
              "steps": [
                {
                  "name": "Analyze URL",
                  "description": "Analyze URL by VirusTotal",
                  "inputs": [
                    {
                      "id": "vt_action_type",
                      "description": "Select one of the options.",
                      "label": "Action Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "report",
                          "label": "Submit for scan and wait for report"
                        },
                        {
                          "value": "scan",
                          "label": "Submit for scan"
                        },
                        {
                          "value": "retrieve",
                          "label": "Retrieve report for already submitted scan"
                        }
                      ],
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_column_name",
                      "description": "Name of the column in the parent table containing either URL to submit for scan or Scan ID to retrieve report",
                      "label": "Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_time_between_consecutive_requests_millis",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.virustotal.action-analyze_url_file-validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.virustotal.action-analyze_url-exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": []
          },
          {
            "id": "analyze_file",
            "name": "Analyze File",
            "description": "Analyze File by VirusTotal",
            "instantiation": {
              "steps": [
                {
                  "name": "Analyze File",
                  "description": "Analyze File by VirusTotal",
                  "inputs": [
                    {
                      "id": "vt_action_type",
                      "description": "Select one of the options",
                      "label": "Action Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "report",
                          "label": "Submit for scan and wait for report"
                        },
                        {
                          "value": "scan",
                          "label": "Submit for scan"
                        },
                        {
                          "value": "retrieve",
                          "label": "Retrieve report for already submitted scan"
                        }
                      ],
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_column_name",
                      "description": "Name of the column in the parent table containing either File ID to submit for scan or Scan ID to retrieve report",
                      "label": "Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "vt_time_between_consecutive_requests_millis",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 120 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.virustotal.action-analyze_url_file-validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.virustotal.action-analyze_file-exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": []
          }
        ],
        "version": "2.0.4",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2020-04-10T16:24:15Z",
        "failedAttempt": {
          "modified": "2022-09-02T08:57:36.338Z",
          "errorMessage": "This imported connection is using a different version of the Virus Total (logichub.virustotal) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_label": "VirusTotal_POC",
        "__lh_ssl_verify": "True"
      },
      "id": 23,
      "isDefault": false
    }
  ],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}