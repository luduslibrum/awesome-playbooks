{
  "flows": [
    {
      "name": "OOB Content - Github Keyword Monitoring",
      "nodes": [
        {
          "id": "start-node-bfd0b632-1be5-47f4-81e6-5c33151fdeb6",
          "name": "_Start_Node",
          "kind": "start",
          "isLeaf": false,
          "warnings": [],
          "description": "",
          "isExplainable": true,
          "x": 70,
          "y": 0,
          "vertices": [],
          "title": "Trigger",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "categoryKind": "Unknown",
          "iconTitle": "Unknown",
          "usedByEventTypes": []
        },
        {
          "id": "51a0971c-694f-46b4-aaf2-ce57b250fc10",
          "name": "Add_Field",
          "kind": "augmentation",
          "lql": "`SELECT \"deathbywedgie/BitBar_LogicHub\" AS repo_name, \"keys\" AS search_key, * FROM _Start_Node`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Add one or more fields.",
          "isExplainable": true,
          "x": 0,
          "y": 112,
          "vertices": [],
          "title": "Add Field",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "TransformContentKind",
            "id": "add-fields"
          },
          "formType": "AddFieldsForm",
          "contentItemIdentifier": {
            "kind": "TransformContentKind",
            "id": "add-fields"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Add Fields",
          "usedByEventTypes": []
        },
        {
          "id": "c1323366-331c-4cb9-a914-1fe797c764f3",
          "name": "Configure_Extract_JSON_Fields",
          "kind": "augmentation",
          "lql": "`select get_json_object(\\`result\\`, '$.response.total_count') as total_count, get_json_object(\\`result\\`, '$.response.items') as items, \\`repo_name\\` as repo_name, \\`search_key\\` as search_key from Web_API`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Extract fields from a JSON column in the table",
          "isExplainable": true,
          "x": 84,
          "y": 434,
          "vertices": [],
          "title": "Configure: Extract JSON Fields",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "OtherContentKind",
            "id": "extract-json-fields"
          },
          "formType": "SelectNodeForm",
          "contentItemIdentifier": {
            "kind": "OtherContentKind",
            "id": "extract-json-fields"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Extract JSON Fields",
          "usedByEventTypes": []
        },
        {
          "id": "c375e26c-a8e4-4922-8f0b-f06b7d2b83c4",
          "name": "Explode",
          "kind": "step",
          "inputs": [
            "c1323366-331c-4cb9-a914-1fe797c764f3"
          ],
          "isLeaf": false,
          "warnings": [],
          "description": "Convert a column containing JSON formatted lists to an array, and explode the unique values",
          "isExplainable": true,
          "x": 84,
          "y": 588,
          "vertices": [],
          "title": "Explode",
          "moduleId": "logichub.parse.explode_json_list",
          "moduleVersion": {
            "majorVersion": 1,
            "minorVersion": 0,
            "patchVersion": 0,
            "contentResourceVersionBranch": "Local"
          },
          "moduleParameters": {
            "parent0": "Configure_Extract_JSON_Fields",
            "json_list_column": "items",
            "fields_to_group_by": "items",
            "new_column_name": "single_item"
          },
          "stepParams": {
            "kind": "module",
            "title": "Convert JSON list to array and explode"
          },
          "isEditable": true,
          "isStepImplementable": false,
          "executionDependsOn": [],
          "contentMetadata": {
            "id": "logichub.parse.explode_json_list",
            "name": "Convert JSON list to array and explode",
            "latestAvailableVersion": {
              "majorVersion": 1,
              "minorVersion": 0,
              "patchVersion": 0,
              "contentResourceVersionBranch": "Local"
            }
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "ModuleContentKind",
            "id": "logichub.parse.explode_json_list"
          },
          "categoryKind": "Module",
          "iconTitle": "Module: Convert JSON list to array and explode",
          "usedByEventTypes": []
        },
        {
          "id": "f4c3e866-cf6e-4638-a778-96738edcb8ec",
          "name": "Configure_Extract_JSON_Fields_1",
          "kind": "augmentation",
          "lql": "`select get_json_object(\\`single_item\\`, '$.name') as File_Name, get_json_object(\\`single_item\\`, '$.path') as File_Path, get_json_object(\\`single_item\\`, '$.sha') as File_SHA_Hash, get_json_object(\\`single_item\\`, '$.url') as URL, get_json_object(\\`single_item\\`, '$.repository.private') as Repository_Private_Status from Explode`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Extract fields from a JSON column in the table",
          "isExplainable": true,
          "x": 84,
          "y": 756,
          "vertices": [],
          "title": "Configure: Extract JSON Fields",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "OtherContentKind",
            "id": "extract-json-fields"
          },
          "formType": "SelectNodeForm",
          "contentItemIdentifier": {
            "kind": "OtherContentKind",
            "id": "extract-json-fields"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Extract JSON Fields",
          "usedByEventTypes": []
        },
        {
          "id": "7ffa3c9f-ba25-494d-8fd1-fbe5dc15781a",
          "name": "operator_autoJoin",
          "kind": "augmentation",
          "lql": "autoJoin(Configure_Extract_JSON_Fields_1, Add_Field)",
          "operator": "autoJoin",
          "isLeaf": false,
          "warnings": [],
          "description": "Perform a best effort join.",
          "isExplainable": true,
          "x": 0,
          "y": 910,
          "vertices": [],
          "title": "Join",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "OperatorContentKind",
            "id": "autoJoin"
          },
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "autoJoin"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Auto Join",
          "usedByEventTypes": []
        },
        {
          "id": "e294c8e0-e400-497f-bd05-2baf49afba86",
          "name": "operator_dropColumns",
          "kind": "augmentation",
          "lql": "dropColumns(operator_autoJoin, \"start_node\")",
          "operator": "dropColumns",
          "isLeaf": false,
          "warnings": [],
          "description": "This operator drops specified columns from the table.",
          "isExplainable": true,
          "x": 0,
          "y": 1064,
          "vertices": [],
          "title": "Drop Columns Operator Form",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "OperatorContentKind",
            "id": "dropColumns"
          },
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "dropColumns"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Drop Columns",
          "usedByEventTypes": []
        },
        {
          "id": "32f4a497-51ec-40b5-9879-674d47430b93",
          "name": "operator_tableToHtmlString",
          "kind": "augmentation",
          "lql": "tableToHtmlString(operator_dropColumns, \"100\")",
          "operator": "tableToHtmlString",
          "isLeaf": false,
          "warnings": [],
          "description": "This operator converts LQL table to HTML table",
          "isExplainable": true,
          "x": 0,
          "y": 1246,
          "vertices": [],
          "title": "HTML",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "OperatorContentKind",
            "id": "tableToHtmlString"
          },
          "formType": "OperatorForm",
          "contentItemIdentifier": {
            "kind": "OperatorContentKind",
            "id": "tableToHtmlString"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Table To Html String",
          "usedByEventTypes": []
        },
        {
          "id": "163403c2-60ff-4d16-895c-8bfd47cd8f9f",
          "name": "Add_Field_1",
          "kind": "augmentation",
          "lql": "`SELECT \"chris.botelho@logichub.com\" AS email_recipient, \"GitHub Keyword Search Results\" AS email_subject, * FROM operator_tableToHtmlString`",
          "operator": "SELECT",
          "isLeaf": false,
          "warnings": [],
          "description": "Add one or more fields.",
          "isExplainable": true,
          "x": 0,
          "y": 1400,
          "vertices": [],
          "title": "Add Field",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "outputtedNode": false,
          "automationId": {
            "kind": "TransformContentKind",
            "id": "add-fields"
          },
          "formType": "AddFieldsForm",
          "contentItemIdentifier": {
            "kind": "TransformContentKind",
            "id": "add-fields"
          },
          "categoryKind": "Transform",
          "iconTitle": "Transform: Add Fields",
          "usedByEventTypes": []
        },
        {
          "id": "1a38f007-27d3-48af-9caa-1f8eb22c8e11",
          "name": "Web_API",
          "kind": "task",
          "lql": "runAction(Add_Field, \"logichub.web_api\", 31, \"execute-web-api\", {\"__lh_action_timeout_sec\": \"\", \"web_api_response_format\": \"json\", \"web_api_explode_results\": \"True\", \"__lh_rows_to_process\": \"\", \"web_api_username\": \"cblogichub\", \"web_api_time_between_consecutive_requests_milliseconds\": \"\", \"web_api_params\": \"\", \"web_api_client_certificate_password\": \"\", \"web_api_url\": \"https://api.github.com/search/code?q=repo:{{repo_name}}+{{search_key}}\", \"web_api_request_type\": \"get\", \"web_api_headers\": \"{\\n\\\"Accept\\\": \\\"application/vnd.github.v3+json\\\"\\n}\", \"web_api_body\": \"\", \"web_api_client_certificate\": \"\", \"web_api_password\": \"*********\", \"__lh_multithread_count\": \"\"})",
          "operator": "runAction",
          "isLeaf": false,
          "warnings": [],
          "description": "Web API integration allows you to execute any Web API and retrieve results.",
          "isExplainable": true,
          "maxRowsToProcess": 500,
          "delayBetweenRowsMillis": 0,
          "x": 84,
          "y": 266,
          "vertices": [],
          "actionInstance": {
            "actionId": "execute-web-api",
            "integrationId": "logichub.web_api",
            "integrationInstanceId": 31,
            "data": {
              "web_api_body": "",
              "web_api_url": "https://api.github.com/search/code?q=repo:{{repo_name}}+{{search_key}}",
              "web_api_password": "*********",
              "web_api_explode_results": "True",
              "__lh_multithread_count": "",
              "web_api_client_certificate": "",
              "web_api_params": "",
              "web_api_time_between_consecutive_requests_milliseconds": "",
              "web_api_request_type": "get",
              "web_api_username": "cblogichub",
              "web_api_headers": "{\n\"Accept\": \"application/vnd.github.v3+json\"\n}",
              "__lh_rows_to_process": "",
              "web_api_response_format": "json",
              "__lh_action_timeout_sec": "",
              "web_api_client_certificate_password": ""
            }
          },
          "title": "Web API",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "contentMetadata": {
            "integrationId": "logichub.web_api",
            "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
            "name": "Web API",
            "actionId": "execute-web-api",
            "actionName": "Execute Web API"
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "IntegrationContentKind",
            "id": "logichub.web_api/execute-web-api"
          },
          "categoryKind": "Integration",
          "iconTitle": "Integration: Web API - Execute Web API",
          "usedByEventTypes": []
        },
        {
          "id": "24a1aaa3-2ece-4707-a8eb-b741053a9bbd",
          "name": "Send_Email",
          "kind": "task",
          "lql": "runAction(Add_Field_1, \"logichub.smtp\", 30, \"send_email\", {\"__lh_action_timeout_sec\": \"\", \"smtp_cc_email_column_name\": \"\", \"__lh_rows_to_process\": \"\", \"smtp_email_body_type\": \"htmlbody\", \"smtp_body_column_name\": \"$.htmlTable\", \"smtp_attachments_column_name\": \"\", \"smtp_bcc_email_column_name\": \"\", \"smtp_email_to_column_name\": \"$.email_recipient\", \"time_between_consecutive_requests_milliseconds\": \"\", \"smtp_subject_column_name\": \"$.email_subject\", \"smtp_attachment_extension\": \"\", \"smtp_email_from_column_name\": \"\", \"__lh_multithread_count\": \"\"})",
          "operator": "runAction",
          "isLeaf": true,
          "warnings": [],
          "description": "Simple Mail Transfer Protocol (SMTP) is a standard communication protocol for sending email messages on business networks and the Internet.",
          "isExplainable": true,
          "maxRowsToProcess": 500,
          "delayBetweenRowsMillis": 0,
          "x": 0,
          "y": 1554,
          "vertices": [],
          "actionInstance": {
            "actionId": "send_email",
            "integrationId": "logichub.smtp",
            "integrationInstanceId": 30,
            "data": {
              "__lh_multithread_count": "",
              "smtp_cc_email_column_name": "",
              "smtp_bcc_email_column_name": "",
              "smtp_body_column_name": "$.htmlTable",
              "time_between_consecutive_requests_milliseconds": "",
              "__lh_rows_to_process": "",
              "smtp_email_from_column_name": "",
              "smtp_attachment_extension": "",
              "__lh_action_timeout_sec": "",
              "smtp_attachments_column_name": "",
              "smtp_email_body_type": "htmlbody",
              "smtp_subject_column_name": "$.email_subject",
              "smtp_email_to_column_name": "$.email_recipient"
            }
          },
          "title": "Send Email",
          "isEditable": false,
          "isStepImplementable": true,
          "executionDependsOn": [],
          "contentMetadata": {
            "integrationId": "logichub.smtp",
            "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/smtp1-logo.png",
            "name": "SMTP",
            "actionId": "send_email",
            "actionName": "Send Email"
          },
          "outputtedNode": false,
          "contentItemIdentifier": {
            "kind": "IntegrationContentKind",
            "id": "logichub.smtp/send_email"
          },
          "categoryKind": "Integration",
          "iconTitle": "Integration: SMTP - Send Email",
          "usedByEventTypes": []
        }
      ],
      "oldId": "flow-1067",
      "listNames": [],
      "dependentCommands": [],
      "resourceFormatVersion": 2,
      "fileDataSeq": []
    }
  ],
  "baselines": [],
  "eventTypes": [],
  "connections": [],
  "modules": [
    {
      "id": "logichub.parse.explode_json_list",
      "name": "Convert JSON list to array and explode",
      "description": "Convert a column containing JSON formatted lists to an array, and explode the unique values",
      "templateNodes": [
        {
          "name": "clone_parent",
          "templateLQL": "`SELECT *, TRIM(%%%json_list_column%%%) AS lhub_temp_json_list FROM %%%parent0%%%`",
          "isOutput": false
        },
        {
          "name": "only_temp_fields",
          "templateLQL": "`SELECT %%%fields_to_group_by%%%, lhub_temp_json_list FROM clone_parent WHERE lhub_temp_json_list IS NOT NULL AND lhub_temp_json_list NOT IN ('', '[]')`",
          "isOutput": false
        },
        {
          "name": "list_to_array",
          "templateLQL": "jsonListToArray(only_temp_fields, \"lhub_temp_json_list\")",
          "isOutput": false
        },
        {
          "name": "explode_array",
          "templateLQL": "`SELECT *, EXPLODE(array_lhub_temp_json_list) AS %%%new_column_name%%% FROM list_to_array`",
          "isOutput": false
        },
        {
          "name": "remove_duplicates",
          "templateLQL": "`SELECT %%%fields_to_group_by%%%, %%%new_column_name%%% FROM explode_array GROUP BY %%%fields_to_group_by%%%, %%%new_column_name%%%`",
          "isOutput": true
        }
      ],
      "steps": [
        {
          "name": "Module Parameters",
          "description": "",
          "inputs": [
            {
              "id": "parent0",
              "description": "Select the parent node",
              "label": "Parent Node",
              "dataType": "node",
              "inputType": "text",
              "dependsOn": "",
              "columnTemplating": false
            },
            {
              "id": "json_list_column",
              "description": "Select the column which contains a JSON formatted list",
              "label": "JSON List Column",
              "dataType": "column",
              "inputType": "text",
              "dependsOn": "parent0",
              "columnTemplating": false
            },
            {
              "id": "fields_to_group_by",
              "description": "One or more fields to group the exploded results by (separated by commas)",
              "label": "Fields to Group By",
              "dataType": "string",
              "inputType": "text",
              "dependsOn": "",
              "columnTemplating": false
            },
            {
              "id": "new_column_name",
              "description": "Enter a name for the new column containing exploded values from the JSON list column",
              "label": "New Column Name",
              "dataType": "string",
              "inputType": "text",
              "dependsOn": "",
              "columnTemplating": false
            }
          ],
          "isVariadic": false
        }
      ],
      "isPublished": true,
      "author": "Chad Roberts",
      "categories": [
        "parse",
        " format"
      ],
      "isEditable": true,
      "integrations": [],
      "innerModules": [],
      "tags": [],
      "moduleVersion": {
        "majorVersion": 1,
        "minorVersion": 0,
        "patchVersion": 0,
        "contentResourceVersionBranch": "Local"
      },
      "isDataSource": "No",
      "resourceFormatVersion": 3,
      "weight": 0
    }
  ],
  "annotations": [],
  "filters": [],
  "ruleSets": [],
  "integrationInstances": [
    {
      "label": "MDR Communications",
      "descriptor": {
        "id": "logichub.smtp",
        "name": "SMTP",
        "description": "Simple Mail Transfer Protocol (SMTP) is a standard communication protocol for sending email messages on business networks and the Internet.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/smtp1-logo.png",
        "documentationSlug": "smtp",
        "categories": [
          "messaging"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:latest-47c8bb908f703accc035eaf5586f8fbfa665ba5f"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "SMTP Server and Account Authentication",
              "description": "Enter authentication information for your SMTP connection",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "smtp_server_name",
                  "description": "Server name for your SMTP connection",
                  "label": "SMTP Server Name",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "smtp_server_port",
                  "description": "Server port for your SMTP connection",
                  "label": "SMTP Server Port",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "smtp_authentication_type",
                  "description": "Authentication type for your SMTP connection",
                  "label": "Authentication type",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "basic",
                      "label": "Basic"
                    },
                    {
                      "value": "ntlm",
                      "label": "NTLM"
                    },
                    {
                      "value": "none",
                      "label": "None"
                    }
                  ],
                  "columnTemplating": false
                },
                {
                  "id": "smtp_use_encryption",
                  "description": "Whether or not to use encryption",
                  "label": "Use encryption",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "Yes",
                      "label": "Yes"
                    },
                    {
                      "value": "No",
                      "label": "No"
                    }
                  ],
                  "columnTemplating": false
                },
                {
                  "id": "smtp_email_address",
                  "description": "Email Address to send from",
                  "label": "Email Address",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false,
                  "isCredential": true
                },
                {
                  "id": "smtp_username",
                  "description": "Username if different from Email Address",
                  "label": "Username",
                  "dataType": "string",
                  "inputType": "text",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "smtp_password",
                  "description": "Password to log in with. Leave empty if using None Authentication type.",
                  "label": "Password",
                  "dataType": "string",
                  "inputType": "password",
                  "optional": true,
                  "columnTemplating": false,
                  "isCredential": true
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python -m src.smtp.instantiate"
          }
        },
        "actions": [
          {
            "id": "send_email",
            "name": "Send Email",
            "description": "Sends an e-mail to a recipient using SMTP",
            "instantiation": {
              "steps": [
                {
                  "name": "Create and Send Email",
                  "description": "Create and send an email using column names from the parent table",
                  "inputs": [
                    {
                      "id": "smtp_subject_column_name",
                      "description": "A column containing the subject title for e-mails",
                      "label": "Subject Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_body_column_name",
                      "description": "A column containing the body for outbound e-mails",
                      "label": "Body Column name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_to_column_name",
                      "description": "A column containing the e-mail addresses to send an e-mail to",
                      "label": "Column containing the e-mail address for recipients",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_from_column_name",
                      "description": "A column containing the e-mail addresses as sender to send an e-mail to",
                      "label": "Column containing the from e-mail address",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_body_type",
                      "description": "Select type of email body (Default is Plain Text)",
                      "label": "Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "plaintext",
                          "label": "Plain Text"
                        },
                        {
                          "value": "htmlbody",
                          "label": "HTML"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_cc_email_column_name",
                      "description": "Column containing e-mail addresses to attach as cc on an outbound e-mail",
                      "label": "CC on outbound e-mail Column Name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_bcc_email_column_name",
                      "description": "Column containing e-mail addresses to attach as bcc on an outbound e-mail",
                      "label": "BCC on outbound e-mail Column Name",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_attachments_column_name",
                      "description": "Column containing one or more file IDs to attachment. (Can be a comma separated string of lhub_file_id values or a json dict in the format of {\"<lhub_id>\":\"<file_name>\"})",
                      "label": "File Attachment",
                      "dataType": "column",
                      "inputType": "columnSelect",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_attachment_extension",
                      "description": "If no file name is provided, add this extension to attached files.",
                      "label": "Attachment File Extension",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.smtp.action_send-email_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.smtp.action_send-email_exec"
            },
            "isDataSource": "No",
            "isMultiThreaded": "Yes",
            "tags": [
              "email"
            ]
          },
          {
            "id": "send_email_empty_table",
            "name": "Send static email, If table is empty",
            "description": "Sends an e-mail to a recipient with static input if table is empty",
            "instantiation": {
              "steps": [
                {
                  "name": "",
                  "description": "",
                  "inputs": [
                    {
                      "id": "smtp_subject",
                      "description": "Subject title for e-mails",
                      "label": "Subject",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_body",
                      "description": "Body for outbound e-mails",
                      "label": "Body",
                      "dataType": "string",
                      "inputType": "textarea",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_to",
                      "description": "E-mail addresses to send an e-mail to",
                      "label": "E-mail address for recipients",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_from",
                      "description": "E-mail addresses as sender to send an e-mail to",
                      "label": "From E-mail address",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_email_body_type",
                      "description": "Select type of email body (Default is Plain Text)",
                      "label": "Type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "plaintext",
                          "label": "Plain Text"
                        },
                        {
                          "value": "htmlbody",
                          "label": "HTML"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_cc_email",
                      "description": "E-mail addresses to attach as cc on an outbound e-mail",
                      "label": "CC on outbound e-mail",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "smtp_bcc_email",
                      "description": "E-mail addresses to attach as bcc on an outbound e-mail",
                      "label": "BCC on outbound e-mail",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python -m src.smtp.action_send-email-empty-table_validate"
              }
            },
            "execution": {
              "cmd": "python -m src.smtp.action_send-email-empty-table_exec"
            },
            "isDataSource": "Yes",
            "isMultiThreaded": "Yes",
            "tags": [
              "send_emails"
            ]
          }
        ],
        "version": "2.1.11",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2021-07-06T02:18:32.762Z",
        "failedAttempt": {
          "modified": "2022-09-02T09:06:33.394Z",
          "errorMessage": "This imported connection is using a different version of the SMTP (logichub.smtp) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_is_default_connection": "false",
        "__lh_table_key_value": "",
        "smtp_authentication_type": "basic",
        "__lh_ssl_verify": "True",
        "smtp_email_address": "mdr-communications@logichub.com",
        "smtp_server_port": "587",
        "smtp_username": "mdr-communications@logichub.com",
        "smtp_password": "****restricted****",
        "smtp_use_encryption": "Yes",
        "smtp_server_name": "smtp.gmail.com",
        "__lh_label": "MDR Communications",
        "__lh_use_agent": ""
      },
      "id": 30,
      "isDefault": false
    },
    {
      "label": "GitHub API",
      "descriptor": {
        "id": "logichub.web_api",
        "name": "Web API",
        "description": "Web API integration allows you to execute any Web API and retrieve results.",
        "logoUrl": "https://s3.amazonaws.com/lhub-public/integrations/default-integration-logo.svg",
        "documentationSlug": "web-api",
        "categories": [
          "utilities"
        ],
        "runtimeEnvironment": {
          "runtimeType": "docker",
          "descriptor": {
            "image": "logichub/integrations-builtin:latest-71507f756f738b1be5867ae873fa1dfea820f787"
          },
          "id": "default",
          "version": "v0"
        },
        "instantiation": {
          "steps": [
            {
              "name": "web_api Authentication Information",
              "description": "Enter authentication information for the web_api integration",
              "inputs": [
                {
                  "id": "__lh_label",
                  "description": "Label for this integration instance.",
                  "label": "Label",
                  "dataType": "string",
                  "inputType": "text",
                  "columnTemplating": false
                },
                {
                  "id": "__lh_table_key_value",
                  "description": "Define variables here to templatize integration connections and actions. For example, you can use https://www.{{hostname}}.com, where hostname is a variable defined in this input.",
                  "label": "Reference Values",
                  "dataType": "json",
                  "inputType": "table",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "__lh_ssl_verify",
                  "description": "Select option to verify connecting server's SSL certificate (Default is Verify SSL Certificate)",
                  "label": "Verify SSL",
                  "dataType": "string",
                  "inputType": "select",
                  "options": [
                    {
                      "value": "True",
                      "label": "Verify SSL Certificate"
                    },
                    {
                      "value": "False",
                      "label": "Skip Verifying SSL Certificate"
                    }
                  ],
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "client_certificate",
                  "description": "Upload a .p12 Client Certificate file (p12 file at action input takes precedence over connection)",
                  "label": "Client Certificate",
                  "dataType": "string",
                  "inputType": "encryptedFile",
                  "optional": true,
                  "columnTemplating": false
                },
                {
                  "id": "client_certificate_password",
                  "description": "Enter password to read the client certificate",
                  "label": "Client Certificate Password",
                  "dataType": "string",
                  "inputType": "password",
                  "optional": true,
                  "columnTemplating": false
                }
              ],
              "isVariadic": false
            }
          ],
          "validation": {
            "cmd": "python3 -m src.web_api.instance_validation"
          }
        },
        "actions": [
          {
            "id": "execute-web-api",
            "name": "Execute Web API",
            "description": "Execute given Web API and return the response",
            "instantiation": {
              "steps": [
                {
                  "name": "Step Name",
                  "description": "Step Description",
                  "inputs": [
                    {
                      "id": "web_api_request_type",
                      "description": "Request type to get the method name",
                      "label": "Request type",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "get",
                          "label": "GET"
                        },
                        {
                          "value": "post",
                          "label": "POST"
                        },
                        {
                          "value": "put",
                          "label": "PUT"
                        },
                        {
                          "value": "delete",
                          "label": "DELETE"
                        },
                        {
                          "value": "patch",
                          "label": "PATCH"
                        }
                      ],
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_url",
                      "description": "Url Endpoint",
                      "label": "URL",
                      "dataType": "string",
                      "inputType": "text",
                      "columnTemplating": true
                    },
                    {
                      "id": "web_api_headers",
                      "description": "Web api request headers",
                      "label": "Headers",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "web_api_params",
                      "description": "Web api request parameters",
                      "label": "Params",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "web_api_body",
                      "description": "Web api request body",
                      "label": "Body",
                      "dataType": "string",
                      "inputType": "textarea",
                      "optional": true,
                      "columnTemplating": true
                    },
                    {
                      "id": "web_api_username",
                      "description": "Username for request",
                      "label": "Username",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_password",
                      "description": "Password for request",
                      "label": "Password",
                      "dataType": "string",
                      "inputType": "password",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_client_certificate",
                      "description": "Upload a .p12 Client Certificate file (p12 file at action input takes precedence over connection)",
                      "label": "Client Certificate",
                      "dataType": "string",
                      "inputType": "encryptedFile",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_client_certificate_password",
                      "description": "Enter password to read the client certificate",
                      "label": "Client Certificate Password",
                      "dataType": "string",
                      "inputType": "password",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_response_format",
                      "description": "Select how to parse the response based on its expected format. (Default is \"Raw\" and will pass the full body to the response field). `File` will write the response to a file and return the file-id.",
                      "label": "Expected Response Format",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "raw",
                          "label": "Raw"
                        },
                        {
                          "value": "csv",
                          "label": "CSV"
                        },
                        {
                          "value": "html_tables",
                          "label": "HTML Tables"
                        },
                        {
                          "value": "json",
                          "label": "JSON"
                        },
                        {
                          "value": "file",
                          "label": "File"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_explode_results",
                      "description": "If server response is parsed as a list of values instead of a single value, return as individual rows for each value (Default is False)",
                      "label": "Explode Results",
                      "dataType": "string",
                      "inputType": "select",
                      "options": [
                        {
                          "value": "False",
                          "label": "False"
                        },
                        {
                          "value": "True",
                          "label": "True"
                        }
                      ],
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "web_api_time_between_consecutive_requests_milliseconds",
                      "description": "Time to wait between consecutive API requests in milliseconds (Default is 0 millisecond)",
                      "label": "Time between consecutive API requests (in millis)",
                      "dataType": "string",
                      "inputType": "number",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_action_timeout_sec",
                      "description": "Timeout in seconds (Default is 360 seconds)",
                      "label": "Action Timeout",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_rows_to_process",
                      "description": "Number of rows to read from parent table",
                      "label": "Rows to Process",
                      "dataType": "number",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    },
                    {
                      "id": "__lh_multithread_count",
                      "description": "Count of threads to use for processing rows of input table (Default is 1 thread)",
                      "label": "Count of threads",
                      "dataType": "string",
                      "inputType": "text",
                      "optional": true,
                      "columnTemplating": false
                    }
                  ],
                  "isVariadic": false
                }
              ],
              "validation": {
                "cmd": "python3 -m src.web_api.action_execute-web-api_validate"
              }
            },
            "execution": {
              "cmd": "python3 -m src.web_api.action_execute-web-api_exec"
            },
            "isDataSource": "Optional",
            "isMultiThreaded": "Yes",
            "tags": []
          }
        ],
        "version": "3.1.0",
        "compatible_versions": [],
        "tags": []
      },
      "updateInfo": {
        "currentModified": "2021-08-26T19:28:26.480Z",
        "failedAttempt": {
          "modified": "2022-09-02T09:06:33.447Z",
          "errorMessage": "This imported connection is using a different version of the Web API (logichub.web_api) integration than what is currently available on this deployment. Please edit the connection to ensure it works correctly."
        }
      },
      "data": {
        "__lh_table_key_value": "",
        "__lh_ssl_verify": "",
        "client_certificate": "",
        "__lh_label": "GitHub API",
        "client_certificate_password": "",
        "__lh_use_agent": ""
      },
      "id": 31,
      "isDefault": false
    }
  ],
  "customLists": [],
  "streams": [],
  "dashboards": [],
  "images": [],
  "codeBlobs": {},
  "customListsData": {},
  "executionScripts": [],
  "userForms": [],
  "flowNodeReferences": [],
  "destinations": [],
  "fileResources": [],
  "fileDataSeq": [],
  "eventModels": [],
  "version": 1
}