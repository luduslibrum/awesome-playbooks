{
  "schema_version": 4,
  "name": "Analyze files with VMRay",
  "description": "Submit files for analysis to the VMRay Sandbox. After completing the analysis, screenshots will be downloaded to facilitate quick decision-making. With Microsoft Office files, any identified macros will be extracted and made available for analysis.\n\ntags: VMRay, Sandbox, Macro, Malware, File, Intermediate, Microsoft, Slack, MicrosoftTeams, Analyze\nicons: ðŸ—³, vmray, ðŸ“¸\nvisibility: public\n\n\n",
  "guid": "e0575d89919e979f97aad498f390937a",
  "slug": "analyze_files_with_vmray",
  "exported_at": "2022-07-11T17:26:47Z",
  "agents": [
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get Deep Analysis",
      "disabled": false,
      "guid": "89c8610df1a4a206b3fa97273dd2b983",
      "options": {
        "url": "https://cloud.vmray.com/rest/analysis/<<get_analyzer_report.body.data.first.analysis_id>>/archive/logs%2fsummary.json",
        "content_type": "form",
        "method": "get",
        "payload": {},
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        },
        "retry_on_status": [
          "500"
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Malicious",
      "disabled": false,
      "guid": "9cb84eb1c79c101158653537a66f3ddc",
      "options": {
        "rules": [
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "\\bsuspicious"
          },
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "blacklisted"
          },
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "\\bmalicious"
          }
        ],
        "must_match": "1"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Attachment KnownGood",
      "disabled": false,
      "guid": "413fb5b686e3e59f6229cfe32ab76e31",
      "options": {
        "rules": [
          {
            "type": "regex",
            "value": "true",
            "path": "<<check_if_knowngood.rule_matched>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get Analyzer Report",
      "disabled": false,
      "guid": "4c4ecbaf695656e46ba1796310fecac4",
      "options": {
        "url": "https://cloud.vmray.com/rest/analysis/<%if hash_not_found.rule_matched%>submission/<<explode_submissions.submissions.submission_id>><%else%>sample/<<search_for_hash_in_vmray.body.data.first.sample_id>><%endif%>",
        "content_type": "form",
        "method": "get",
        "payload": {},
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        },
        "retry_on_status": [
          "500"
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Build Malicious Results",
      "disabled": false,
      "guid": "a044a4c5db3773d771a95b939200f619",
      "options": {
        "mode": "message_only",
        "payload": {
          "new": "<%if hash_not_found.rule_matched%>true<%else%>false<%endif%>",
          "engine": "VMRay",
          "analysis_date": "<<get_analyzer_report.body.data.first.analysis_created>>",
          "file_name": "<<receive_file.body.file.name>>",
          "analysis_link": "<<DEFAULT(get_analyzer_report.body.data.first.analysis_webif_url, \"Not Available\")>>",
          "md5_hash": "<<get_hash.md5>>",
          "report": "=get_analyzer_report.body",
          "error_msg": "<%if submit_file.body.data.errors[0].error_msg%><<submit_file.body.data.errors[0].error_msg>><%else%>no_error<%endif%>",
          "malicious": "true",
          "submission_severity": "<<DEFAULT(check_status.body.data.submission_severity, \"Not Available\")>>",
          "macros": {
            "macro_list": "=IF(LIQUID_SIZE(extract_macros.macro_body, \"dot_notation\") > 0, extract_macros.macro_body, \"No macros found\")",
            "macros_found": "<%if extract_macros.macros_found = \"true\"%>true<%else%>false<%endif%>"
          },
          "screenshots": {
            "screenshots_found": "<%if get_screenshots.screenshots_found%>true<%else%>false<%endif%>",
            "screenshot_list": "=IF(LIQUID_SIZE(get_screenshots.screenshots, \"dot_notation\") > 0, get_screenshots.screenshots, \"No screenshots found\")"
          }
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Scan Complete",
      "disabled": false,
      "guid": "f4478583d0077405a8faebea56b45b88",
      "options": {
        "rules": [
          {
            "type": "regex",
            "value": "true",
            "path": "<<check_status.body.data.submission_finished>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Attachment Not KnownGood",
      "disabled": false,
      "guid": "b0b6061e5c79a6259b0c3714a5cca3d3",
      "options": {
        "rules": [
          {
            "type": "regex",
            "value": "false",
            "path": "<<check_if_knowngood.rule_matched>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Delay",
      "disabled": false,
      "guid": "733846b6e506ad6b4b7d399e82427546",
      "options": {
        "mode": "delay",
        "seconds": "60"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Search for hash in VMRay",
      "disabled": false,
      "guid": "11be9c6fd748a4c57cdb751cc90efccd",
      "options": {
        "url": "https://cloud.vmray.com/rest/sample/md5/<<get_hash.md5>>",
        "content_type": "json",
        "method": "get",
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        },
        "retry_on_status": [
          "500",
          "429"
        ],
        "log_error_on_status": [
          "500",
          "404",
          "400"
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Error",
      "disabled": false,
      "guid": "3bfbd3a7c90e5297e5ae82e6a5c907e0",
      "options": {
        "rules": [
          {
            "type": "regex",
            "value": "<<receive_file.body.file.name>>",
            "path": "<<submit_file.body.data.errors[0].submission_filename>>"
          },
          {
            "type": "field>value",
            "value": "50",
            "path": "<<set_counter.counter>>"
          }
        ],
        "must_match": "1"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Scan Running",
      "disabled": false,
      "guid": "f6cb11997886a9c69fdc90d568b79121",
      "options": {
        "rules": [
          {
            "type": "regex",
            "value": "false",
            "path": "<<check_status.body.data.submission_finished>>"
          },
          {
            "type": "field<=value",
            "value": "50",
            "path": "<<set_counter.counter>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::SendToStoryAgent",
      "name": "Clean",
      "disabled": false,
      "guid": "39e9243fdf9edbf15dab70839d9662ef",
      "options": {
        "story": "<<STORY.analyze_files_with_vmray>>",
        "payload": {
          "body": {
            "file": {
              "contents": "",
              "name": "test.pdf"
            }
          }
        },
        "send_payload_as_body": "false"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Clean",
      "disabled": false,
      "guid": "a70b7bcec7a5d480833fffd1a2521ec9",
      "options": {
        "rules": [
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "not_suspicious"
          },
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "whitelisted"
          },
          {
            "type": "regex",
            "path": "<<check_status.body.data.submission_severity>><<get_analyzer_report.body.data.first.analysis_severity>>",
            "value": "unknown"
          }
        ],
        "must_match": "1"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Explode Submissions",
      "disabled": false,
      "guid": "a69a342a398b05c2eaa6383c2e2a4f41",
      "options": {
        "mode": "explode",
        "path": "=submit_file.body.data.submissions",
        "to": "submissions"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Check Status",
      "disabled": false,
      "guid": "a2ddef2c4a98c6e8716e3bcbc3ae72e9",
      "options": {
        "url": "https://cloud.vmray.com/rest/submission/<<explode_submissions.submissions.submission_id>>",
        "content_type": "form",
        "method": "get",
        "payload": {},
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        },
        "retry_on_status": [
          "500"
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Hash Not Found",
      "disabled": false,
      "guid": "ce5cf91aa0da0247d7c8348265b4591d",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "0",
            "path": "<<LIQUID_SIZE(search_for_hash_in_vmray.body.data, \"dot_notation\")>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Delay",
      "disabled": false,
      "guid": "2ad091fab718d06dcffb1ec1e8e13a86",
      "options": {
        "mode": "delay",
        "seconds": "120"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Hash Found",
      "disabled": false,
      "guid": "66ad46c8a8a3d3c18ac008e91be4b4ec",
      "options": {
        "rules": [
          {
            "type": "field>value",
            "value": "0",
            "path": "<<LIQUID_SIZE(search_for_hash_in_vmray.body.data, \"dot_notation\")>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::WebhookAgent",
      "name": "Receive File",
      "disabled": false,
      "guid": "5b261370198eef6d7aab7daacd670e59",
      "options": {
        "secret": "baa805116ce48adc26fe463b223d1a78",
        "verbs": "get,post",
        "path": "8da5dc2b60e2543706febdb28902f54f"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get Analyzer Report",
      "disabled": false,
      "guid": "9d007417c0d8430f647c6937a6105406",
      "options": {
        "url": "https://cloud.vmray.com/rest/analysis/sample/<<search_for_hash_in_vmray.body.data.first.sample_id>>",
        "content_type": "form",
        "method": "get",
        "payload": {},
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Set Counter",
      "disabled": false,
      "guid": "75a7156477e444c0742828b03d9ee3a8",
      "options": {
        "mode": "message_only",
        "payload": {
          "counter": "<<PLUS(set_counter.counter, 1)>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Configure Jobrule",
      "disabled": false,
      "guid": "c25aab0c8b386be06754705c04db85cd",
      "options": {
        "mode": "message_only",
        "payload": {
          "Windows_Help_File": "vmray:win10_64_th2:def:chm",
          "macOS_Mach-O": "vmray:macos_10.13.1:def:macos_exe",
          "Windows_Batch_Files": "vmray:win10_64_th2:def:bat",
          "PowerShell_Scripts": "vmray:win10_64_th2:def:powershell",
          "HTML_Applications": "vmray:win10_64_th2:def:hta",
          "Microsoft_Access_Database": "vmray:win7_64_sp1-mso2013:def:ms_office",
          "Microsoft_Office_Documents": "vmray:win10_64_th2:def:ms_office",
          "Windows_PE_x86-64": "vmray:win10_64_th2:def:exe",
          "Windows_PE_x86": "vmray:win10_64_th2:def:exe",
          "Windows_Script_Files": "vmray:win10_64_th2:def:windows_script_files",
          "Windows_Driver_x86-32": "vmray:win7_32_sp1:def:exe",
          "Java_File": "vmray:win10_64_th2:def:java-1.8.0_144",
          "HTML_Document": "vmray:win10_64_th2:def:html_ie",
          "Custom": "vmray:win10_64_th2:def:by_ext",
          "Macromedia_Flash": "vmray:win10_64_th2:def:flash_ie",
          "MSI_Setup": "vmray:win10_64_th2:def:msi",
          "URL": "vmray:win10_64_th2:def:ie",
          "PDF_Document": "vmray:win10_64_th2-pdf:def:adobe-reader-64-DC-2018.009.20044"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Submit File",
      "disabled": false,
      "guid": "3166eb945d16e43092936aa7f479e7fd",
      "options": {
        "url": "https://cloud.vmray.com/rest/sample/submit?jobrule_entries={\"Windows Help File\": [\"<<configure_jobrule.Windows_Help_File>>\"],\"macOS Mach-O\": [\"<<configure_jobrule[\"macOS_Mach-O\"]>>\"],\"Windows Batch Files\": [\"<<configure_jobrule.Windows_Batch_Files>>\"],\"PowerShell Scripts\": [\"<<configure_jobrule.PowerShell_Scripts>>\"],\"HTML Applications\": [\"<<configure_jobrule.HTML_Applications>>\"],\"Microsoft Access Database\": [\"<<configure_jobrule.Microsoft_Access_Database>>\"],\"Microsoft Office Documents\": [\"<<configure_jobrule.Microsoft_Office_Documents>>\"],\"Windows PE (x86-64)\": [\"<<configure_jobrule[\"Windows_PE_x86-64\"]>>\"],\"Windows PE (x86)\": [\"<<configure_jobrule.Windows_PE_x86>>\"],\"Windows Script Files\": [\"<<configure_jobrule.Windows_Script_Files>>\"],\"Windows Driver (x86-32)\": [\"<<configure_jobrule[\"Windows_Driver_x86-32\"]>>\"],\"Java File\": [\"<<configure_jobrule.Java_File>>\"],\"HTML Document\": [\"<<configure_jobrule.HTML_Document>>\"],\"Custom\": [\"<<configure_jobrule.Custom>>\"],\"Macromedia Flash\": [\"<<configure_jobrule.Macromedia_Flash>>\"],\"MSI Setup\": [\"<<configure_jobrule.MSI_Setup>>\"],\"PDF Document\": [\"<<configure_jobrule.PDF_Document>>\"]}",
        "content_type": "data",
        "method": "post",
        "payload": {
          "file": {
            "contents": "<<BASE64_DECODE(receive_file.body.file.contents)>>",
            "filename": "<<receive_file.body.file.name>>",
            "name": "sample_file"
          }
        },
        "headers": {
          "Authorization": "api_key <<CREDENTIAL.vmray>>"
        },
        "retry_on_status": [
          "500"
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Check if KnownGood",
      "disabled": false,
      "guid": "b57cb7dd5a4002e07ce144c4bd68bf2d",
      "options": {
        "rules": [
          {
            "type": "in",
            "value": "<<get_hash.md5>>",
            "path": "=RESOURCE.knowngood_hashes"
          },
          {
            "type": "regex",
            "value": ".png",
            "path": "<<receive_attachments.file_name>>"
          }
        ],
        "emit_no_match": "true",
        "must_match": 1
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Get Hash",
      "disabled": false,
      "guid": "438408855f37a5079b871c104ffc5e6c",
      "options": {
        "mode": "message_only",
        "payload": {
          "md5": "<<BASE64_DECODE(receive_file.body.file.contents) |> MD5(%)>>",
          "sha256": "<<BASE64_DECODE(receive_file.body.file.contents) |> SHA256(%)>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Build Known Good Results",
      "disabled": false,
      "guid": "2005d4b8abdfbffbbf02cd78aaa8a676",
      "options": {
        "mode": "message_only",
        "payload": {
          "new": "knowngood",
          "engine": "VMRay",
          "analysis_date": "knowngood",
          "file_name": "<<receive_file.body.file.name>>",
          "analysis_link": "Not Available",
          "md5_hash": "<<get_hash.md5>>",
          "report": "Not Available",
          "error_msg": "Known Good File",
          "malicious": "knowngood",
          "submission_severity": "Not Available",
          "macros": {
            "macro_list": "Not Available",
            "macros_found": "false"
          },
          "screenshots": {
            "screenshots_found": "false",
            "screenshot_list": "Not Available"
          }
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Build Clean Results",
      "disabled": false,
      "guid": "bc37eb2a687983154c7da4bfe63e4bf6",
      "options": {
        "mode": "message_only",
        "payload": {
          "new": "<%if hash_not_found.rule_matched%>true<%else%>false<%endif%>",
          "engine": "VMRay",
          "analysis_date": "<<get_analyzer_report.body.data.first.analysis_created>>",
          "file_name": "<<receive_file.body.file.name>>",
          "analysis_link": "<<DEFAULT(get_analyzer_report.body.data.first.analysis_webif_url, \"Not Available\")>>",
          "md5_hash": "<<get_hash.md5>>",
          "report": "=get_analyzer_report.body",
          "error_msg": "<%if submit_file.body.data.errors[0].error_msg%><<submit_file.body.data.errors[0].error_msg>><%else%>no_error<%endif%>",
          "malicious": "false",
          "submission_severity": "<<DEFAULT(check_status.body.data.submission_severity, \"Not Available\")>>",
          "macros": {
            "macro_list": "=IF(LIQUID_SIZE(extract_macros.macro_body, \"dot_notation\") > 0, extract_macros.macro_body, \"No macros found\")",
            "macros_found": "<%if extract_macros.macros_found = \"true\"%>true<%else%>false<%endif%>"
          },
          "screenshots": {
            "screenshots_found": "<%if get_screenshots.screenshots_found%>true<%else%>false<%endif%>",
            "screenshot_list": "=IF(LIQUID_SIZE(get_screenshots.screenshots, \"dot_notation\") > 0, get_screenshots.screenshots, \"No screenshots found\")"
          }
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Build Error Results",
      "disabled": false,
      "guid": "ee2192e3aa5fa180d431544e381fc166",
      "options": {
        "mode": "message_only",
        "payload": {
          "new": "false",
          "engine": "VMRay",
          "analysis_date": "error in submission",
          "file_name": "<<receive_file.body.file.name>>",
          "analysis_link": "Not Available",
          "md5_hash": "<<get_hash.md5>>",
          "report": "=get_analyser_report.body",
          "error_msg": "<%if submit_file.body.data.errors[0].error_msg%><<submit_file.body.data.errors[0].error_msg>><%else%>An unknown error occurred<%endif%>",
          "malicious": "error",
          "submission_severity": "Not Available",
          "macros": {
            "macro_list": "No macros found",
            "macros_found": "false"
          },
          "screenshots": {
            "screenshots_found": "false",
            "screenshot_list": "No screenshots found"
          }
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null
    },
    {
      "type": "Agents::GroupAgent",
      "name": "Extract Macros",
      "disabled": false,
      "guid": "41e7ad4155a29902c9332f93987d9ca6",
      "options": {
        "payload": {
          "static_data_array": "=get_deep_analysis.body.static_data",
          "analysis_job_id": "<<get_analyzer_report.body.data.first.analysis_job_id>>",
          "macro_array": "<<get_deep_analysis.body.static_data>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null,
      "group": {
        "schema_version": 4,
        "name": "",
        "description": null,
        "guid": "c7139434a81c4e357f59aefca66dc13c",
        "slug": null,
        "exported_at": "2022-07-11T17:26:47Z",
        "agents": [
          {
            "type": "Agents::EventTransformationAgent",
            "name": "Explode Macro Array",
            "disabled": false,
            "guid": "64a4fe1777a9ae7881ddd4aaaa53fe1c",
            "options": {
              "mode": "explode",
              "path": "=explode_static_array.individual_static.office.macros",
              "to": "individual_macro"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::TriggerAgent",
            "name": "Trigger if Office Macro",
            "disabled": false,
            "guid": "8dbeec5ac040f33fde32ca0bca7f2065",
            "options": {
              "rules": [
                {
                  "type": "field>value",
                  "value": "0",
                  "path": "<<LIQUID_SIZE(explode_static_array.individual_static.office.macros, \"dot_notation\")>>"
                }
              ]
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::EventTransformationAgent",
            "name": "Implode Macro Array",
            "disabled": false,
            "guid": "b666ffceea36d1179e38cb2a680ee551",
            "options": {
              "mode": "implode",
              "guid_path": "=explode_macro_array.guid",
              "size_path": "=LIQUID_SIZE(explode_macro_array, \"dot_notation\")"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::TriggerAgent",
            "name": "Trigger if Empty Array",
            "disabled": false,
            "guid": "e3b90fa22d85ab2d2d8333003d6599d9",
            "options": {
              "rules": [
                {
                  "type": "field==value",
                  "value": "0",
                  "path": "<<LIQUID_SIZE(input.static_data_array, \"dot_notation\")>>"
                },
                {
                  "type": "regex",
                  "value": "^$",
                  "path": "<<LIQUID_SIZE(input.static_data_array, \"dot_notation\")>>"
                },
                {
                  "type": "regex",
                  "value": "^$",
                  "path": "<<JSONPATH(input.static_data_array, \"*office.macros\")>>"
                }
              ],
              "must_match": "1"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::EventTransformationAgent",
            "name": "Explode Static Array",
            "disabled": false,
            "guid": "5f873ad80c8ba9e394fd95faabee92f7",
            "options": {
              "mode": "explode",
              "path": "=input.static_data_array",
              "to": "individual_static"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Get Macro Content",
            "disabled": false,
            "guid": "a7f7431c6b058b1cec6a01a5b161db74",
            "options": {
              "url": "https://cloud.vmray.com/rest/analysis/job/<<input.analysis_job_id>>/archive/<<explode_macro_array.individual_macro.source>>",
              "content_type": "form",
              "method": "get",
              "payload": {},
              "headers": {
                "Authorization": "api_key <<CREDENTIAL.vmray>>"
              },
              "log_error_on_status": []
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::GroupInputAgent",
            "name": "Input",
            "disabled": false,
            "guid": "d349602f434cce729e79005a65faa7bf",
            "options": {
              "options": [
                {
                  "name": "Payload",
                  "type": "OBJECT",
                  "description": "The payload to send to the group"
                }
              ]
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "guid": "b1ad10a778fc11fd9d49ea980e09cd3c",
            "options": {
              "payload": {
                "macros_found": "false",
                "macro_body": ""
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "guid": "01835828bb42b30dd2a283d9da140e66",
            "options": {
              "payload": {
                "macros_found": "true",
                "macro_body": "=JSONPATH(implode_macro_array, \"*get_macro_content.body\")"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          }
        ],
        "diagram_notes": [],
        "links": [
          {
            "source": 0,
            "receiver": 5
          },
          {
            "source": 0,
            "receiver": 3
          },
          {
            "source": 1,
            "receiver": 0
          },
          {
            "source": 2,
            "receiver": 8
          },
          {
            "source": 3,
            "receiver": 7
          },
          {
            "source": 4,
            "receiver": 1
          },
          {
            "source": 5,
            "receiver": 2
          },
          {
            "source": 6,
            "receiver": 4
          }
        ],
        "diagram_layout": "{\"64a4fe1777a9ae7881ddd4aaaa53fe1c\":[-195,375],\"8dbeec5ac040f33fde32ca0bca7f2065\":[-195,300],\"b666ffceea36d1179e38cb2a680ee551\":[-195,525],\"e3b90fa22d85ab2d2d8333003d6599d9\":[-420,450],\"5f873ad80c8ba9e394fd95faabee92f7\":[-195,225],\"a7f7431c6b058b1cec6a01a5b161db74\":[-195,450],\"d349602f434cce729e79005a65faa7bf\":[-195,105],\"b1ad10a778fc11fd9d49ea980e09cd3c\":[-420,615],\"01835828bb42b30dd2a283d9da140e66\":[-195,615]}"
      }
    },
    {
      "type": "Agents::GroupAgent",
      "name": "Get Screenshots",
      "disabled": false,
      "guid": "926c4b9927a1a41977188f8146f05575",
      "options": {
        "payload": {
          "screenshots": "=get_deep_analysis.body.screenshots",
          "analysis_job_id": "<<get_analyzer_report.body.data.first.analysis_job_id>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "schedule": null,
      "group": {
        "schema_version": 4,
        "name": "",
        "description": null,
        "guid": "2744d8d4cd0441025b2d8fe881e75b2a",
        "slug": null,
        "exported_at": "2022-07-11T17:26:47Z",
        "agents": [
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Get Screenshot",
            "disabled": false,
            "guid": "e9a9f31cf0703b8b3bae75a7ad59f76f",
            "options": {
              "url": "https://cloud.vmray.com/rest/analysis/job/<<input.analysis_job_id>>/archive/<<explode_screenshot_array.individual_screenshot.screenshot_archive_path>>",
              "content_type": "form",
              "method": "get",
              "payload": {},
              "headers": {
                "Authorization": "api_key <<CREDENTIAL.vmray>>"
              },
              "log_error_on_status": []
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::TriggerAgent",
            "name": "Trigger if Empty Array",
            "disabled": false,
            "guid": "47c46b7cd0d974fb06ccaa980d597556",
            "options": {
              "rules": [
                {
                  "type": "field==value",
                  "value": "0",
                  "path": "<<LIQUID_SIZE(input.screenshots, \"dot_notation\")>>"
                },
                {
                  "type": "regex",
                  "value": "^$",
                  "path": "<<input.screenshots>>"
                }
              ],
              "must_match": "1"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::EventTransformationAgent",
            "name": "Implode Screenshot Array",
            "disabled": false,
            "guid": "2f8c4fb211fc70d72f34f8535475de2e",
            "options": {
              "mode": "implode",
              "guid_path": "=explode_screenshot_array.guid",
              "size_path": "=LIQUID_SIZE(explode_screenshot_array, \"dot_notation\")"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::EventTransformationAgent",
            "name": "Explode Screenshot Array",
            "disabled": false,
            "guid": "65394cda3e5f9e9193ab43631da7f90f",
            "options": {
              "mode": "explode",
              "path": "=input.screenshots",
              "to": "individual_screenshot"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "schedule": null
          },
          {
            "type": "Agents::GroupInputAgent",
            "name": "Input",
            "disabled": false,
            "guid": "a5644b595278c6057e5a05670b50130b",
            "options": {
              "options": [
                {
                  "name": "Payload",
                  "type": "OBJECT",
                  "description": "The payload to send to the group"
                }
              ]
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "guid": "a5f2ee362d171c03c5a3dd0ccd7c1b9b",
            "options": {
              "payload": {
                "screenshots": "=JSONPATH(implode_screenshot_array, \"*get_screenshot.body\")",
                "screenshots_found": "true"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "guid": "35ecfbcbe808caa9c500ccd7da45a523",
            "options": {
              "payload": {
                "screenshots": "",
                "screenshots_found": "false"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            }
          }
        ],
        "diagram_notes": [],
        "links": [
          {
            "source": 0,
            "receiver": 2
          },
          {
            "source": 1,
            "receiver": 6
          },
          {
            "source": 2,
            "receiver": 5
          },
          {
            "source": 3,
            "receiver": 0
          },
          {
            "source": 4,
            "receiver": 3
          },
          {
            "source": 4,
            "receiver": 1
          }
        ],
        "diagram_layout": "{\"e9a9f31cf0703b8b3bae75a7ad59f76f\":[-90,720],\"47c46b7cd0d974fb06ccaa980d597556\":[-345,615],\"2f8c4fb211fc70d72f34f8535475de2e\":[-90,810],\"65394cda3e5f9e9193ab43631da7f90f\":[-90,615],\"a5644b595278c6057e5a05670b50130b\":[-180,510],\"a5f2ee362d171c03c5a3dd0ccd7c1b9b\":[-90,900],\"35ecfbcbe808caa9c500ccd7da45a523\":[-345,900]}"
      }
    }
  ],
  "diagram_notes": [
    {
      "content": "# Story Overview\nhttps://image-uploads.tines.com/vmray_logo.png\n\n\nThis Story receives a file, and will compare the file hash against a known good list of files. If the file is not known good, VMRay will be searched for the hash and, if it is not found, the file will be uploaded for analysis.\n\nThis Story also extracts screenshots of the file, any detected macros, and other metadata about the file that may be useful for analysis.",
      "position": [
        -465.0,
        -1335.0
      ],
      "guid": "077f3492b3e834cfe999890bc5bcd6a6",
      "width": 270
    },
    {
      "content": "Test action containing a clean file demonstration purposes.\n\nThis Story requires the Base64 Encoded Contents of a file, and the file name.",
      "position": [
        615.0,
        -1110.0
      ],
      "guid": "a6cf26aae03a31e1309c1598590ddb2a",
      "width": null
    },
    {
      "content": "# Story Requirements\n\n- [ ] A VMRay API Key stored in a credential called `vmray`\n- [ ] A Resource called `known_good_hashes` containing an array of hashes that should be considered safe, and the file should not be submitted for analysis.\n- [ ] See the sample Send To Story Action for an example on how to use this Story.",
      "position": [
        -465.0,
        -825.0
      ],
      "guid": "083c69d6c6ea1d2b36f5418f23085e9a",
      "width": null
    },
    {
      "content": "Both the MD5 and SHA256 Hashes of the file will be generated for use and reference.",
      "position": [
        300.0,
        -960.0
      ],
      "guid": "1dbd27191aeaf04afc01ead0f3c85bea",
      "width": null
    },
    {
      "content": "The file hash will be compared against the known good file list.\nAdditionally, any `.png` files will be removed at this stage.",
      "position": [
        345.0,
        -825.0
      ],
      "guid": "d44137edc9ecfff8a60cf117c431409f",
      "width": null
    },
    {
      "content": "If the hash has not been seen by VMRay before, submit it for analysis. \n\nAfter being submitted successfully, the Story will wait two minutes after the initial submission before checking the status of the analysis, and then every 60 seconds after that.\n",
      "position": [
        285.0,
        -525.0
      ],
      "guid": "165c9590a484a4fde83c29fee0f5dacf",
      "width": null
    },
    {
      "content": "If, after 50 attempts, the analysis has not completed, the Story will return an error.\n\nThis number is configurable in the `Error` Trigger Action",
      "position": [
        -300.0,
        -510.0
      ],
      "guid": "70241069cf9c54592c03087fbcd63cdf",
      "width": null
    },
    {
      "content": "After the analysis has completed, or been retrieved from an earlier submission, another API call is made to get the more detailed analysis from VMRay.",
      "position": [
        450.0,
        150.0
      ],
      "guid": "d8c0c88b73e50b8bca4ed811c74a179b",
      "width": null
    },
    {
      "content": "As a final step, the Stories will attempt to extract any identified macros, and download any screenshots that VMRay was able to create.\n\nDouble click into the Groups to view the underlying Actions.",
      "position": [
        -90.0,
        210.0
      ],
      "guid": "6a2b22a2a1efcb929d306db3208ef007",
      "width": null
    },
    {
      "content": "The analysis results will then be summarised and made available to other Stories.\n\nAdditionally, this Story can be extended to send a notification via email to to Slack/Teams containing the results of the analysis.",
      "position": [
        210.0,
        525.0
      ],
      "guid": "ac3b696234863d55f29c0cccbc5e4286",
      "width": null
    }
  ],
  "links": [
    {
      "source": 0,
      "receiver": 28
    },
    {
      "source": 1,
      "receiver": 4
    },
    {
      "source": 2,
      "receiver": 25
    },
    {
      "source": 3,
      "receiver": 0
    },
    {
      "source": 5,
      "receiver": 3
    },
    {
      "source": 6,
      "receiver": 8
    },
    {
      "source": 7,
      "receiver": 14
    },
    {
      "source": 8,
      "receiver": 17
    },
    {
      "source": 8,
      "receiver": 15
    },
    {
      "source": 9,
      "receiver": 27
    },
    {
      "source": 10,
      "receiver": 7
    },
    {
      "source": 12,
      "receiver": 26
    },
    {
      "source": 13,
      "receiver": 16
    },
    {
      "source": 14,
      "receiver": 20
    },
    {
      "source": 15,
      "receiver": 21
    },
    {
      "source": 16,
      "receiver": 14
    },
    {
      "source": 17,
      "receiver": 19
    },
    {
      "source": 18,
      "receiver": 24
    },
    {
      "source": 19,
      "receiver": 0
    },
    {
      "source": 20,
      "receiver": 9
    },
    {
      "source": 20,
      "receiver": 10
    },
    {
      "source": 20,
      "receiver": 5
    },
    {
      "source": 21,
      "receiver": 22
    },
    {
      "source": 22,
      "receiver": 9
    },
    {
      "source": 22,
      "receiver": 13
    },
    {
      "source": 23,
      "receiver": 6
    },
    {
      "source": 23,
      "receiver": 2
    },
    {
      "source": 24,
      "receiver": 23
    },
    {
      "source": 28,
      "receiver": 29
    },
    {
      "source": 29,
      "receiver": 1
    },
    {
      "source": 29,
      "receiver": 12
    }
  ],
  "diagram_layout": "{\"89c8610df1a4a206b3fa97273dd2b983\":[210,150],\"9cb84eb1c79c101158653537a66f3ddc\":[390,375],\"413fb5b686e3e59f6229cfe32ab76e31\":[-135,-765],\"4c4ecbaf695656e46ba1796310fecac4\":[15,75],\"a044a4c5db3773d771a95b939200f619\":[390,450],\"f4478583d0077405a8faebea56b45b88\":[15,-60],\"b0b6061e5c79a6259b0c3714a5cca3d3\":[105,-765],\"733846b6e506ad6b4b7d399e82427546\":[210,-285],\"11be9c6fd748a4c57cdb751cc90efccd\":[105,-675],\"3bfbd3a7c90e5297e5ae82e6a5c907e0\":[-225,-360],\"f6cb11997886a9c69fdc90d568b79121\":[210,-60],\"39e9243fdf9edbf15dab70839d9662ef\":[615,-975],\"a70b7bcec7a5d480833fffd1a2521ec9\":[150,375],\"a69a342a398b05c2eaa6383c2e2a4f41\":[105,-360],\"a2ddef2c4a98c6e8716e3bcbc3ae72e9\":[15,-210],\"ce5cf91aa0da0247d7c8348265b4591d\":[105,-585],\"2ad091fab718d06dcffb1ec1e8e13a86\":[15,-285],\"66ad46c8a8a3d3c18ac008e91be4b4ec\":[585,-585],\"5b261370198eef6d7aab7daacd670e59\":[105,-1050],\"9d007417c0d8430f647c6937a6105406\":[585,75],\"75a7156477e444c0742828b03d9ee3a8\":[15,-135],\"c25aab0c8b386be06754705c04db85cd\":[105,-510],\"3166eb945d16e43092936aa7f479e7fd\":[105,-435],\"b57cb7dd5a4002e07ce144c4bd68bf2d\":[105,-840],\"438408855f37a5079b871c104ffc5e6c\":[105,-945],\"2005d4b8abdfbffbbf02cd78aaa8a676\":[-135,-600],\"bc37eb2a687983154c7da4bfe63e4bf6\":[150,450],\"ee2192e3aa5fa180d431544e381fc166\":[-225,-135],\"41e7ad4155a29902c9332f93987d9ca6\":[210,225],\"926c4b9927a1a41977188f8146f05575\":[210,300]}",
  "send_to_story_enabled": true,
  "entry_agent_guid": "5b261370198eef6d7aab7daacd670e59",
  "exit_agent_guids": [
    "a044a4c5db3773d771a95b939200f619",
    "2005d4b8abdfbffbbf02cd78aaa8a676",
    "bc37eb2a687983154c7da4bfe63e4bf6",
    "ee2192e3aa5fa180d431544e381fc166"
  ],
  "exit_agent_guid": "a044a4c5db3773d771a95b939200f619",
  "send_to_stories": [],
  "form": {
    "name": "Analyze files with VMRay Form",
    "description": "Upload a File for Analysis in VMRay",
    "fields": [
      {
        "name": "File",
        "description": "",
        "required": false,
        "type": "FILE_UPLOAD",
        "multi_select": false,
        "options": [
          "Option 1",
          "Option 2"
        ],
        "ranking": 0,
        "max_characters": null,
        "tenant_id": 8687
      }
    ],
    "visibility": "world",
    "agent_guid": "5b261370198eef6d7aab7daacd670e59",
    "success_message": "Thank you for your submission"
  }
}