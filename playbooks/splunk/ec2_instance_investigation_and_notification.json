{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Investigate an AWS Security Hub finding related to an exposed EC2 instance which is being probed by potentially malicious traffic. Gather information about the EC2 configuration, the activity on the server, and any remote IP addresses that are directing traffic at the server. Notify and assign the appropriate people using a Jira ticket and a Slack message, then initiate a prompt to ask a responder whether or not the EC2 instance should be moved to an isolated EC2 Security Group using another playbook called \"EC2 Instance Isolation\".",
            "hash": "cf418f09668db560ecb495816af7c0ffe61cfd7c",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "isolate_ec2_instance_approval, add note",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 715,
                        "line_start": 702,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 28,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2480,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f2f10a8b-97f9-4344-92d0-c3f654f272e1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 91
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "344a0391-6105-435c-83f7-8a810791ecfa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 99
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "abc3566b-64a3-4d36-a87b-e19cb3eb4a2a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5fe9b2ac-3c31-4840-9d89-bfde196c4e98",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "43bcd8bb-2927-477e-8b2b-5a59f67e935d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 147
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0754a86f-e712-43a5-95c6-f65a50eacbe6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "43bcd8bb-2927-477e-8b2b-5a59f67e935d",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "06ac4109-b25a-46ea-ba36-2e4e32b12abf",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 149
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fc2ef820-e471-4292-8b59-153c19414add",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "43bcd8bb-2927-477e-8b2b-5a59f67e935d",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "79b1e84b-9e35-4d18-909f-76580eb10d11",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 165
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fa602602-1938-466b-b9c2-700452305107",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "79b1e84b-9e35-4d18-909f-76580eb10d11",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0308ea7e-e078-41c4-b8b4-5b8ceac34dc1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 168
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c039bba8-cc8c-4cb3-ba68-573bfb106b70",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "06ac4109-b25a-46ea-ba36-2e4e32b12abf",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 169
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "923cb6ce-fd80-433e-bdee-779b40ccc022",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0308ea7e-e078-41c4-b8b4-5b8ceac34dc1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 170
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "737d128d-a9fc-4a87-be44-743823408dbd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1e9f631b-7d19-42bc-a724-2355566ba549",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "db100c42-1ee4-461e-adca-024c9af92490",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 171
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "77181ae5-9853-4d5b-8d73-aba7510d6c4f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "db100c42-1ee4-461e-adca-024c9af92490",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2afefd53-d33b-4a78-8716-545f413fdc15",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 191
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e6d1eb99-2ac4-497f-8e2b-97c80bd2b148",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2afefd53-d33b-4a78-8716-545f413fdc15",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b384ea4e-79b2-4c39-9c01-a69057f7a73d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 193
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "76895b01-5836-427c-9ca7-7d029734b5b7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 197
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "063ecd5d-441c-4631-8344-fcc871e5b235",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 198
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fdc051c2-8f50-4c5f-a13a-1c047ca26f8b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d6846575-d047-4578-bc8b-a253d3352fa4",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 208
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9214cc0d-3813-4ee8-a440-2bb0a4bfd5a3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8918c2bb-1806-446f-a892-061eaf13b8a3",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 209
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d2243cb2-8c67-4122-889b-55b9a282ef26",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "017c68a1-52ca-4e3b-b51f-e9ddda3cf748",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 210
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d9920af7-5799-4552-9a30-960ec2605c83",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1e9f631b-7d19-42bc-a724-2355566ba549",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 211
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "39f09618-e4e6-4caf-aae9-a097abc7267f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "211d8baa-4698-4b72-b156-dbba076d71ac",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 217
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fb2df7c2-270f-4d43-8d20-d2f49a1f49b6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "211d8baa-4698-4b72-b156-dbba076d71ac",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2f021267-069f-415b-86a3-0793c94614f8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 235
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9eeb075a-7e74-4525-849f-87a39a27c89f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2f021267-069f-415b-86a3-0793c94614f8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7546ecf5-3269-4474-a93f-54b084b81e78",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 245
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cfaaa0fe-8794-46e7-b601-bb2bbb35e223",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 263
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c55bb4f6-3d9c-4960-ace0-c54b31b7d4ff",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2afefd53-d33b-4a78-8716-545f413fdc15",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0524d94f-27f7-4109-88b2-ef412d62d053",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 273
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9cec0c25-3b3f-40d1-99f6-b80921501c1e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2f021267-069f-415b-86a3-0793c94614f8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d1fe99e4-0bda-429b-9ffd-7ba23bc1d9ef",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 276
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_severity_threshold' block\n    decision_severity_threshold(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "580fa01d-c99c-4e83-b160-3f909db60a41",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 60,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 300
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9d26a065-5e27-401e-bc96-a8b9acfc8771",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "580fa01d-c99c-4e83-b160-3f909db60a41",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 301
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d3438e97-806e-44c4-bfd7-8bdf2c4e7b48",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 304
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fe39c98f-97cd-4b30-bd68-253cc77b437b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9dc0741f-4913-4c27-ada2-79f29814cd6b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 310
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4d68ea2e-510b-431a-b8e1-f9a95f96a841",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9dc0741f-4913-4c27-ada2-79f29814cd6b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5fe9b2ac-3c31-4840-9d89-bfde196c4e98",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 313
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a7c5e474-31d2-4b29-a12d-6be1f0f3e2c1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3073640-1b1d-42e7-8588-8d78152aa450",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 317
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7da63a18-6995-44da-a67d-41d0b7408068",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3073640-1b1d-42e7-8588-8d78152aa450",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5fe9b2ac-3c31-4840-9d89-bfde196c4e98",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 320
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_ec2_resource(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_ec2_resource() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_resource_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decision_ec2_resource",
                        "description": "Only proceed if there is an EC2 Resource contained in the SecurityHub Finding.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 172,
                        "line_start": 155,
                        "name": "decision",
                        "notes": "Only proceed if there is an EC2 Resource contained in the SecurityHub Finding.",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "decision_ec2_resource",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 341
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "from": "",
                            "ip": "finding_format_ip:formatted_data.*",
                            "to": ""
                        },
                        "angle": 0,
                        "app": "PassiveTotal",
                        "appid": "5ab4cd24-22c6-4d66-b959-dc0a5ec848a9",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "whois domain",
                                    "whois ip",
                                    "ip reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "PassiveTotal",
                                "app_version": "1.2.36",
                                "appid": "5ab4cd24-22c6-4d66-b959-dc0a5ec848a9",
                                "asset_name": "passivetotal",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "from": "",
                                    "ip": "finding_format_ip:formatted_data.*",
                                    "ph": "",
                                    "to": ""
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "passivetotal",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-08-01"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.classification.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.ever_compromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemNumber",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15009
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.dynamic",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.dynamicDns",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.everCompromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.global_tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.latitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            37.3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.longitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -122.0008
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.0/24"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.metadata.primaryDomain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.queryType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.metadata.queryValue",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.system_tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "routable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.tld",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-29 00:00:00",
                                            "2018-08-01 00:00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-28 23:48:00",
                                            "2018-09-30 15:41:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.pager",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.queryType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.passive.queryValue",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.collected",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-29 06:55:51",
                                            "2018-10-29 06:58:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-30 14:00:00",
                                            "2018-09-25 00:45:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-30 14:01:32",
                                            "2018-09-25 01:20:02"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.passive.results.*.recordHash",
                                        "data_type": "string",
                                        "example_values": [
                                            "72be28ddd4638821d24006c1919fe785e07107d5a6cb8b0e059fd214e0a2580f",
                                            "807bf684880658f3656001e35c4eb34308891e5ad9fee28ed470d728431dc62c"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.recordType",
                                        "data_type": "string",
                                        "example_values": [
                                            "A"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.resolve",
                                        "data_type": "string",
                                        "example_values": [
                                            "pop.revistadecorar.com.br",
                                            "ipv6.portal79.com.br"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.resolveType",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "riskiq"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.passive.results.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.totalRecords",
                                        "data_type": "numeric",
                                        "example_values": [
                                            89,
                                            123
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-22",
                                            "2017-09-09"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.ssl_certificates.*.ipAddresses",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-26",
                                            "2017-09-20"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.ssl_certificates.*.sha1",
                                        "data_type": "string",
                                        "example_values": [
                                            "66b27f920b738b8ebbb3cf509201f8a2b7d0152c",
                                            "1dd378af8e556ab058e01ef3ba8d47f3d45a8a54"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.unique",
                                        "data_type": "string",
                                        "example_values": [
                                            "cellinicapital.com.au",
                                            "pop.revistadecorar.com.br"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.as_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 3,
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.dynamic_domain",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "column_name": "Ever Compromised",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.ever_compromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.first_seen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-29 00:00:00",
                                            "2018-08-01 00:00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.last_seen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-28 23:48:37",
                                            "2018-09-30 15:41:29"
                                        ]
                                    },
                                    {
                                        "column_name": "Sinkhole",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.total_unique_domains",
                                        "data_type": "numeric",
                                        "example_values": [
                                            123,
                                            118
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total unique domains: 123, Classification: None, Sinkhole: False, Country: US, First seen: 2018-09-29 00:00:00, Ever compromised: False, As name: Splunk Inc., Last seen: 2018-10-28 23:48:35",
                                            "Total unique domains: 118, Classification: None, Sinkhole: False, Country: US, First seen: 2018-08-01 00:00:00, Ever compromised: False, As name: Splunk Inc., Last seen: 2018-09-30 15:41:25"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "from": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Start date for Passive data (YYYY-mm-dd)",
                                        "key": "from",
                                        "order": 2,
                                        "required": false
                                    },
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "ph": {
                                        "data_type": "ph",
                                        "default": null,
                                        "key": "ph",
                                        "order": 1,
                                        "required": false
                                    },
                                    "to": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "End date for Passive data (YYYY-mm-dd)",
                                        "key": "to",
                                        "order": 3,
                                        "required": false
                                    }
                                },
                                "product_name": "PassiveTotal",
                                "product_vendor": "PassiveTotal",
                                "targets": "35",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "finding ip reputation"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def finding_ip_reputation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('finding_ip_reputation() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'finding_ip_reputation' call\n    formatted_data_1 = phantom.get_format_data(name='finding_format_ip__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'finding_ip_reputation' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'ip': formatted_part_1,\n            'ph': \"\",\n            'to': \"\",\n            'from': \"\",\n        })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['passivetotal'], name=\"finding_ip_reputation\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "finding ip reputation",
                        "delay": 0,
                        "description": "Determine the reputation of the IP addresses seen in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d1fe99e4-0bda-429b-9ffd-7ba23bc1d9ef",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 622,
                        "line_start": 599,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "Determine the reputation of the IP addresses seen in the Finding.",
                        "number": 6,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 1080
                        },
                        "previous_function": "",
                        "previous_name": "finding_ip_reputation",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 366
                    },
                    {
                        "action": "geolocate ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "finding_format_ip:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "MaxMind",
                        "appid": "c566e153-3118-4033-abda-14dd9748c91a",
                        "approver": "",
                        "assets": [
                            {
                                "action": "geolocate ip",
                                "actions": [
                                    "geolocate ip"
                                ],
                                "active": true,
                                "app_name": "MaxMind",
                                "app_version": "1.2.22",
                                "appid": "c566e153-3118-4033-abda-14dd9748c91a",
                                "asset_name": "maxmind",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "finding_format_ip:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 2,
                                "loaded": false,
                                "missing": false,
                                "name": "maxmind",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.continent_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "IN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ],
                                        "map_info": "Country"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            23.0333
                                        ],
                                        "map_info": "latitude"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            72.6167
                                        ],
                                        "map_info": "longitude"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "IP Address"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "name"
                                    },
                                    {
                                        "data_path": "action_result.data.*.city_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ],
                                        "map_info": "City"
                                    },
                                    {
                                        "data_path": "action_result.data.*.postal_code",
                                        "data_type": "string",
                                        "example_values": [
                                            380007
                                        ],
                                        "map_info": "Postal Code"
                                    },
                                    {
                                        "data_path": "action_result.data.*.as_org",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ],
                                        "map_info": "Organization"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Gujarat"
                                        ],
                                        "map_info": "State/Province"
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_zone",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia/Kolkata"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.city",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "City: Ahmedabad, State: GJ, Country: India"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "allow_list": true,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to geolocate",
                                        "key": "ip",
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "GeoIP2",
                                "product_vendor": "MaxMind",
                                "targets": "2",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "finding geolocate ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def finding_geolocate_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('finding_geolocate_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'finding_geolocate_ip' call\n    formatted_data_1 = phantom.get_format_data(name='finding_format_ip__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'finding_geolocate_ip' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'ip': formatted_part_1,\n        })\n\n    phantom.act(action=\"geolocate ip\", parameters=parameters, assets=['maxmind'], name=\"finding_geolocate_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "finding geolocate ip",
                        "delay": 0,
                        "description": "Determine the geolocation of the IP addresses seen in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7546ecf5-3269-4474-a93f-54b084b81e78",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 570,
                        "line_start": 550,
                        "message": "Configuring now",
                        "name": "geolocate ip",
                        "notes": "Determine the geolocation of the IP addresses seen in the Finding.",
                        "number": 2,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 940
                        },
                        "previous_function": "",
                        "previous_name": "finding_geolocate_ip",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 367
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "connection format ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def connection_format_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('connection_format_ip() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filter_ip_addresses:custom_function:connection_ip_addresses\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"connection_format_ip\")\n\n    connection_geolocate_ip(container=container)\n    connection_ip_reputation(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "connection format ip",
                        "description": "Turn the remaining IP addresses into a list to allow usage in an action.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2afefd53-d33b-4a78-8716-545f413fdc15",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 470,
                        "line_start": 451,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Turn the remaining IP addresses into a list to allow usage in an action.",
                        "number": 3,
                        "order": 18,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filter_ip_addresses:custom_function:connection_ip_addresses"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 660
                        },
                        "previous_function": "",
                        "previous_name": "connection_format_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 369
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "finding format ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def finding_format_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('finding_format_ip() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"parse_remote_ip_addrs:custom_function:ip_addresses\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"finding_format_ip\")\n\n    finding_geolocate_ip(container=container)\n    finding_ip_reputation(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "finding format ip",
                        "description": "Turn the IP addresses from the Finding into a list to allow usage in an action.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2f021267-069f-415b-86a3-0793c94614f8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 547,
                        "line_start": 528,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Turn the IP addresses from the Finding into a list to allow usage in an action.",
                        "number": 4,
                        "order": 21,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "parse_remote_ip_addrs:custom_function:ip_addresses"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 940
                        },
                        "previous_function": "",
                        "previous_name": "finding_format_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 370
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "parse remote ip addrs"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def parse_remote_ip_addrs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('parse_remote_ip_addrs() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.ProductFields'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    parse_remote_ip_addrs__ip_addresses = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parse_remote_ip_addrs__ip_addresses = []\n    \n    product_fields = filtered_artifacts_item_1_0[0]\n    for key in product_fields.keys():\n        if 'remoteIpDetails/ipAddressV4' in key:\n            parse_remote_ip_addrs__ip_addresses.append(product_fields[key])\n    phantom.debug(\"remote ip addresses from finding:\\n{}\".format(parse_remote_ip_addrs__ip_addresses))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='parse_remote_ip_addrs:ip_addresses', value=json.dumps(parse_remote_ip_addrs__ip_addresses))\n    finding_format_ip(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def parse_remote_ip_addrs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('parse_remote_ip_addrs() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.ProductFields'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    parse_remote_ip_addrs__ip_addresses = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parse_remote_ip_addrs__ip_addresses = []\n    \n    product_fields = filtered_artifacts_item_1_0[0]\n    for key in list(product_fields.keys()):\n        if 'remoteIpDetails/ipAddressV4' in key:\n            parse_remote_ip_addrs__ip_addresses.append(product_fields[key])\n    phantom.debug(\"remote ip addresses from finding:\\n{}\".format(parse_remote_ip_addrs__ip_addresses))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='parse_remote_ip_addrs:ip_addresses', value=json.dumps(parse_remote_ip_addrs__ip_addresses))\n\n    return",
                        "custom_join": "",
                        "custom_name": "parse remote ip addrs",
                        "description": "Collect the remote IP addresses described in the Finding.",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "211d8baa-4698-4b72-b156-dbba076d71ac",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 525,
                        "line_start": 496,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Collect the remote IP addresses described in the Finding.",
                        "number": 6,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "ip_addresses"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.ProductFields"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 940
                        },
                        "previous_function": "",
                        "previous_name": "parse_remote_ip_addrs",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    parse_remote_ip_addrs__ip_addresses = []\n    \n    product_fields = filtered_artifacts_item_1_0[0]\n    for key in product_fields.keys():\n        if 'remoteIpDetails/ipAddressV4' in key:\n            parse_remote_ip_addrs__ip_addresses.append(product_fields[key])\n    phantom.debug(\"remote ip addresses from finding:\\n{}\".format(parse_remote_ip_addrs__ip_addresses))\n",
                        "warn": false,
                        "z": 373
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_severity_threshold(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_severity_threshold() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.Severity.Normalized\", \">\", 35],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        decision_ec2_resource(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decision_severity_threshold",
                        "description": "Only proceed with this Finding if the SecurityHub normalized severity is above a certain threshold.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 642,
                        "line_start": 625,
                        "name": "decision",
                        "notes": "Only proceed with this Finding if the SecurityHub normalized severity is above a certain threshold.",
                        "number": 3,
                        "order": 25,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "artifact:*.cef.Severity.Normalized",
                                        "value": "35"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "decision_severity_threshold",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 377
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_finding_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_finding_artifact() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"Finding Artifact\"],\n        ],\n        name=\"filter_finding_artifact:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        describe_ec2_instance(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_finding_artifact",
                        "description": "Separate the main Finding artifact from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 152,
                        "line_start": 135,
                        "name": "filter",
                        "notes": "Separate the main Finding artifact from the other artifacts in the Finding.",
                        "number": 2,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "Finding Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "filter_finding_artifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 379
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "build finding url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def build_finding_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('build_finding_url() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.Id'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    build_finding_url__finding_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=us-east-1#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    \n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='build_finding_url:finding_url', value=json.dumps(build_finding_url__finding_url))\n    format_description(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def build_finding_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('custom_function_4() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_2:condition_1:artifact:*.cef.Id'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    build_finding_url__finding_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=us-east-1#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    \n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_4:finding_url', value=json.dumps(build_finding_url__finding_url))\n\n    return",
                        "custom_join": "",
                        "custom_name": "build finding url",
                        "description": "Use the Finding ID to construct a URL with a pre-populated SecurityHub search to view the Finding in the AWS Console.",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 200,
                        "line_start": 175,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Use the Finding ID to construct a URL with a pre-populated SecurityHub search to view the Finding in the AWS Console.",
                        "number": 4,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "finding_url"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.Id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "build_finding_url",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=us-east-1#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    ",
                        "warn": false,
                        "z": 382
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format description"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_description(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_description() called')\n    \n    template = \"\"\"Phantom received a Security Hub Finding with the following details:\n\nFinding title: {0}\nFinding description: {1}\nPhantom Mission Control link: {2}\nAWS Security Hub Finding link: {3}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"container:name\",\n        \"container:description\",\n        \"container:url\",\n        \"build_finding_url:custom_function:finding_url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_description\")\n\n    create_ticket_1(container=container)\n    send_message_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format description",
                        "description": "Put together the relevant links, title, and description for the Finding to present to an analyst in both a ticket and a chat message.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 122,
                        "line_end": 112,
                        "line_start": 87,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Put together the relevant links, title, and description for the Finding to present to an analyst in both a ticket and a chat message.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:name"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "container:description"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "container:url"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "build_finding_url:custom_function:finding_url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "format_description",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom received a Security Hub Finding with the following details:\n\nFinding title: {0}\nFinding description: {1}\nPhantom Mission Control link: {2}\nAWS Security Hub Finding link: {3}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 384
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "assignee": "",
                            "description": "format_description:formatted_data",
                            "fields": "",
                            "issue_type": "Bug",
                            "priority": "High",
                            "project_key": "EK",
                            "summary": "container:name",
                            "vault_id": ""
                        },
                        "angle": 0,
                        "app": "Jira",
                        "appid": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                        "approver": "",
                        "assets": [
                            {
                                "action": "create ticket",
                                "actions": [
                                    "on poll",
                                    "set status",
                                    "get ticket",
                                    "list tickets",
                                    "list projects",
                                    "delete ticket",
                                    "add comment",
                                    "update ticket",
                                    "create ticket",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "2.0.23",
                                "appid": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                                "asset_name": "jira",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "assignee": "",
                                    "assignee_account_id": "",
                                    "description": "format_description:formatted_data",
                                    "fields": "",
                                    "issue_type": "Bug",
                                    "priority": "High",
                                    "project_key": "EK",
                                    "summary": "container:name",
                                    "vault_id": ""
                                },
                                "has_app": true,
                                "id": 50,
                                "loaded": false,
                                "missing": false,
                                "name": "jira",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.assignee",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.parameter.assignee_account_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "5d2ef6ab52a8370c567f27bb"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.fields",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"priority\": {\"name\": \"Normal\"}}",
                                            "{\"fields\": {\"customfield_10105\": \"Test epic link name\"}}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.parameter.issue_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.parameter.priority",
                                        "data_type": "string",
                                        "example_values": [
                                            "Normal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.parameter.project_key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN",
                                            "PRJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "fe3ac82064175835a67c279cbb9373f96c367566"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.assign_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attach_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Checkbox Field Three",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Label Field Two",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Text Field One",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.CustomerSanText",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Epic Link",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Domain Test",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Sprint",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.progress",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimeestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimeoriginalestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimespent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.accountId",
                                        "data_type": "string",
                                        "example_values": [
                                            "5d2ef6ab52a8370c567f27bb"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.maxResults",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.startAt",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.created",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-25T06:31:58.854-0700"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.accountId",
                                        "data_type": "string",
                                        "example_values": [
                                            "557058:c4593bd2-4853-4a5e-a9ed-278ca5f17dce"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=small&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=medium&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.emailAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "notifications@domain.us"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/user?username=admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.timeZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10000.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10000.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10002.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10002.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10400.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10400.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "testing",
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.duedate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.environment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.avatarId",
                                        "data_type": "numeric",
                                        "example_values": [
                                            10318
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "This is a task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/issuetypes/story.svg",
                                            "http://10.10.123.124:8080/secure/viewavatar?size=xsmall&avatarId=10318&avatarType=issuetype"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10101",
                                            "3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issuetype/10101",
                                            "http://10.10.123.124:8080/rest/api/2/issuetype/3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.subtask",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.lastViewed",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/priorities/medium.svg"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.priority.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Medium"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/priority/3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.progress",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=xsmall&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=small&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=medium&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?avatarId=10403"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10100"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "TestProject"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "QA-Team"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://testlab.atlassian.net/rest/api/2/projectCategory/10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectTypeKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "software"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/project/10100"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.simplified",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=small&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=medium&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.emailAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "notifications@domain.us"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/user?username=admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.timeZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.resolution",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.resolutiondate",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-03T03:42:10.912-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.security",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "This is a sample testing description"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/statuses/open.png"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/status/10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.colorName",
                                        "data_type": "string",
                                        "example_values": [
                                            "blue-gray"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "new"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.statusCategory.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/statuscategory/2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.statuscategorychangedate",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-07-22T22:43:07.771-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "test",
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timeestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timeoriginalestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timespent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-25T06:31:58.854-0700",
                                            "2018-10-03T03:42:10.913-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.hasVoted",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.votes.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issue/MAN-240/votes",
                                            "http://10.10.123.124:8080/rest/api/2/issue/PHANINCIDE-370/votes"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.votes",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.isWatching",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.watches.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issue/MAN-240/watchers",
                                            "http://10.10.123.124:8080/rest/api/2/issue/PHANINCIDE-370/watchers"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.watchCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.maxResults",
                                        "data_type": "numeric",
                                        "example_values": [
                                            20
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.startAt",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.workratio",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -1
                                        ]
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "11850",
                                            "11911"
                                        ]
                                    },
                                    {
                                        "column_name": "Type",
                                        "column_order": 3,
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.data.*.issue_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.json_fields_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Key",
                                        "column_order": 4,
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN-240",
                                            "PHANINCIDE-370"
                                        ]
                                    },
                                    {
                                        "column_name": "Priority",
                                        "column_order": 6,
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.data.*.priority",
                                        "data_type": "string",
                                        "example_values": [
                                            "Medium"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.data.*.project_key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN",
                                            "PRJ"
                                        ]
                                    },
                                    {
                                        "column_name": "Reporter",
                                        "column_order": 8,
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.reporter",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "column_name": "Resolution",
                                        "column_order": 7,
                                        "contains": [
                                            "jira ticket resolution"
                                        ],
                                        "data_path": "action_result.data.*.resolution",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unresolved"
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "column_name": "Summary",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "test",
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Created ticket with id: 11850, key: MAN-240",
                                            "Created ticket with id: 11911, key: PHANINCIDE-370"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "assignee": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Assignee user (assign permission required)",
                                        "key": "assignee",
                                        "order": 5,
                                        "required": false
                                    },
                                    "description": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Description of the issue",
                                        "key": "description",
                                        "order": 2,
                                        "required": false
                                    },
                                    "fields": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON containing field values",
                                        "key": "fields",
                                        "order": 6,
                                        "required": false
                                    },
                                    "issue_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Type of the issue",
                                        "key": "issue_type",
                                        "order": 3,
                                        "required": false
                                    },
                                    "priority": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Priority of the issue",
                                        "key": "priority",
                                        "order": 4,
                                        "required": false
                                    },
                                    "project_key": {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Project Key to add the issue to",
                                        "key": "project_key",
                                        "order": 0,
                                        "primary": true,
                                        "required": false
                                    },
                                    "summary": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Summary of the issue",
                                        "key": "summary",
                                        "order": 1,
                                        "required": false
                                    },
                                    "vault_id": {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault ID of attachment",
                                        "key": "vault_id",
                                        "order": 7,
                                        "required": false
                                    }
                                },
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "targets": "50",
                                "type": "ticketing"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create ticket"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def create_ticket_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_ticket_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    name_value = container.get('name', None)\n\n    # collect data for 'create_ticket_1' call\n    formatted_data_1 = phantom.get_format_data(name='format_description')\n\n    parameters = []\n    \n    # build parameters list for 'create_ticket_1' call\n    parameters.append({\n        'fields': \"\",\n        'summary': name_value,\n        'assignee': \"\",\n        'priority': \"High\",\n        'vault_id': \"\",\n        'issue_type': \"Bug\",\n        'description': formatted_data_1,\n        'project_key': \"EK\",\n        'assignee_account_id': \"\",\n    })\n\n    phantom.act(action=\"create ticket\", parameters=parameters, assets=['jira'], callback=join_isolate_ec2_instance_approval, name=\"create_ticket_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Create a ticket to track this incident.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9dc0741f-4913-4c27-ada2-79f29814cd6b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 674,
                        "line_start": 645,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "Create a ticket to track this incident.",
                        "number": 1,
                        "order": 26,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "create_ticket_1",
                        "required_params": {
                            "issue_type": true,
                            "project_key": true,
                            "summary": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 385
                    },
                    {
                        "action": "send message",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "destination": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.Tags.InstanceOwnerSlack",
                            "message": "format_description:formatted_data"
                        },
                        "angle": 0,
                        "app": "Slack",
                        "appid": "3ac26c7f-baa4-4583-86ff-5aac82778a86",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send message",
                                "actions": [
                                    "stop bot",
                                    "on poll",
                                    "get response",
                                    "ask question",
                                    "upload file",
                                    "send message",
                                    "get user",
                                    "list users",
                                    "list channels",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Slack",
                                "app_version": "1.2.21",
                                "appid": "3ac26c7f-baa4-4583-86ff-5aac82778a86",
                                "asset_name": "slack",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "destination": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.Tags.InstanceOwnerSlack",
                                    "message": "format_description:formatted_data"
                                },
                                "has_app": true,
                                "id": 52,
                                "loaded": false,
                                "missing": false,
                                "name": "slack",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Destination",
                                        "column_order": 0,
                                        "contains": [
                                            "slack destination",
                                            "slack user"
                                        ],
                                        "data_path": "action_result.parameter.destination",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "slack destination"
                                        ],
                                        "data_path": "action_result.data.*.channel",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.message.bot_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.message.text",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.message.ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.message.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.message.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ok",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "destination": {
                                        "contains": [
                                            "slack destination",
                                            "slack user"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Channel (e.g. #channel or C1A1A1AAA) or user (e.g. @user or U1A1A1AAA) to send message to",
                                        "key": "destination",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "message": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message to send",
                                        "key": "message",
                                        "order": 1,
                                        "primary": false,
                                        "required": true
                                    }
                                },
                                "product_name": "Slack",
                                "product_vendor": "Slack Technologies",
                                "targets": "52",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send message"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def send_message_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('send_message_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_message_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.Tags.InstanceOwnerSlack', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='format_description')\n\n    parameters = []\n    \n    # build parameters list for 'send_message_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'message': formatted_data_1,\n                'destination': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"send message\", parameters=parameters, assets=['slack'], callback=join_isolate_ec2_instance_approval, name=\"send_message_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Determine the person responsible for managing the server based on a tag on the EC2 instance, and notify that person about the Finding and the potential remediation by Phantom using an individual Slack message .",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3073640-1b1d-42e7-8588-8d78152aa450",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 702,
                        "line_start": 677,
                        "message": "Configuring now",
                        "name": "send message",
                        "notes": "Determine the person responsible for managing the server based on a tag on the EC2 instance, and notify that person about the Finding and the potential remediation by Phantom using an individual Slack message .",
                        "number": 1,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "send_message_1",
                        "required_params": {
                            "destination": true,
                            "message": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 387
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def isolate_ec2_instance_approval(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('isolate_ec2_instance_approval() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"The playbook ec2_instance_investigation_and_notification has investigated the EC2 instance with ID {0} and name {1}. Should Phantom quarantine the instance by changing the instance's Security Group to disallow all traffic?\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_ec2_instance:action_result.parameter.instance_ids\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.Tags.Name\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"isolate_ec2_instance_approval\", parameters=parameters, response_types=response_types, callback=prompt_decision)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "create ticket, send message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "isolate_ec2_instance_approval",
                        "description": "Ask the analyst whether to isolate the EC2 instance using a change in security groups.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5fe9b2ac-3c31-4840-9d89-bfde196c4e98",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_isolate_ec2_instance_approval(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_isolate_ec2_instance_approval() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['create_ticket_1', 'send_message_1']):\n        \n        # call connected block \"isolate_ec2_instance_approval\"\n        isolate_ec2_instance_approval(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 319,
                        "line_end": 330,
                        "line_start": 288,
                        "message": "The playbook ec2_instance_investigation_and_notification has investigated the EC2 instance with ID {0} and name {1}. Should Phantom quarantine the instance by changing the instance's Security Group to disallow all traffic?",
                        "name": "prompt",
                        "notes": "Ask the analyst whether to isolate the EC2 instance using a change in security groups.",
                        "number": 1,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.parameter.instance_ids"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.Tags.Name"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "isolate_ec2_instance_approval",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 389
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def prompt_decision(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_decision() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"isolate_ec2_instance_approval:action_result.summary.responses.0\", \"==\", \"Yes\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        playbook_local_ec2_instance_isolation_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    format_security_hub_note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "isolate_ec2_instance_approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prompt decision",
                        "description": "Check the result from the previous prompt block.",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "43bcd8bb-2927-477e-8b2b-5a59f67e935d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 354,
                        "line_start": 333,
                        "name": "decision",
                        "notes": "Check the result from the previous prompt block.",
                        "number": 2,
                        "order": 13,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "isolate_ec2_instance_approval:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1860,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "prompt_decision",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 390
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".playbook": {
                                "text": "ec2_instance_isolation"
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "Playbook"
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_local_ec2_instance_isolation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('playbook_local_ec2_instance_isolation_1() called')\n    \n    # call playbook \"local/ec2_instance_isolation\", returns the playbook_run_id\n    playbook_run_id = phantom.playbook(playbook=\"local/ec2_instance_isolation\", container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "isolate_ec2_instance_approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Call another playbook to isolate the EC2 instance as specified by the prompt.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "06ac4109-b25a-46ea-ba36-2e4e32b12abf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 365,
                        "line_start": 357,
                        "message": "Configuring now",
                        "name": "ec2_instance_isolation",
                        "notes": "Call another playbook to isolate the EC2 instance as specified by the prompt.",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "playbook": "local/ec2_instance_isolation",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2000,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "playbook_local_ec2_instance_isolation_1",
                        "scmName": "local",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "callplaybook",
                        "status": "",
                        "title": "Playbook",
                        "type": "coa.CallPlaybook",
                        "warn": false,
                        "z": 391
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format security hub note"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_security_hub_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_security_hub_note() called')\n    \n    template = \"\"\"Phantom investigated this incident and the analyst decided not to isolate this instance automatically. View the event in Phantom Mission Control here: {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"container:url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_security_hub_note\")\n\n    add_note_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "isolate_ec2_instance_approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format security hub note",
                        "description": "Format a note describing the \"No\" response from the prompt.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "79b1e84b-9e35-4d18-909f-76580eb10d11",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 410,
                        "line_start": 394,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a note describing the \"No\" response from the prompt.",
                        "number": 2,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2000,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "format_security_hub_note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom investigated this incident and the analyst decided not to isolate this instance automatically. View the event in Phantom Mission Control here: {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 394
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "filter ip addresses"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_ip_addresses(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_ip_addresses() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['list_connections_1:action_result.data.*.connections.*.remote_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    filter_ip_addresses__connection_ip_addresses = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    filter_ip_addresses__connection_ip_addresses = []\n    \n    internal_cidr = \"172.31.0.0/16\"\n    for ip in results_item_1_0:\n        phantom.debug(\"checking ip {} against internal CIDR: {}\".format(ip, internal_cidr))\n        if phantom.address_in_network(ip, internal_cidr):\n            phantom.debug(\"skipping ip {} because it matches the internal CIDR\".format(ip))\n            continue\n        \n        filter_ip_addresses__connection_ip_addresses.append(ip)\n        \n    # this block outputs all the non-internal ip addresses:\n    phantom.debug(\"connection ip list:\\n{}\".format(filter_ip_addresses__connection_ip_addresses))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='filter_ip_addresses:connection_ip_addresses', value=json.dumps(filter_ip_addresses__connection_ip_addresses))\n    connection_format_ip(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def filter_ip_addresses(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_ip_addresses() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['list_connections_1:action_result.data.*.connections.*.remote_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    filter_ip_addresses__connection_ip_addresses = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    filter_ip_addresses__connection_ip_addresses = []\n    \n    internal_cidr = \"172.31.0.0/16\"\n    for ip in results_item_1_0:\n        phantom.debug(\"checking ip {} against internal CIDR: {}\".format(ip, internal_cidr))\n        if phantom.address_in_network(ip, internal_cidr):\n            phantom.debug(\"skipping ip {} because it matches the internal CIDR\".format(ip))\n            continue\n        \n        filter_ip_addresses__connection_ip_addresses.append(ip)\n        \n    # this block outputs all the non-internal ip addresses:\n    phantom.debug(\"connection ip list:\\n{}\".format(filter_ip_addresses__connection_ip_addresses))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='filter_ip_addresses:connection_ip_addresses', value=json.dumps(filter_ip_addresses__connection_ip_addresses))\n    connection_format_ip(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "filter ip addresses",
                        "description": "Filter out the IP addresses that belong to the internal AWS VPC.",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "db100c42-1ee4-461e-adca-024c9af92490",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 448,
                        "line_start": 413,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Filter out the IP addresses that belong to the internal AWS VPC.",
                        "number": 5,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "connection_ip_addresses"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "list_connections_1:action_result.data.*.connections.*.remote_ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 660
                        },
                        "previous_function": "",
                        "previous_name": "filter_ip_addresses",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    filter_ip_addresses__connection_ip_addresses = []\n    \n    internal_cidr = \"172.31.0.0/16\"\n    for ip in results_item_1_0:\n        phantom.debug(\"checking ip {} against internal CIDR: {}\".format(ip, internal_cidr))\n        if phantom.address_in_network(ip, internal_cidr):\n            phantom.debug(\"skipping ip {} because it matches the internal CIDR\".format(ip))\n            continue\n        \n        filter_ip_addresses__connection_ip_addresses.append(ip)\n        \n    # this block outputs all the non-internal ip addresses:\n    phantom.debug(\"connection ip list:\\n{}\".format(filter_ip_addresses__connection_ip_addresses))\n",
                        "warn": false,
                        "z": 398
                    },
                    {
                        "action": "geolocate ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "connection_format_ip:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "geolocate ip",
                                "actions": [
                                    "geolocate ip"
                                ],
                                "active": true,
                                "app_name": "MaxMind",
                                "app_version": "1.2.22",
                                "appid": "c566e153-3118-4033-abda-14dd9748c91a",
                                "asset_name": "maxmind",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "connection_format_ip:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 2,
                                "loaded": false,
                                "missing": false,
                                "name": "maxmind",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.continent_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "IN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ],
                                        "map_info": "Country"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            23.0333
                                        ],
                                        "map_info": "latitude"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            72.6167
                                        ],
                                        "map_info": "longitude"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "IP Address"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "name"
                                    },
                                    {
                                        "data_path": "action_result.data.*.city_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ],
                                        "map_info": "City"
                                    },
                                    {
                                        "data_path": "action_result.data.*.postal_code",
                                        "data_type": "string",
                                        "example_values": [
                                            380007
                                        ],
                                        "map_info": "Postal Code"
                                    },
                                    {
                                        "data_path": "action_result.data.*.as_org",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ],
                                        "map_info": "Organization"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Gujarat"
                                        ],
                                        "map_info": "State/Province"
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_zone",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia/Kolkata"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.city",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "City: Ahmedabad, State: GJ, Country: India"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "allow_list": true,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to geolocate",
                                        "key": "ip",
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "GeoIP2",
                                "product_vendor": "MaxMind",
                                "targets": "2",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "connection geolocate ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def connection_geolocate_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('connection_geolocate_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'connection_geolocate_ip' call\n    formatted_data_1 = phantom.get_format_data(name='connection_format_ip__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'connection_geolocate_ip' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'ip': formatted_part_1,\n        })\n\n    phantom.act(action=\"geolocate ip\", parameters=parameters, assets=['maxmind'], name=\"connection_geolocate_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "connection geolocate ip",
                        "delay": 0,
                        "description": "Determine the geolocation of the IP addresses seen in network connections to the EC2 instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b384ea4e-79b2-4c39-9c01-a69057f7a73d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 493,
                        "line_start": 473,
                        "message": "Configuring now",
                        "name": "geolocate ip",
                        "notes": "Determine the geolocation of the IP addresses seen in network connections to the EC2 instance.",
                        "number": 1,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 660
                        },
                        "previous_function": "",
                        "previous_name": "connection_geolocate_ip",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 402
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "from": "",
                            "ip": "connection_format_ip:formatted_data.*",
                            "to": ""
                        },
                        "angle": 0,
                        "app": "PassiveTotal",
                        "appid": "5ab4cd24-22c6-4d66-b959-dc0a5ec848a9",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "whois domain",
                                    "whois ip",
                                    "ip reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "PassiveTotal",
                                "app_version": "1.2.36",
                                "appid": "5ab4cd24-22c6-4d66-b959-dc0a5ec848a9",
                                "asset_name": "passivetotal",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "from": "",
                                    "ip": "connection_format_ip:formatted_data.*",
                                    "ph": "",
                                    "to": ""
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "passivetotal",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-08-01"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.classification.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.ever_compromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemNumber",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15009
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.dynamic",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.dynamicDns",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.everCompromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.global_tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.latitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            37.3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.longitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -122.0008
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.0/24"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.metadata.primaryDomain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.queryType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.metadata.queryValue",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.system_tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "routable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.tld",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-29 00:00:00",
                                            "2018-08-01 00:00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-28 23:48:00",
                                            "2018-09-30 15:41:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.pager",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.queryType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.passive.queryValue",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.collected",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-29 06:55:51",
                                            "2018-10-29 06:58:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-30 14:00:00",
                                            "2018-09-25 00:45:01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-30 14:01:32",
                                            "2018-09-25 01:20:02"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.passive.results.*.recordHash",
                                        "data_type": "string",
                                        "example_values": [
                                            "72be28ddd4638821d24006c1919fe785e07107d5a6cb8b0e059fd214e0a2580f",
                                            "807bf684880658f3656001e35c4eb34308891e5ad9fee28ed470d728431dc62c"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.recordType",
                                        "data_type": "string",
                                        "example_values": [
                                            "A"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.resolve",
                                        "data_type": "string",
                                        "example_values": [
                                            "pop.revistadecorar.com.br",
                                            "ipv6.portal79.com.br"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.resolveType",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "riskiq"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.passive.results.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.totalRecords",
                                        "data_type": "numeric",
                                        "example_values": [
                                            89,
                                            123
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.firstSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-22",
                                            "2017-09-09"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.ssl_certificates.*.ipAddresses",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.1.1.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.lastSeen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-26",
                                            "2017-09-20"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.ssl_certificates.*.sha1",
                                        "data_type": "string",
                                        "example_values": [
                                            "66b27f920b738b8ebbb3cf509201f8a2b7d0152c",
                                            "1dd378af8e556ab058e01ef3ba8d47f3d45a8a54"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.unique",
                                        "data_type": "string",
                                        "example_values": [
                                            "cellinicapital.com.au",
                                            "pop.revistadecorar.com.br"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.as_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.classification",
                                        "data_type": "string",
                                        "example_values": []
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 3,
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.dynamic_domain",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "column_name": "Ever Compromised",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.ever_compromised",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.first_seen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-29 00:00:00",
                                            "2018-08-01 00:00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.last_seen",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-28 23:48:37",
                                            "2018-09-30 15:41:29"
                                        ]
                                    },
                                    {
                                        "column_name": "Sinkhole",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.sinkhole",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.total_unique_domains",
                                        "data_type": "numeric",
                                        "example_values": [
                                            123,
                                            118
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total unique domains: 123, Classification: None, Sinkhole: False, Country: US, First seen: 2018-09-29 00:00:00, Ever compromised: False, As name: Splunk Inc., Last seen: 2018-10-28 23:48:35",
                                            "Total unique domains: 118, Classification: None, Sinkhole: False, Country: US, First seen: 2018-08-01 00:00:00, Ever compromised: False, As name: Splunk Inc., Last seen: 2018-09-30 15:41:25"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "from": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Start date for Passive data (YYYY-mm-dd)",
                                        "key": "from",
                                        "order": 2,
                                        "required": false
                                    },
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "ph": {
                                        "data_type": "ph",
                                        "default": null,
                                        "key": "ph",
                                        "order": 1,
                                        "required": false
                                    },
                                    "to": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "End date for Passive data (YYYY-mm-dd)",
                                        "key": "to",
                                        "order": 3,
                                        "required": false
                                    }
                                },
                                "product_name": "PassiveTotal",
                                "product_vendor": "PassiveTotal",
                                "targets": "35",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "connection ip reputation"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def connection_ip_reputation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('connection_ip_reputation() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'connection_ip_reputation' call\n    formatted_data_1 = phantom.get_format_data(name='connection_format_ip__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'connection_ip_reputation' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'ip': formatted_part_1,\n            'ph': \"\",\n            'to': \"\",\n            'from': \"\",\n        })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['passivetotal'], name=\"connection_ip_reputation\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "connection ip reputation",
                        "delay": 0,
                        "description": "Determine the reputation of the IP addresses seen in network connections to the EC2 instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0524d94f-27f7-4109-88b2-ef412d62d053",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 596,
                        "line_start": 573,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "Determine the reputation of the IP addresses seen in network connections to the EC2 instance.",
                        "number": 5,
                        "order": 23,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 800
                        },
                        "previous_function": "",
                        "previous_name": "connection_ip_reputation",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 403
                    },
                    {
                        "action": "add note",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "findings_id": "container:source_data_identifier",
                            "note": "format_security_hub_note:formatted_data",
                            "overwrite": ""
                        },
                        "angle": 0,
                        "app": "AWS Security Hub",
                        "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add note",
                                "actions": [
                                    "add note",
                                    "unarchive findings",
                                    "archive findings",
                                    "get related findings",
                                    "get findings",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS Security Hub",
                                "app_version": "1.1.0",
                                "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                                "asset_name": "aws-securityhub-redux",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "findings_id": "container:source_data_identifier",
                                    "note": "format_security_hub_note:formatted_data",
                                    "overwrite": ""
                                },
                                "has_app": true,
                                "id": 33,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_security_hub",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Findings ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_path": "action_result.parameter.findings_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab",
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab"
                                        ]
                                    },
                                    {
                                        "column_name": "Note",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string",
                                        "example_values": [
                                            "note for findings"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                                        "data_type": "string",
                                        "example_values": [
                                            "keep-alive"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/json"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Fri, 12 Apr 2019 11:26:08 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-apigw-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "123456789abcdefghi1234ab="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-trace-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "Root=1-5cb075cf-123456789abcdefghi1234ab;Sampled=0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.add_note",
                                        "data_type": "string",
                                        "example_values": [
                                            "Success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note added successfully to the provided findings ID"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "findings_id": {
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Identifier of security finding",
                                        "key": "findings_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The text of a note",
                                        "key": "note",
                                        "order": 1,
                                        "primary": false,
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check this box to overwrite the existing notes, otherwise notes will be appended to existing notes",
                                        "key": "overwrite",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Security Hub",
                                "product_vendor": "AWS",
                                "targets": "33",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'add_note_2' call\n    formatted_data_1 = phantom.get_format_data(name='format_security_hub_note')\n\n    parameters = []\n    \n    # build parameters list for 'add_note_2' call\n    parameters.append({\n        'note': formatted_data_1,\n        'overwrite': \"\",\n        'findings_id': source_data_identifier_value,\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['aws_security_hub'], name=\"add_note_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "isolate_ec2_instance_approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Add the formatted note to the SecurityHub Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0308ea7e-e078-41c4-b8b4-5b8ceac34dc1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 391,
                        "line_start": 368,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Add the formatted note to the SecurityHub Finding.",
                        "number": 2,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2240,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "add_note_2",
                        "required_params": {
                            "findings_id": true,
                            "note": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 405
                    },
                    {
                        "action": "list firewall rules",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "chain": "",
                            "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                            "port": "",
                            "protocol": ""
                        },
                        "angle": 0,
                        "app": "SSH",
                        "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list firewall rules",
                                "actions": [
                                    "put file",
                                    "get file",
                                    "get memory usage",
                                    "get disk usage",
                                    "list processes",
                                    "logoff user",
                                    "terminate process",
                                    "shutdown system",
                                    "reboot system",
                                    "delete firewall rule",
                                    "list firewall rules",
                                    "block ip",
                                    "list connections",
                                    "execute program",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.47",
                                "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                                "asset_name": "ssh",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "chain": "",
                                    "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                    "port": "",
                                    "protocol": ""
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.chain",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.port",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.protocol",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Chain",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.rules.*.chain",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Destination",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.rules.*.destination",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Number",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.rules.*.num",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Options",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.rules.*.options",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Protocol",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.rules.*.protocol",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Source",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.rules.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Target",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.rules.*.target",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "chain": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Chain to match (INPUT, OUTPUT, etc.)",
                                        "key": "chain",
                                        "order": 3,
                                        "required": false
                                    },
                                    "ip_hostname": {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hostname/IP to list firewall rules on",
                                        "key": "ip_hostname",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Port to match",
                                        "key": "port",
                                        "order": 2,
                                        "required": false
                                    },
                                    "protocol": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Protocol to match",
                                        "key": "protocol",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "targets": "20",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list firewall rules"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_firewall_rules_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_firewall_rules_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_firewall_rules_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_firewall_rules_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'port': \"\",\n                'chain': \"\",\n                'protocol': \"\",\n                'ip_hostname': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"list firewall rules\", parameters=parameters, assets=['ssh'], name=\"list_firewall_rules_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List the host-based firewall rules on the EC2 instance using SSH.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8918c2bb-1806-446f-a892-061eaf13b8a3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 259,
                        "line_start": 233,
                        "message": "Configuring now",
                        "name": "list firewall rules",
                        "notes": "List the host-based firewall rules on the EC2 instance using SSH.",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "list_firewall_rules_1",
                        "required_params": {
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 407
                    },
                    {
                        "action": "list processes",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName"
                        },
                        "angle": 0,
                        "app": "SSH",
                        "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list processes",
                                "actions": [
                                    "put file",
                                    "get file",
                                    "get memory usage",
                                    "get disk usage",
                                    "list processes",
                                    "logoff user",
                                    "terminate process",
                                    "shutdown system",
                                    "reboot system",
                                    "delete firewall rule",
                                    "list firewall rules",
                                    "block ip",
                                    "list connections",
                                    "execute program",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.47",
                                "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                                "asset_name": "ssh",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName"
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.processes.*.command",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Pid",
                                        "column_order": 1,
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.processes.*.pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Ppid",
                                        "column_order": 2,
                                        "contains": [
                                            " pid"
                                        ],
                                        "data_path": "action_result.data.*.processes.*.ppid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Process Start Time",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.processes.*.stime",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "UID",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.processes.*.uid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User",
                                        "column_order": 5,
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.processes.*.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_processes",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip_hostname": {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hostname/IP of endpoint",
                                        "key": "ip_hostname",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "targets": "20",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list processes"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_processes_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_processes_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_processes_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_processes_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'ip_hostname': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"list processes\", parameters=parameters, assets=['ssh'], name=\"list_processes_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List the running processes on the EC2 instance using SSH.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "017c68a1-52ca-4e3b-b51f-e9ddda3cf748",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 285,
                        "line_start": 262,
                        "message": "Configuring now",
                        "name": "list processes",
                        "notes": "List the running processes on the EC2 instance using SSH.",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "list_processes_1",
                        "required_params": {
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 408
                    },
                    {
                        "action": "list connections",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                            "local_addr": "",
                            "local_port": "",
                            "remote_addr": "",
                            "remote_port": ""
                        },
                        "angle": 0,
                        "app": "SSH",
                        "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list connections",
                                "actions": [
                                    "put file",
                                    "get file",
                                    "get memory usage",
                                    "get disk usage",
                                    "list processes",
                                    "logoff user",
                                    "terminate process",
                                    "shutdown system",
                                    "reboot system",
                                    "delete firewall rule",
                                    "list firewall rules",
                                    "block ip",
                                    "list connections",
                                    "execute program",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.47",
                                "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                                "asset_name": "ssh",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip_hostname": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                    "local_addr": "",
                                    "local_port": "",
                                    "remote_addr": "",
                                    "remote_port": ""
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.local_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.remote_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.connections.*.cmd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.inode",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local IP",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local Port",
                                        "column_order": 3,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Pid",
                                        "column_order": 1,
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.protocol",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.rec_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote IP",
                                        "column_order": 4,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote Port",
                                        "column_order": 5,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.send_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.connections.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.connections.*.uid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip_hostname": {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hostname/IP to list network connections on",
                                        "key": "ip_hostname",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "local_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local ip to filter on",
                                        "key": "local_addr",
                                        "order": 1,
                                        "required": false
                                    },
                                    "local_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local port to match",
                                        "key": "local_port",
                                        "order": 2,
                                        "required": false
                                    },
                                    "remote_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote ip to filter on",
                                        "key": "remote_addr",
                                        "order": 3,
                                        "required": false
                                    },
                                    "remote_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote port to match",
                                        "key": "remote_port",
                                        "order": 4,
                                        "required": false
                                    }
                                },
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "targets": "20",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list connections"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_connections_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_connections_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_connections_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_connections_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'local_addr': \"\",\n                'local_port': \"\",\n                'ip_hostname': results_item_1[0],\n                'remote_addr': \"\",\n                'remote_port': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"list connections\", parameters=parameters, assets=['ssh'], callback=filter_ip_addresses, name=\"list_connections_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List the open network connections on the EC2 instance using SSH.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1e9f631b-7d19-42bc-a724-2355566ba549",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 84,
                        "line_start": 57,
                        "message": "Configuring now",
                        "name": "list connections",
                        "notes": "List the open network connections on the EC2 instance using SSH.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 660
                        },
                        "previous_function": "",
                        "previous_name": "list_connections_1",
                        "required_params": {
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 409
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_resource_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_resource_artifact() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ],\n        name=\"filter_resource_artifact:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        filter_finding_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_resource_artifact",
                        "description": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 132,
                        "line_start": 115,
                        "name": "filter",
                        "notes": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "filter_resource_artifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 410
                    },
                    {
                        "action": "list security groups",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "group_ids": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                            "group_names": "",
                            "max_results": "",
                            "next_token": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list security groups",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "group_ids": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                    "group_names": "",
                                    "max_results": "",
                                    "next_token": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 group name"
                                        ],
                                        "data_path": "action_result.parameter.group_names",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.max_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.parameter.next_token",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Next Page Token",
                                        "column_order": 4,
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "'2719'"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 09 Apr 2019 05:51:50 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "accept-encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "151cefc2-6f16-4949-b345-2ae3e2d6a02e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "SG for minemeld"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-0050f8ec5ea7b73e0"
                                        ]
                                    },
                                    {
                                        "column_name": "Group Name",
                                        "column_order": 0,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "minemeld-SGMinemeld-1PU2N2REVCWEB"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.FromPort",
                                        "data_type": "numeric",
                                        "example_values": [
                                            22
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpProtocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "tcp"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.CidrIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.Ipv6Ranges.*.CidrIpv6",
                                        "data_type": "string",
                                        "example_values": [
                                            "::/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.Ipv6Ranges.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.ToPort",
                                        "data_type": "numeric",
                                        "example_values": [
                                            22
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.UserIdGroupPairs.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-04c191ec3ad281c4d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.UserIdGroupPairs.*.UserId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.IpProtocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.IpRanges.*.CidrIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.Ipv6Ranges.*.CidrIpv6",
                                        "data_type": "string",
                                        "example_values": [
                                            "::/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.UserIdGroupPairs.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-0c95f4c3e04a5ed2f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.UserIdGroupPairs.*.UserId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "column_name": "Owner",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.SecurityGroups.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Tags.*.Key",
                                        "data_type": "string",
                                        "example_values": [
                                            "aws:cloudformation:stack-id"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Tags.*.Value",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:cloudformation:us-east-1:849257271967:stack/minemeld/766407e0-3b8f-11e9-92b4-128fc503e968"
                                        ]
                                    },
                                    {
                                        "column_name": "VPC ID",
                                        "column_order": 2,
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_security_groups",
                                        "data_type": "numeric",
                                        "example_values": [
                                            37
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num security groups: 37"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters in dictionary format, separated by commas. Example: { 'Name': 'string', 'Values': [ 'string' ]}",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "group_ids": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more security group IDs, separated by commas. Required for security groups in a non-default VPC",
                                        "key": "group_ids",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "group_names": {
                                        "contains": [
                                            "aws ec2 group name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more security group names, separated by commas",
                                        "key": "group_names",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "max_results": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Maximum number of results to return in a single call",
                                        "key": "max_results",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "next_token": {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The token to request the next page of results",
                                        "key": "next_token",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list security groups"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_security_groups_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_security_groups_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_security_groups_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_security_groups_1' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'dry_run': \"\",\n            'filters': \"\",\n            'group_ids': results_item_1[0],\n            'next_token': \"\",\n            'group_names': \"\",\n            'max_results': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(action=\"list security groups\", parameters=parameters, assets=['aws_ec2'], name=\"list_security_groups_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List the security groups that the EC2 instance belongs to. This should show the potentially vulnerable configuration described by the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d6846575-d047-4578-bc8b-a253d3352fa4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 241,
                        "line_end": 230,
                        "line_start": 203,
                        "message": "Configuring now",
                        "name": "list security groups",
                        "notes": "List the security groups that the EC2 instance belongs to. This should show the potentially vulnerable configuration described by the Finding.",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "list_security_groups_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 411
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId",
                            "limit": "",
                            "max_results": "",
                            "next_token": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.2",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "max_results": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Maximum number of results to return in a single call",
                                        "key": "max_results",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "next_token": {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Token to request the next page of results",
                                        "key": "next_token",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe ec2 instance"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_ec2_instance(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_ec2_instance() called')\n\n    # collect data for 'describe_ec2_instance' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId', 'filtered-data:filter_resource_artifact:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'describe_ec2_instance' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': filtered_artifacts_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_artifacts_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=describe_ec2_instance_callback, name=\"describe_ec2_instance\")\n\n    return",
                        "callback_code": "def describe_ec2_instance_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('describe_ec2_instance_callback() called')\n    \n    build_finding_url(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_security_groups_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_firewall_rules_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_processes_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_connections_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    parse_remote_ip_addrs(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_start": 42,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe ec2 instance",
                        "delay": 0,
                        "description": "Gather metadata about the EC2 instance in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 51,
                        "line_end": 54,
                        "line_start": 19,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather metadata about the EC2 instance in the Finding.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "describe_ec2_instance",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 412
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - AWS Security Hub (on poll, add note) [asset name = aws_security_hub] - ingest the Finding which initiates this playbook and enrich it with a note at the end\n - AWS EC2 (describe instance, list security groups) [asset name = aws_ec2] - gather information about the EC2 environment\n - Jira (create ticket) [asset name = jira] - create a Jira ticket to track the task of fixing the problem\n - Slack (send message) [asset name = slack] - send a direct message to the owner of the EC2 instance to notify them that a change is needed\n - SSH (list firewall rules, list processes, list connections) [asset name = ssh] - connect to the EC2 instance and investigate the current activity and configuration of the host-based\nfirewall\n - MaxMind (geolocate ip) [asset name = maxmind] - look up the geographic locations of the remote IP addresses\n - PassiveTotal (ip reputation) [asset name = passivetotal] - look up any known reputation information about the remote IP addresses\n\nDeployment Notes:\n - The SSH actions will only work if the EC2 instance is using any of the commonly used linux distributions.\n - In the block \"build finding url\", a link to the AWS Console is constructed using an undocumented URL format on AWS and using a hard-coded region (us-east-1). The URL format could change at any time and the region may need to be adjusted.\n - The Jira ticket is created with a hard-coded project key set to \"EK\", which should be replaced with the correct project key.\n - The \"send message\" action using Slack relies on the EC2 instance to be tagged with the key \"InstanceOwnerSlack\" and the value set to the Slack username of the person who is responsible for the EC2 instance. This could be replaced with an email address or other communication mechanism.\n - The prompt block should be assigned to the correct user or role. Currently it is assigned to the user \"admin\".\n - The custom function called \"filter ip addresses\" has a hard-coded internal CIDR which ignores local AWS VPC traffic. That CIDR should be changed for the target EC2 environment."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-01-19T21:45:46.339746+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": [],
    "misc": {
        "apps_list": [
            "AWS Security Hub",
            "AWS EC2",
            "Jira",
            "Slack",
            "SSH",
            "MaxMind",
            "PassiveTotal"
        ]
    }
}