{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Risk Notable",
    "coa": {
        "data": {
            "description": "This playbook implements an auto-investigate workflow based on a user-defined risk threshold.",
            "edges": [
                {
                    "id": "port_23_to_port_25",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_32",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_32_to_port_17",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_43",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "id": "port_29_to_port_19",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_43_to_port_23",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_17_to_port_27",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_45_to_port_31",
                    "sourceNode": "45",
                    "sourcePort": "45_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_48_to_port_47",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_49_to_port_50",
                    "sourceNode": "49",
                    "sourcePort": "49_out",
                    "targetNode": "50",
                    "targetPort": "50_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_53_to_port_44",
                    "sourceNode": "53",
                    "sourcePort": "53_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_31_to_port_55",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "55",
                    "targetPort": "55_in"
                },
                {
                    "id": "port_47_to_port_56",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "56",
                    "targetPort": "56_in"
                },
                {
                    "id": "port_55_to_port_1",
                    "sourceNode": "55",
                    "sourcePort": "55_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_46_to_port_1",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_27_to_port_57",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "57",
                    "targetPort": "57_in"
                },
                {
                    "id": "port_57_to_port_29",
                    "sourceNode": "57",
                    "sourcePort": "57_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_19_to_port_58",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "58",
                    "targetPort": "58_in"
                },
                {
                    "id": "port_58_to_port_59",
                    "sourceNode": "58",
                    "sourcePort": "58_out",
                    "targetNode": "59",
                    "targetPort": "59_in"
                },
                {
                    "id": "port_19_to_port_53",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "53",
                    "targetPort": "53_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_61_to_port_60",
                    "sourceNode": "61",
                    "sourcePort": "61_out",
                    "targetNode": "60",
                    "targetPort": "60_in"
                },
                {
                    "id": "port_60_to_port_45",
                    "sourceNode": "60",
                    "sourcePort": "60_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_45_to_port_48",
                    "sourceNode": "45",
                    "sourcePort": "45_out",
                    "targetNode": "48",
                    "targetPort": "48_in"
                },
                {
                    "id": "port_56_to_port_49",
                    "sourceNode": "56",
                    "sourcePort": "56_out",
                    "targetNode": "49",
                    "targetPort": "49_in"
                },
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_59_to_port_61",
                    "sourceNode": "59",
                    "sourcePort": "59_out",
                    "targetNode": "61",
                    "targetPort": "61_in"
                },
                {
                    "id": "port_50_to_port_46",
                    "sourceNode": "50",
                    "sourcePort": "50_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                }
            ],
            "hash": "9c79e8d6ef6935aae52e00e9ea2ba00906caed0c",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 150,
                    "y": -1.2789769243681803e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 280,
                    "y": 3604
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "Risk Notable Import Data",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "start_task",
                                "workbook_list"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "risk_notable_import_data",
                        "id": "17",
                        "inputs": {},
                        "playbookName": "risk_notable_import_data",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "playbook",
                    "x": 130,
                    "y": 968
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "dispatch investigate playbooks",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "start_investigate_task",
                                "risk_notable_import_data"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "dispatch_investigate_playbooks",
                        "id": "19",
                        "inputs": {
                            "artifact_ids_include": {
                                "datapaths": [],
                                "deduplicate": false
                            },
                            "indicator_tags_exclude": {
                                "datapaths": [],
                                "deduplicate": false
                            },
                            "indicator_tags_include": {
                                "datapaths": [],
                                "deduplicate": false
                            },
                            "playbook_repo": {
                                "datapaths": [
                                    "local"
                                ],
                                "deduplicate": false
                            },
                            "playbook_tags": {
                                "datapaths": [
                                    "investigate",
                                    "risk_notable"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "dispatch_input_playbooks",
                        "playbookRepo": 1,
                        "playbookRepoName": "community",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "playbook",
                    "x": 130,
                    "y": 1592
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "risk rule decision",
                            "customNameId": 0,
                            "description": "Only proceeds if an artifact with the label \"risk_rule\" is not present.  ",
                            "join": [],
                            "note": "Only proceeds if an artifact with the label \"risk_rule\" is not present.  Artifacts with the \"risk_rule\" label are imported during the \"Import Data\" Playbook. These artifacts indicate that the \"Import Data\" Playbook has already run and thus this preprocess playbook no longer needs to execute.",
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.label",
                                        "value": "risk_rule"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Playbook Ends",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Playbook Continues",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "risk_rule_decision",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "x": 210,
                    "y": 148
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "add risk investigation workbook",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_add",
                            "repoName": "community"
                        },
                        "functionId": 10,
                        "functionName": "add_risk_investigation_workbook",
                        "id": "23",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_add": {
                                "description": "Add a workbook to a container. Provide a container id and a workbook name or id",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "A phantom container id",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A workbook name or id",
                                        "inputType": "item",
                                        "label": "workbook",
                                        "name": "workbook",
                                        "placeholder": "my_workbook",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Defaults to True. Check to see if workbook already exists in container before adding.",
                                        "inputType": "item",
                                        "label": "check_for_existing_workbook",
                                        "name": "check_for_existing_workbook",
                                        "placeholder": "True or False",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Defaults to True. Sets the added workbook to the current phase.",
                                        "inputType": "item",
                                        "label": "start_workbook",
                                        "name": "start_workbook",
                                        "placeholder": "True or False",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_add",
                                "name": "workbook_add"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_add": {
                                "check_for_existing_workbook": "true",
                                "container": "container:id",
                                "start_workbook": "true",
                                "workbook": "Risk Investigation"
                            }
                        }
                    },
                    "errors": {},
                    "id": "23",
                    "type": "utility",
                    "x": 130,
                    "y": 508
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "start preprocess task",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 11,
                        "functionName": "start_preprocess_task",
                        "id": "25",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": null,
                                "note_title": null,
                                "owner": null,
                                "status": "in_progress",
                                "task_name": "Preprocess"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "type": "utility",
                    "x": 130,
                    "y": 672
                },
                "27": {
                    "data": {
                        "advanced": {
                            "customName": "update preprocess task",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 12,
                        "functionName": "update_preprocess_task",
                        "id": "27",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": "risk_notable_import_data:playbook_output:note_content",
                                "note_title": "risk_notable_import_data:playbook_output:note_title",
                                "owner": null,
                                "status": "",
                                "task_name": "Preprocess"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "type": "utility",
                    "x": 130,
                    "y": 1132
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "start investigate task",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 14,
                        "functionName": "start_investigate_task",
                        "id": "29",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": null,
                                "note_title": null,
                                "owner": null,
                                "status": "in_progress",
                                "task_name": "Investigate"
                            }
                        }
                    },
                    "errors": {},
                    "id": "29",
                    "type": "utility",
                    "x": 130,
                    "y": 1444
                },
                "31": {
                    "data": {
                        "advanced": {
                            "customName": "update investigate task",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 15,
                        "functionName": "update_investigate_task",
                        "id": "31",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs.note_content",
                                "note_title": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs.note_title",
                                "owner": null,
                                "status": null,
                                "task_name": "Investigate"
                            }
                        }
                    },
                    "errors": {},
                    "id": "31",
                    "type": "utility",
                    "userCode": "\n",
                    "x": 90,
                    "y": 3292
                },
                "32": {
                    "data": {
                        "advanced": {
                            "customName": "Risk Notable Preprocess",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "start_preprocess_task",
                                "workbook_list"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "risk_notable_preprocess",
                        "id": "32",
                        "inputs": {},
                        "playbookName": "risk_notable_preprocess",
                        "playbookRepo": 1,
                        "playbookRepoName": "community",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "playbook",
                    "x": 130,
                    "y": 820
                },
                "43": {
                    "data": {
                        "advanced": {
                            "customName": "event id filter",
                            "customNameId": 0,
                            "description": "Isolate the artifact with a Notable event_id",
                            "join": [],
                            "note": "Isolate the artifact with a Notable event_id",
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.event_id",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "event id",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "event_id_filter",
                        "id": "43",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "filter",
                    "x": 190,
                    "y": 328
                },
                "44": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "update notable",
                            "customNameId": 0,
                            "description": "Update Splunk with any enrichment from the previous block",
                            "join": [],
                            "notRequiredJoins": [
                                "risk_notable_enrich",
                                "update_investigate_task"
                            ],
                            "note": "Update Splunk with any enrichment from the previous block",
                            "scope": "all"
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_notable",
                        "id": "44",
                        "parameters": {
                            "comment": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs",
                            "event_ids": "filtered-data:event_id_filter:condition_1:artifact:*.cef.event_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "event_ids"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "action",
                    "x": 0,
                    "y": 1937
                },
                "45": {
                    "data": {
                        "advanced": {
                            "customName": "risk threshold decision",
                            "customNameId": 0,
                            "description": "Determine if the Notable event risk score exceeds the provided risk threshold",
                            "join": [],
                            "note": "Determine if the Notable event risk score exceeds the provided risk threshold"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">=",
                                        "param": "sum_risk_score:custom_function:total_score",
                                        "value": "250"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "high_risk_score",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "low_risk_score",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "risk_threshold_decision",
                        "id": "45",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "45",
                    "type": "decision",
                    "x": 340,
                    "y": 2474
                },
                "46": {
                    "data": {
                        "advanced": {
                            "customName": "Risk Notable Auto Containment",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "risk_notable_auto_containment",
                        "id": "46",
                        "playbookName": "risk_notable_auto_containment",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "automation",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "46",
                    "type": "playbook",
                    "x": 430,
                    "y": 3440
                },
                "47": {
                    "data": {
                        "advanced": {
                            "customName": "close investigate",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "close_investigate",
                        "id": "47",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs.note_content",
                                "note_title": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs.note_title",
                                "owner": null,
                                "status": "complete",
                                "task_name": "Investigate"
                            }
                        }
                    },
                    "errors": {},
                    "id": "47",
                    "type": "utility",
                    "userCode": "\n",
                    "x": 430,
                    "y": 2802
                },
                "48": {
                    "data": {
                        "advanced": {
                            "customName": "close preprocess",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "close_preprocess",
                        "id": "48",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": null,
                                "note_title": null,
                                "owner": null,
                                "status": "complete",
                                "task_name": "Preprocess"
                            }
                        }
                    },
                    "errors": {},
                    "id": "48",
                    "type": "utility",
                    "x": 430,
                    "y": 2654
                },
                "49": {
                    "data": {
                        "advanced": {
                            "customName": "render verdict note",
                            "customNameId": 0,
                            "description": "Format a note to explain why auto-containment was invoked.",
                            "join": [],
                            "note": "Format a note to explain why auto-containment was invoked.",
                            "scope": "all"
                        },
                        "functionId": 1,
                        "functionName": "render_verdict_note",
                        "id": "49",
                        "parameters": [
                            "sum_risk_score:custom_function:total_score",
                            "filtered-data:risk_rule_filter:condition_1:artifact:*.cef._total_risk_score",
                            "filtered-data:risk_rule_filter:condition_1:artifact:*.name",
                            "filtered-data:risk_rule_filter:condition_1:artifact:*.description"
                        ],
                        "template": "## SOAR has invoked Auto-Containment\n## The risk rule artifacts have a deduplicated *{0}* points of risk which exceeds the user-defined critical threshold of *250* points\n\n## These detections contributed to auto-containment.\n| Score | Detection Source | Detection Message |\n| --- | --- | --- |\n%%\n| {1} | {2} | ```{3}```|\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "49",
                    "type": "format",
                    "x": 430,
                    "y": 3114
                },
                "50": {
                    "data": {
                        "advanced": {
                            "customName": "close render verdict",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "workbook_task_update",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "close_render_verdict",
                        "id": "50",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "workbook_task_update": {
                                "description": "Update a workbook task by task name",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Name of a workbook task (Required)",
                                        "inputType": "item",
                                        "label": "task_name",
                                        "name": "task_name",
                                        "placeholder": "my_task",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Note title goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "My Title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Body of note goes here (Optional)",
                                        "inputType": "item",
                                        "label": "note_content",
                                        "name": "note_content",
                                        "placeholder": "My notes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "One of: incomplete, in_progress, complete (Optional)",
                                        "inputType": "item",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "in_progress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Assigns task to provided owner. Accepts keyword 'current\" to assign task to currently running playbook user. (Optional)",
                                        "inputType": "item",
                                        "label": "owner",
                                        "name": "owner",
                                        "placeholder": "username",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "ID of Phantom Container (Required)",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "workbook_task_update",
                                "name": "workbook_task_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "workbook_task_update": {
                                "container": "container:id",
                                "note_content": "render_verdict_note:formatted_data",
                                "note_title": "[Auto-Generated] Containment Required",
                                "owner": null,
                                "status": "complete",
                                "task_name": "Render Verdict"
                            }
                        }
                    },
                    "errors": {},
                    "id": "50",
                    "type": "utility",
                    "x": 430,
                    "y": 3292
                },
                "53": {
                    "data": {
                        "advanced": {
                            "customName": "enrichment output decision",
                            "customNameId": 0,
                            "description": "Determine if any playbooks produced a note for enrichment",
                            "join": [],
                            "note": "Determine if any playbooks produced a note for enrichment"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "dispatch_investigate_playbooks:playbook_output:sub_playbook_outputs.note_content",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "note exists",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "enrichment_output_decision",
                        "id": "53",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "53",
                    "type": "decision",
                    "x": 80,
                    "y": 1756
                },
                "55": {
                    "data": {
                        "advanced": {
                            "customName": "mark update investigate evidence",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "mark_evidence",
                            "repoName": "community"
                        },
                        "functionId": 5,
                        "functionName": "mark_update_investigate_evidence",
                        "id": "55",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "mark_evidence": {
                                "description": "Mark an object as Evidence in a container",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container ID or Container Object",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The object to mark as evidence. This could be a vault_id, artifact_id, note_id, container_id, or action_run_id. If the previous playbook block is an action then \"keyword_argument:results\" can be used for the action_run_id with the content_type \"action_run_id\". Vault_id can be an ID or a vault hash.",
                                        "inputType": "item",
                                        "label": "input_object",
                                        "name": "input_object",
                                        "placeholder": "artifact id, note id, vault_id, etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The content type of the object to add as evidence which must be one of the following:\n            \n            vault_id\n            artifact_id\n            container_id\n            note_id\n            action_run_id",
                                        "inputType": "item",
                                        "label": "content_type",
                                        "name": "content_type",
                                        "placeholder": "See help text for supported types",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "mark_evidence",
                                "name": "mark_evidence"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "mark_evidence": {
                                "container": "container:id",
                                "content_type": "note_id",
                                "input_object": "update_investigate_task:custom_function_result.data.note_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "55",
                    "type": "utility",
                    "x": 90,
                    "y": 3440
                },
                "56": {
                    "data": {
                        "advanced": {
                            "customName": "mark close investigate evidence",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "mark_evidence",
                            "repoName": "community"
                        },
                        "functionId": 6,
                        "functionName": "mark_close_investigate_evidence",
                        "id": "56",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "mark_evidence": {
                                "description": "Mark an object as Evidence in a container",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container ID or Container Object",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The object to mark as evidence. This could be a vault_id, artifact_id, note_id, container_id, or action_run_id. If the previous playbook block is an action then \"keyword_argument:results\" can be used for the action_run_id with the content_type \"action_run_id\". Vault_id can be an ID or a vault hash.",
                                        "inputType": "item",
                                        "label": "input_object",
                                        "name": "input_object",
                                        "placeholder": "artifact id, note id, vault_id, etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The content type of the object to add as evidence which must be one of the following:\n            \n            vault_id\n            artifact_id\n            container_id\n            note_id\n            action_run_id",
                                        "inputType": "item",
                                        "label": "content_type",
                                        "name": "content_type",
                                        "placeholder": "See help text for supported types",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "mark_evidence",
                                "name": "mark_evidence"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "mark_evidence": {
                                "container": "container:id",
                                "content_type": "note_id",
                                "input_object": "close_investigate:custom_function_result.data.note_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "56",
                    "type": "utility",
                    "x": 430,
                    "y": 2950
                },
                "57": {
                    "data": {
                        "advanced": {
                            "customName": "mark preprocess evidence",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "mark_evidence",
                            "repoName": "community"
                        },
                        "functionId": 7,
                        "functionName": "mark_preprocess_evidence",
                        "id": "57",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "mark_evidence": {
                                "description": "Mark an object as Evidence in a container",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container ID or Container Object",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The object to mark as evidence. This could be a vault_id, artifact_id, note_id, container_id, or action_run_id. If the previous playbook block is an action then \"keyword_argument:results\" can be used for the action_run_id with the content_type \"action_run_id\". Vault_id can be an ID or a vault hash.",
                                        "inputType": "item",
                                        "label": "input_object",
                                        "name": "input_object",
                                        "placeholder": "artifact id, note id, vault_id, etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The content type of the object to add as evidence which must be one of the following:\n            \n            vault_id\n            artifact_id\n            container_id\n            note_id\n            action_run_id",
                                        "inputType": "item",
                                        "label": "content_type",
                                        "name": "content_type",
                                        "placeholder": "See help text for supported types",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "mark_evidence",
                                "name": "mark_evidence"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "mark_evidence": {
                                "container": "container:id",
                                "content_type": "note_id",
                                "input_object": "update_preprocess_task:custom_function_result.data.note_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "57",
                    "type": "utility",
                    "x": 130,
                    "y": 1280
                },
                "58": {
                    "data": {
                        "advanced": {
                            "customName": "Risk Notable Auto Merge",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "risk_notable_auto_merge",
                        "id": "58",
                        "playbookName": "risk_notable_auto_merge",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "58",
                    "type": "playbook",
                    "x": 260,
                    "y": 1772
                },
                "59": {
                    "data": {
                        "advanced": {
                            "customName": "merge result decision",
                            "customNameId": 0,
                            "description": "Determine if Auto Merge indicates that this event was merged into an existing investigation.",
                            "join": [],
                            "note": "Determine if Auto Merge indicates that this event was merged into an existing investigation."
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "risk_notable_auto_merge:playbook_output:merge_result",
                                        "value": "merged into case"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "new investigation",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "merge_result_decision",
                        "id": "59",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "59",
                    "type": "decision",
                    "x": 340,
                    "y": 1936
                },
                "60": {
                    "data": {
                        "advanced": {
                            "customName": "sum risk score",
                            "customNameId": 0,
                            "description": "Calculate a risk score based on all of the unique risk events",
                            "join": [],
                            "note": "Calculate a risk score based on all of the unique risk events",
                            "scope": "all"
                        },
                        "functionId": 1,
                        "functionName": "sum_risk_score",
                        "id": "60",
                        "inputParameters": [
                            "filtered-data:risk_rule_filter:condition_1:artifact:*.cef._total_risk_score"
                        ],
                        "outputVariables": [
                            "total_score"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "60",
                    "type": "code",
                    "userCode": "\n    sum_risk_score__total_score = 0\n    for score in filtered_artifact_0__cef__total_risk_score:\n        sum_risk_score__total_score += float(score)\n\n",
                    "x": 260,
                    "y": 2296
                },
                "61": {
                    "data": {
                        "advanced": {
                            "customName": "risk rule filter",
                            "customNameId": 0,
                            "description": "Get all risk rule artifacts",
                            "join": [],
                            "note": "Get all risk rule artifacts",
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.label",
                                        "value": "risk_rule"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "risk_rule_artifacts",
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "risk_rule_filter",
                        "id": "61",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "61",
                    "type": "filter",
                    "x": 320,
                    "y": 2116
                }
            },
            "notes": "- Change \"risk_threshold_decision\" to the desired risk threshold and change \"render_verdict_note\" to reflect that same risk threshold\n\n- For detailed implementation see https://docs.splunk.com/Documentation/ESSOC/latest/user/Useplaybookpack"
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2022-06-08T21:20:48.087556+00:00",
    "draft_mode": false,
    "labels": [
        "risk_notable"
    ],
    "tags": []
}