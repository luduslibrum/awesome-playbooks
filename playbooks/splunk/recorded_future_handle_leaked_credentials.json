{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "from random import randint\nfrom random import shuffle\n",
            "description": "This playbook responds to Recorded Future monitoring of leaked credentials exposed on the internet. The accounts are deduplicated, verified internally, investigated, and passed on to an account reset playbook for further action.",
            "hash": "f75dbfc81a69fc5cdbc51396d956ba3f7f0e8dff",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "799f4aaa-4620-40cd-88c1-9180f6f9eb02",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "882c0823-0d84-4ce1-94f8-56c4e1eb6dd0",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "82b9ce6b-62fd-4d71-9d06-dfc1c06e0346",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 63
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "942bb003-35ac-4ec4-85dc-8ef7002b4fe6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7c58ddc9-3d0e-460e-8d17-94e64f6ca078",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "882c0823-0d84-4ce1-94f8-56c4e1eb6dd0",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 131
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "rf get rule data, get affected ad users",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b5d7590f-bd95-42fe-85ee-5f34439919e9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 280,
                        "line_start": 267,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 11,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": -40
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 373
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d65b16b1-6510-4ef7-9f81-a9bb368f15b4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "92327a99-d27c-4024-bb9f-e167fa303bf8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "462279ed-390d-4ed6-b6d5-5acc68fd4484",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 492
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c26b738d-f318-4a49-8003-7ec5d75f75a6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b51cab23-6ed9-41d5-b8ed-ca8298d07c2b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "92327a99-d27c-4024-bb9f-e167fa303bf8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 495
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8ac22426-41db-4fa1-975a-7ce76a7504d7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "76e0d320-d6d3-40ee-822a-cdf591baa91c",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "62e5fa3d-5329-495c-8e08-5c3314b8144a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 499
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5fd3f46b-05b6-41ae-8c8f-418efbfcd230",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "62e5fa3d-5329-495c-8e08-5c3314b8144a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b5d7590f-bd95-42fe-85ee-5f34439919e9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 501
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a2f7e649-91c1-462d-b41f-da3416ec2d5a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "462279ed-390d-4ed6-b6d5-5acc68fd4484",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5481d3d4-8748-4fc9-a999-79557086d266",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 699
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b952b658-3a96-4e3e-9f81-02697db429d0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5481d3d4-8748-4fc9-a999-79557086d266",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b5d7590f-bd95-42fe-85ee-5f34439919e9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 703
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d3d555f3-7bfb-47ec-9ee2-f6a6e1b698fc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "82b9ce6b-62fd-4d71-9d06-dfc1c06e0346",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f14375bf-66d5-45b8-ad82-f6756f42af2a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 748
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3644184-6289-4f9f-bd78-65ec7e05dee3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f14375bf-66d5-45b8-ad82-f6756f42af2a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b51cab23-6ed9-41d5-b8ed-ca8298d07c2b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 749
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9315514c-69de-463c-8691-6a685e15f450",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f14375bf-66d5-45b8-ad82-f6756f42af2a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "76e0d320-d6d3-40ee-822a-cdf591baa91c",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 750
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "dedup accounts"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def dedup_accounts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('dedup_accounts() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.name', 'rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.type'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    dedup_accounts__dedup_email = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # NOTE: Dedups the entities of type EmailAddress for downstream usage.\n    dedup_accounts__dedup_email = []\n    if len(results_item_1_0) == len(results_item_1_1):\n        for i in range(len(results_item_1_0)):\n            if results_item_1_1[i] == \"EmailAddress\":\n                dedup_accounts__dedup_email.append(results_item_1_0[i])\n    else:\n        phantom.debug(\"[DEBUG] Inconsistent Lengths.\")\n    \n    dedup_accounts__dedup_email = list(set(dedup_accounts__dedup_email))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='dedup_accounts:dedup_email', value=json.dumps(dedup_accounts__dedup_email))\n    convert_to_list(container=container)\n    format_victims_list(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "rf get rule data",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def dedup_accounts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('dedup_accounts() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.name', 'rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.type'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    dedup_accounts__dedup_email = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # NOTE: Dedups the entities of type EmailAddress for downstream usage.\n    dedup_accounts__dedup_email = []\n    if len(results_item_1_0) == len(results_item_1_1):\n        for i in range(len(results_item_1_0)):\n            if results_item_1_1[i] == \"EmailAddress\":\n                dedup_accounts__dedup_email.append(results_item_1_0[i])\n    else:\n        phantom.debug(\"[DEBUG] Inconsistent Lengths.\")\n    \n    dedup_accounts__dedup_email = list(set(dedup_accounts__dedup_email))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='dedup_accounts:dedup_email', value=json.dumps(dedup_accounts__dedup_email))\n    convert_to_list(container=container)\n    format_victims_list(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "dedup accounts",
                        "description": "Deduplicates any accounts in the list provided by Recorded Future",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f14375bf-66d5-45b8-ad82-f6756f42af2a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 193,
                        "line_start": 159,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Deduplicates any accounts in the list provided by Recorded Future",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "dedup_email"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.name"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "rf_get_rule_data:action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "dedup_accounts",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # NOTE: Dedups the entities of type EmailAddress for downstream usage.\n    dedup_accounts__dedup_email = []\n    if len(results_item_1_0) == len(results_item_1_1):\n        for i in range(len(results_item_1_0)):\n            if results_item_1_1[i] == \"EmailAddress\":\n                dedup_accounts__dedup_email.append(results_item_1_0[i])\n    else:\n        phantom.debug(\"[DEBUG] Inconsistent Lengths.\")\n    \n    dedup_accounts__dedup_email = list(set(dedup_accounts__dedup_email))\n",
                        "warn": false,
                        "z": 788
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format victims list"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_victims_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_victims_list() called')\n    \n    template = \"\"\"Recorded Future is alerting on probable leaked credentials. This contains the complete list.\n<p>\nAlert: \n{0}\n</p>\n<p>\nMore information: \n {1}\n</p>\n<p>\nLeaked Email addresses:\n%%\n<br>address: {2}\n%%\n</p>\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"rf_get_rule_data:action_result.data.*.alerts.*.alert.content.title\",\n        \"rf_get_rule_data:action_result.data.*.alerts.*.alert.content.url\",\n        \"dedup_accounts:custom_function:dedup_email\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_victims_list\")\n\n    add_note_5(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "rf get rule data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format victims list",
                        "description": "Formats the alert data to a nice format for adding a note",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "76e0d320-d6d3-40ee-822a-cdf591baa91c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 61,
                        "line_start": 29,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Formats the alert data to a nice format for adding a note",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "rf_get_rule_data:action_result.data.*.alerts.*.alert.content.title"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "rf_get_rule_data:action_result.data.*.alerts.*.alert.content.url"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "dedup_accounts:custom_function:dedup_email"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": -60
                        },
                        "previous_function": "",
                        "previous_name": "format_victims_list",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Recorded Future is alerting on probable leaked credentials. This contains the complete list.\n<p>\nAlert: \n{0}\n</p>\n<p>\nMore information: \n {1}\n</p>\n<p>\nLeaked Email addresses:\n%%\n<br>address: {2}\n%%\n</p>",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 789
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "convert to list"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def convert_to_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('convert_to_list() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"dedup_accounts:custom_function:dedup_email\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"convert_to_list\")\n\n    get_affected_ad_users(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "rf get rule data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "convert to list",
                        "description": "Converts the custom code block to an iterable list",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b51cab23-6ed9-41d5-b8ed-ca8298d07c2b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 214,
                        "line_start": 196,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Converts the custom code block to an iterable list",
                        "number": 5,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "dedup_accounts:custom_function:dedup_email"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "convert_to_list",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 790
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def add_note_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_5() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_victims_list')\n\n    note_title = \"add rf complete list note\"\n    note_content = formatted_data_1\n    note_format = \"html\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_victims_list:formatted_data",
                                "addNoteNoteFormat": "html",
                                "addNoteTitle": "add rf complete list note",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "rf get rule data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Adds a note to the container with the full list provided by Recorded Future as a reference",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "62e5fa3d-5329-495c-8e08-5c3314b8144a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 229,
                        "line_start": 217,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Adds a note to the container with the full list provided by Recorded Future as a reference",
                        "number": 5,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": -60
                        },
                        "previous_function": "",
                        "previous_name": "add_note_5",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 793
                    },
                    {
                        "action": "alert rule lookup",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "rule_name": "Leaked Credential Monitoring"
                        },
                        "angle": 0,
                        "app": "Recorded Future",
                        "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "approver": "",
                        "assets": [
                            {
                                "action": "alert rule lookup",
                                "actions": [
                                    "ip reputation",
                                    "ip intelligence",
                                    "domain reputation",
                                    "domain intelligence",
                                    "file reputation",
                                    "file intelligence",
                                    "vulnerability reputation",
                                    "vulnerability intelligence",
                                    "url reputation",
                                    "url intelligence",
                                    "alert rule lookup",
                                    "alert data lookup",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Recorded Future",
                                "app_version": "1.2.0",
                                "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                                "asset_name": "recorded_future",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "rule_name": "Leaked Credential Monitoring"
                                },
                                "has_app": true,
                                "id": 14,
                                "loaded": false,
                                "missing": false,
                                "name": "recorded_future",
                                "output": [
                                    {
                                        "contains": [
                                            "recordedfuture result status"
                                        ],
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule name"
                                        ],
                                        "data_path": "action_result.parameter.rule_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Rule ID",
                                        "column_order": 0,
                                        "contains": [
                                            "recordedfuture alert rule id"
                                        ],
                                        "data_path": "action_result.data.*.rule.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Rule Name",
                                        "column_order": 1,
                                        "contains": [
                                            "recordedfuture alert rule title"
                                        ],
                                        "data_path": "action_result.data.*.rule.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alerts number of rules"
                                        ],
                                        "data_path": "action_result.summary.returned_number_of_rules",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alerts rule ids"
                                        ],
                                        "data_path": "action_result.summary.rule_id_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture rules count total"
                                        ],
                                        "data_path": "action_result.summary.total_number_of_rules",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture result message"
                                        ],
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects"
                                        ],
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects successful"
                                        ],
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "rule_name": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Alert rule name",
                                        "key": "rule_name",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Recorded Future App for Phantom",
                                "product_vendor": "Recorded Future, Inc",
                                "targets": "14",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "rf get rule id by name"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def rf_get_rule_id_by_name(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('rf_get_rule_id_by_name() called')\n\n    # collect data for 'rf_get_rule_id_by_name' call\n\n    parameters = []\n    \n    # build parameters list for 'rf_get_rule_id_by_name' call\n    parameters.append({\n        'rule_name': \"Leaked Credential Monitoring\",\n    })\n\n    phantom.act(action=\"alert rule lookup\", parameters=parameters, assets=['recorded_future'], callback=rf_get_rule_data, name=\"rf_get_rule_id_by_name\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "rf get rule id by name",
                        "delay": 0,
                        "description": "Uses the name of a Recorded Future Alert Rule to fetch the rule ID",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "882c0823-0d84-4ce1-94f8-56c4e1eb6dd0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 107,
                        "line_start": 91,
                        "message": "Configuring now",
                        "name": "alert rule lookup",
                        "notes": "Uses the name of a Recorded Future Alert Rule to fetch the rule ID",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 60,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "rf_get_rule_id_by_name",
                        "required_params": {
                            "rule_name": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 798
                    },
                    {
                        "action": "alert data lookup",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "rule_id": "rf_get_rule_id_by_name:action_result.data.*.rule.id",
                            "timeframe": "-24h to now"
                        },
                        "angle": 0,
                        "app": "Recorded Future",
                        "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "approver": "",
                        "assets": [
                            {
                                "action": "alert data lookup",
                                "actions": [
                                    "ip reputation",
                                    "ip intelligence",
                                    "domain reputation",
                                    "domain intelligence",
                                    "file reputation",
                                    "file intelligence",
                                    "vulnerability reputation",
                                    "vulnerability intelligence",
                                    "url reputation",
                                    "url intelligence",
                                    "alert rule lookup",
                                    "alert data lookup",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Recorded Future",
                                "app_version": "2.0.0",
                                "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                                "asset_name": "recorded-future",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "rule_id": "rf_get_rule_id_by_name:action_result.data.*.rule.id",
                                    "timeframe": "-24h to now"
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "recorded_future",
                                "output": [
                                    {
                                        "contains": [
                                            "recordedfuture result status"
                                        ],
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule id"
                                        ],
                                        "data_path": "action_result.parameter.rule_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert timerange"
                                        ],
                                        "data_path": "action_result.parameter.timeframe",
                                        "data_type": "string",
                                        "example_values": [
                                            "anytime",
                                            "-24h to now"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert title"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.alertTitle",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert url"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.alertUrl",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content count documents"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.counts.documents",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content count entities"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.counts.entities",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content count references"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.counts.references",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities references id"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email",
                                            "recordedfuture alert content entities references name"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities references type"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.entities.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities references fragment"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.fragment",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities references language"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.references.*.language",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities source id"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.source.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities source name"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.source.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities source type"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.source.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities type"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities url"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.documents.*.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities entity"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.entities.*.entity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content id"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content review assignee"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.review.assignee",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content review note"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.review.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content review note author"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.review.noteAuthor",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content review note data"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.review.noteDate",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content review note status"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.review.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content rule id"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.rule.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content rule name"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.rule.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content rule url"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.rule.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content rule title"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content triggered"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.triggered",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content type"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content url"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.content.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert content entities document"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.entities.Document",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email",
                                            "recordedfuture alert content entities email address"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.entities.EmailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert triggered"
                                        ],
                                        "data_path": "action_result.data.*.alerts.*.alert.triggered",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule id"
                                        ],
                                        "data_path": "action_result.data.*.rule.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule id"
                                        ],
                                        "data_path": "action_result.data.*.rule.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule url"
                                        ],
                                        "data_path": "action_result.data.*.rule.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert number of alerts"
                                        ],
                                        "data_path": "action_result.summary.returned_number_of_alerts",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert rule id"
                                        ],
                                        "data_path": "action_result.summary.rule_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture rule name"
                                        ],
                                        "data_path": "action_result.summary.rule_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture alert number of alerts"
                                        ],
                                        "data_path": "action_result.summary.total_number_of_alerts",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture result message"
                                        ],
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects"
                                        ],
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects successful"
                                        ],
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "rule_id": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Alert Rule ID to look up alert data for",
                                        "key": "rule_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    },
                                    "timeframe": {
                                        "data_type": "string",
                                        "default": "-24h to now",
                                        "description": "Time range for when rules were triggered",
                                        "key": "timeframe",
                                        "order": 0,
                                        "primary": false,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Recorded Future App for Phantom",
                                "product_vendor": "Recorded Future, Inc",
                                "targets": "7",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "rf get rule data"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def rf_get_rule_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('rf_get_rule_data() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'rf_get_rule_data' call\n    results_data_1 = phantom.collect2(container=container, datapath=['rf_get_rule_id_by_name:action_result.data.*.rule.id', 'rf_get_rule_id_by_name:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'rf_get_rule_data' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'rule_id': results_item_1[0],\n                'timeframe': \"-24h to now\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"alert data lookup\", parameters=parameters, assets=['recorded_future'], callback=dedup_accounts, name=\"rf_get_rule_data\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 75,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "rf get rule id by name",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "rf get rule data",
                        "delay": "0",
                        "description": "Query for alerts from the last 24 hours using the returned alert rule ID",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "82b9ce6b-62fd-4d71-9d06-dfc1c06e0346",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 88,
                        "line_start": 64,
                        "message": "Configuring now",
                        "name": "alert data lookup",
                        "notes": "Query for alerts from the last 24 hours using the returned alert rule ID",
                        "number": 3,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 300,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "rf_get_rule_data",
                        "required_params": {
                            "rule_id": true,
                            "timeframe": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 799
                    },
                    {
                        "action": "get user attributes",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "all_users": "False",
                            "attribute": "mail",
                            "fields": "sAMAccountName,pwdLastSet,userAccountControl,mail",
                            "object_class": "container",
                            "object_name": "Users",
                            "username": "convert_to_list:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "LDAP",
                        "appid": "84110F27-6602-4DC8-A6F2-0311B1720BF8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get user attributes",
                                "active": true,
                                "app_name": "LDAP",
                                "app_version": "1.2.40",
                                "appid": "84110F27-6602-4DC8-A6F2-0311B1720BF8",
                                "config_type": "app",
                                "fields": {
                                    "attribute": "mail",
                                    "fields": "sAMAccountName,pwdLastSet,userAccountControl,mail",
                                    "username": "convert_to_list:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 133,
                                "loaded": false,
                                "missing": false,
                                "name": "LDAP",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.attribute",
                                        "data_type": "string",
                                        "example_values": [
                                            "Displayname"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.fields",
                                        "data_type": "string",
                                        "example_values": [
                                            "samaccountName"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name",
                                            "ldap distinguished name"
                                        ],
                                        "data_path": "action_result.parameter.username",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Administrator",
                                            "test_user3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.accountexpires",
                                        "data_type": "string",
                                        "example_values": [
                                            "9223370036854775807"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.badpasswordtime",
                                        "data_type": "string",
                                        "example_values": [
                                            "131847005589525500"
                                        ]
                                    },
                                    {
                                        "column_name": "Bad Pwd Count",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.badpwdcount",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.cn",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test User3"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 13,
                                        "data_path": "action_result.data.*.co",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.codepage",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.company",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.countrycode",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.department",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Display Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.displayname",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test User3"
                                        ]
                                    },
                                    {
                                        "column_name": "Distinguished Name",
                                        "column_order": 1,
                                        "contains": [
                                            "ldap distinguished name"
                                        ],
                                        "data_path": "action_result.data.*.distinguishedname",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=Test User3,CN=Users,DC=corp,DC=contoso,DC=com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.dscorepropagationdata",
                                        "data_type": "string",
                                        "example_values": [
                                            "20181003111127.0Z;20170110001231.0Z;16010001000416.0Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.givenname",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.instancetype",
                                        "data_type": "string",
                                        "example_values": [
                                            "4"
                                        ]
                                    },
                                    {
                                        "column_name": "City",
                                        "column_order": 10,
                                        "data_path": "action_result.data.*.l",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Last Logoff",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.lastlogoff",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "column_name": "Last Logon",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.lastlogon",
                                        "data_type": "string",
                                        "example_values": [
                                            "131847000011239275",
                                            "131847680040779871"
                                        ]
                                    },
                                    {
                                        "column_name": "Logon Count",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.logoncount",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "column_name": "E-Mail",
                                        "column_order": 7,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.mail",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.manager",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Member Of",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.memberof",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=TestUsers,DC=corp,DC=contoso,DC=com;CN=Remote Desktop Users,CN=Builtin,DC=corp,DC=contoso,DC=com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test User3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.objectcategory",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=Person,CN=Schema,CN=Configuration,DC=corp,DC=contoso,DC=com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.objectclass",
                                        "data_type": "string",
                                        "example_values": [
                                            "top;person;organizationalPerson;user"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.objectguid",
                                        "data_type": "string",
                                        "example_values": [
                                            "13 ab 7f de 08 b5 32 44 9d e9 07 65 52 5a e4 49"
                                        ]
                                    },
                                    {
                                        "column_name": "Object SID",
                                        "column_order": 18,
                                        "data_path": "action_result.data.*.objectsid",
                                        "data_type": "string",
                                        "example_values": [
                                            "S-1-5-00-3790544232-372029393-2474287633-1114"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.postOfficeBox",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Zip",
                                        "column_order": 12,
                                        "data_path": "action_result.data.*.postalcode",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Primary Group Id",
                                        "column_order": 14,
                                        "data_path": "action_result.data.*.primarygroupid",
                                        "data_type": "string",
                                        "example_values": [
                                            "513"
                                        ]
                                    },
                                    {
                                        "column_name": "Pwd Last Set",
                                        "column_order": 15,
                                        "data_path": "action_result.data.*.pwdlastset",
                                        "data_type": "string",
                                        "example_values": [
                                            "131800831957980568",
                                            "131800682325338799"
                                        ]
                                    },
                                    {
                                        "column_name": "Username",
                                        "column_order": 0,
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.samaccountname",
                                        "data_type": "string",
                                        "example_values": [
                                            "Administrator",
                                            "test_user3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.samaccounttype",
                                        "data_type": "string",
                                        "example_values": [
                                            "805006368"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sn",
                                        "data_type": "string",
                                        "example_values": [
                                            "User3"
                                        ]
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 11,
                                        "data_path": "action_result.data.*.st",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Street",
                                        "column_order": 9,
                                        "data_path": "action_result.data.*.streetaddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.telephoneNumber",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Title",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User Account Control",
                                        "column_order": 16,
                                        "data_path": "action_result.data.*.useraccountcontrol",
                                        "data_type": "string",
                                        "example_values": [
                                            "60000",
                                            "66001"
                                        ]
                                    },
                                    {
                                        "column_name": "User Principal Name",
                                        "column_order": 17,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.userprincipalname",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_user3@corp.contoso.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.usnchanged",
                                        "data_type": "string",
                                        "example_values": [
                                            "1600815"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.usncreated",
                                        "data_type": "string",
                                        "example_values": [
                                            "16003"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.whenchanged",
                                        "data_type": "string",
                                        "example_values": [
                                            "20180123123940.0Z"
                                        ]
                                    },
                                    {
                                        "column_name": "When Created",
                                        "column_order": 19,
                                        "data_path": "action_result.data.*.whencreated",
                                        "data_type": "string",
                                        "example_values": [
                                            "20141001130729.0Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.bad_password_count",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.last_logon",
                                        "data_type": "string",
                                        "example_values": [
                                            "10/01/2018 07:51:41 AM UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.password_last_set",
                                        "data_type": "string",
                                        "example_values": [
                                            "10/01/2018 11:59:55 AM UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "Disabled",
                                            "Enabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "State: Disabled, Bad password count: 0, Last logon: 10/23/2018 07:51:41 AM UTC, Password last set: 10/22/2018 11:59:55 AM UTC",
                                            "State: Enabled, Bad password count: 0, Last logon: 10/23/2018 11:43:04 AM UTC, Password last set: 10/23/2018 11:37:12 AM UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attribute": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Attribute name to match",
                                        "key": "attribute",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "fields": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Get fields (comma separated)",
                                        "key": "fields",
                                        "order": 2,
                                        "required": false
                                    },
                                    "username": {
                                        "contains": [
                                            "user name",
                                            "ldap distinguished name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Username or Attribute value to match",
                                        "key": "username",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Windows Server",
                                "product_vendor": "Microsoft",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get affected ad users"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_affected_ad_users(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_affected_ad_users() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_affected_ad_users' call\n    formatted_data_1 = phantom.get_format_data(name='convert_to_list__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'get_affected_ad_users' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'fields': \"sAMAccountName,pwdLastSet,userAccountControl,mail\",\n            'username': formatted_part_1,\n            'attribute': \"mail\",\n        })\n\n    phantom.act(action=\"get user attributes\", parameters=parameters, app={ \"name\": 'LDAP' }, callback=get_active_ad_users, name=\"get_affected_ad_users\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "rf get rule data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get affected ad users",
                        "delay": "0",
                        "description": "Finds directory users with matching mail attributes",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "92327a99-d27c-4024-bb9f-e167fa303bf8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 132,
                        "line_start": 110,
                        "message": "Configuring now",
                        "name": "get user attributes",
                        "notes": "Finds directory users with matching mail attributes",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "get_affected_ad_users",
                        "required_params": {
                            "username": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_config",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 800
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def get_active_ad_users(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_active_ad_users() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_affected_ad_users:action_result.status\", \"!=\", \"failed\"],\n            [\"get_affected_ad_users:action_result.data.*.samaccountname\", \"!=\", \"\"],\n            [\"get_affected_ad_users:action_result.summary.state\", \"==\", \"Enabled\"],\n        ],\n        logical_operator='and',\n        name=\"get_active_ad_users:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        launch_reset_playbook(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get affected ad users",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get active ad users",
                        "description": "Filters down to users that both exist in the directory and are enabled",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "462279ed-390d-4ed6-b6d5-5acc68fd4484",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 156,
                        "line_start": 135,
                        "name": "filter",
                        "notes": "Filters down to users that both exist in the directory and are enabled",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "get_affected_ad_users:action_result.status",
                                        "value": "failed"
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "get_affected_ad_users:action_result.data.*.samaccountname",
                                        "value": ""
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_affected_ad_users:action_result.summary.state",
                                        "value": "Enabled"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "get_active_ad_users",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 801
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "launch_reset_playbook"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def launch_reset_playbook(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('launch_reset_playbook() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:get_active_ad_users:condition_1:get_affected_ad_users:action_result.data.*.samaccountname'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    for r in filtered_results_item_1_0:\n        phantom.debug(\"[DEBUG]: account = {}\".format(r))\n        phantom.add_artifact(container=container,\n                             raw_data={'compromisedUserName':r},\n                             cef_data={'compromisedUserName':r},\n                             label='compromised_account',\n                             name='compromised account ' + r,\n                             identifier=None,\n                             artifact_type='user name',\n                             severity='high',\n                             run_automation=True)\n        \n        # calling the playbook here is necessary because artifacts are not evaluated while\n        # this code block runs. Consequently, all artifacts are fired as a list instead of\n        # individually without this next call to playbook().\n        phantom.playbook(playbook='local/activedirectory_reset_password',\n                         container=container,\n                         show_debug=True)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get affected ad users",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 9,
                        "custom_callback": "",
                        "custom_code": "def launch_reset_playbook(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('create_comcred_artifacts() called')\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:get_active_ad_users:condition_1:get_affected_ad_users:action_result.data.*.samaccountname\"])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    for r in filtered_results_item_1_0:\n        phantom.debug(\"[DEBUG]: account = {}\".format(r))\n        phantom.add_artifact(container=container,\n                             raw_data={'compromisedUserName':r},\n                             cef_data={'compromisedUserName':r},\n                             label='compromised_account',\n                             name='compromised account ' + r,\n                             identifier=None,\n                             artifact_type='user name',\n                             severity='high',\n                             run_automation=True)\n        \n        # calling the playbook here is necessary because artifacts are not evaluated while\n        # this code block runs. Consequently, all artifacts are fired as a list instead of\n        # individually without this next call to playbook().\n        phantom.playbook(playbook='local/activedirectory_reset_password',\n                         container=container,\n                         show_debug=True)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "launch_reset_playbook",
                        "description": "Creates new compromised_credential artifacts for each user found. Starts the activedirectory_reset_password playbook to potentially reset the AD account for each artifact created",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5481d3d4-8748-4fc9-a999-79557086d266",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 267,
                        "line_start": 232,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Creates new compromised_credential artifacts for each user found. Starts the activedirectory_reset_password playbook to potentially reset the AD account for each artifact created",
                        "number": 3,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:get_active_ad_users:condition_1:get_affected_ad_users:action_result.data.*.samaccountname"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1400,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "launch_reset_playbook",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    for r in filtered_results_item_1_0:\n        phantom.debug(\"[DEBUG]: account = {}\".format(r))\n        phantom.add_artifact(container=container,\n                             raw_data={'compromisedUserName':r},\n                             cef_data={'compromisedUserName':r},\n                             label='compromised_account',\n                             name='compromised account ' + r,\n                             identifier=None,\n                             artifact_type='user name',\n                             severity='high',\n                             run_automation=True)\n        \n        # calling the playbook here is necessary because artifacts are not evaluated while\n        # this code block runs. Consequently, all artifacts are fired as a list instead of\n        # individually without this next call to playbook().\n        phantom.playbook(playbook='local/activedirectory_reset_password',\n                         container=container,\n                         show_debug=True)\n",
                        "warn": false,
                        "z": 802
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'rf_get_rule_id_by_name' block\n    rf_get_rule_id_by_name(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7c58ddc9-3d0e-460e-8d17-94e64f6ca078",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 26,
                        "line_start": 18,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -80,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 803
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - Recorded Future (alert rule lookup, alert data lookup) [asset name = recorded_future] - query for leaked credential alerts\n - LDAP (get user attributes) - query Active Directory for information about potentially compromised users\n\nDeployment Notes:\n - The Recorded Future Alert Rule must be setup first with a list of email domains to monitor for\n - The Recorded Future rule ID will be unique per account, so the playbook fetches it dynamically\n - Additional attributes in Active Directory can be added if they will improve the decision about the use of the potentially compromised account\n - The account reset is handled by the playbook \"activedirectory_reset_password\", which is called once per account to allow each prompt to be sent separately"
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-01-25T22:23:14.175097+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": [],
    "misc": {
        "apps_list": [
            "Recorded Future",
            "LDAP"
        ]
    }
}