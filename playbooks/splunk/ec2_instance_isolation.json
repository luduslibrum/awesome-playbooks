{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Isolate an EC2 instance by changing its security group in order to protect it from malicious traffic. This playbook can be started alone or used from another playbook after doing investigation and notification. The existing security group is removed from the instance and a new isolation security group is added.",
            "hash": "a85fbda7e6299d00d95760bc48f738e2b14369d7",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'filter_ec2_resource' block\n    filter_ec2_resource(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "760346fe-77a4-4702-b5d3-678b57a95b3f",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a3b61a55-6001-4fd3-ba13-1037f4f5deca",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "760346fe-77a4-4702-b5d3-678b57a95b3f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46dd73af-4589-4abd-af6e-92e0cd4de8f7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 6
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8ee0e678-0827-4ec5-bb13-75f59f5f49d2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c92738bf-674a-4bc8-b9ae-62d030aa9f0c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dc0fe23f-0741-455d-b2ac-378990f0eb2b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 20
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after, add note, list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 329,
                        "line_start": 316,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 14,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2300,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 24
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "828d2182-b5e4-4bea-85a3-b5bebbac386f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 31
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5764450c-fb8f-4876-87a9-7d74de164c4d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 58
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a0e0a6d7-33f1-4be2-b466-838af760b75e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 73
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8a8b2b74-8c26-4bd5-81fc-a913f8f2ccb0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "54d45cb9-ae79-4710-b1cf-a416d7acf33a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 76
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9b51960c-42da-4064-8c53-6390abe3e680",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 79
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "79faa50a-d137-42c6-a919-e1f288556c08",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 80
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f6cebb2e-ba60-4d7c-8857-2ecded1cbda2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 86
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f7decb4f-f55c-4a8f-a2fd-b490f9ded481",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 87
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "390d6645-946c-4ae3-b772-c998b028bd89",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "54d45cb9-ae79-4710-b1cf-a416d7acf33a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 88
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3323555a-898d-4d7d-9cf0-f6485d1dff18",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 89
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_ec2_resource(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_ec2_resource() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ],\n        name=\"filter_ec2_resource:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        describe_instance_before(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_ec2_resource",
                        "description": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 36,
                        "line_start": 19,
                        "name": "filter",
                        "notes": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "filter_ec2_resource",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 99
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "describe_instance_before:action_result.parameter.instance_ids",
                            "limit": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "describe_instance_before:action_result.parameter.instance_ids",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The maximum number of results to be fetched",
                                        "key": "limit",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe instance after"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_instance_after(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_instance_after() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'describe_instance_after' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.parameter.instance_ids', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'describe_instance_after' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': results_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=describe_instance_after_callback, name=\"describe_instance_after\", parent_action=action)\n\n    return",
                        "callback_code": "def describe_instance_after_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('describe_instance_after_callback() called')\n    \n    format_before(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    format_note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_connections_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_start": 146,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "remove existing SGs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe instance after",
                        "delay": "0",
                        "description": "Gather EC2 instance metadata after changing the security groups to verify the change.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 155,
                        "line_start": 121,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather EC2 instance metadata after changing the security groups to verify the change.",
                        "number": 2,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1100,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "describe_instance_after",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 106
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format before"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_before(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_before() called')\n    \n    template = \"\"\"%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId\",\n        \"describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_before\")\n\n    format_after(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format before",
                        "description": "Format a message describing the security groups before the change.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 205,
                        "line_start": 185,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a message describing the security groups before the change.",
                        "number": 2,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1340,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "format_before",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 107
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format after"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_after(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_after() called')\n    \n    template = \"\"\"%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId\",\n        \"describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_after\")\n\n    format_comment(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format after",
                        "description": "Format a message describing the security groups after the change.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 228,
                        "line_start": 208,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a message describing the security groups after the change.",
                        "number": 3,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1580,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "format_after",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 108
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format comment"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_comment(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_comment() called')\n    \n    template = \"\"\"Before this playbook run the instance {0} had the following security groups:\n\n{1}\n\nand after this playbook run the instance has the following security groups:\n\n{2}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.parameter.instance_ids\",\n        \"format_before:formatted_data\",\n        \"format_after:formatted_data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_comment\")\n\n    add_comment_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format comment",
                        "description": "Combine the before and after messages into a single comment.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 164,
                        "line_end": 182,
                        "line_start": 158,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Combine the before and after messages into a single comment.",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.parameter.instance_ids"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "format_before:formatted_data"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "format_after:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "format_comment",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Before this playbook run the instance {0} had the following security groups:\n\n{1}\n\nand after this playbook run the instance has the following security groups:\n\n{2}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 109
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format note"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_note() called')\n    \n    template = \"\"\"Phantom ran two playbooks investigating the EC2 instance {0} and isolating it from external networks by removing its previous security groups and assigning it to a quarantine security group. The event can be reviewed and further response can be taken using Mission Control in Phantom: {1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.parameter.instance_ids\",\n        \"container:url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_note\")\n\n    add_note_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format note",
                        "description": "Format a note to add to the Finding in Security Hub.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 286,
                        "line_start": 269,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a note to add to the Finding in Security Hub.",
                        "number": 4,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.parameter.instance_ids"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "container:url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "format_note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom ran two playbooks investigating the EC2 instance {0} and isolating it from external networks by removing its previous security groups and assigning it to a quarantine security group. The event can be reviewed and further response can be taken using Mission Control in Phantom: {1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 112
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def add_comment_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_1() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_comment')\n\n    phantom.comment(container=container, comment=formatted_data_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "format_comment:formatted_data",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Post a comment describing the security group assignment before and after the change.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 240,
                        "line_start": 231,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Post a comment describing the security group assignment before and after the change.",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2060,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 114
                    },
                    {
                        "action": "list connections",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip_hostname": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                            "local_addr": "",
                            "local_port": "",
                            "remote_addr": "",
                            "remote_port": ""
                        },
                        "angle": 0,
                        "app": "SSH",
                        "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list connections",
                                "actions": [
                                    "put file",
                                    "get file",
                                    "get memory usage",
                                    "get disk usage",
                                    "list processes",
                                    "logoff user",
                                    "terminate process",
                                    "shutdown system",
                                    "reboot system",
                                    "delete firewall rule",
                                    "list firewall rules",
                                    "block ip",
                                    "list connections",
                                    "execute program",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.47",
                                "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                                "asset_name": "ssh",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip_hostname": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                    "local_addr": "",
                                    "local_port": "",
                                    "remote_addr": "",
                                    "remote_port": ""
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.local_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.remote_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.connections.*.cmd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.inode",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local IP",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local Port",
                                        "column_order": 3,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Pid",
                                        "column_order": 1,
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.protocol",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.rec_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote IP",
                                        "column_order": 4,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote Port",
                                        "column_order": 5,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.send_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.connections.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.connections.*.uid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip_hostname": {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hostname/IP to list network connections on",
                                        "key": "ip_hostname",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "local_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local ip to filter on",
                                        "key": "local_addr",
                                        "order": 1,
                                        "required": false
                                    },
                                    "local_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local port to match",
                                        "key": "local_port",
                                        "order": 2,
                                        "required": false
                                    },
                                    "remote_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote ip to filter on",
                                        "key": "remote_addr",
                                        "order": 3,
                                        "required": false
                                    },
                                    "remote_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote port to match",
                                        "key": "remote_port",
                                        "order": 4,
                                        "required": false
                                    }
                                },
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "targets": "20",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list connections"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_connections_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_connections_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_connections_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName', 'describe_instance_after:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_connections_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'local_addr': \"\",\n                'local_port': \"\",\n                'ip_hostname': results_item_1[0],\n                'remote_addr': \"\",\n                'remote_port': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"list connections\", parameters=parameters, assets=['ssh'], name=\"list_connections_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List active TCP and UDP connections to show which traffic is still reaching the instance and to show that Phantom still has SSH access to the instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 280,
                        "line_end": 316,
                        "line_start": 289,
                        "message": "Configuring now",
                        "name": "list connections",
                        "notes": "List active TCP and UDP connections to show which traffic is still reaching the instance and to show that Phantom still has SSH access to the instance.",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2060,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "list_connections_1",
                        "required_params": {
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 115
                    },
                    {
                        "action": "add note",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "findings_id": "container:source_data_identifier",
                            "note": "format_note:formatted_data",
                            "overwrite": ""
                        },
                        "angle": 0,
                        "app": "AWS Security Hub",
                        "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add note",
                                "actions": [
                                    "add note",
                                    "unarchive findings",
                                    "archive findings",
                                    "get related findings",
                                    "get findings",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS Security Hub",
                                "app_version": "1.1.0",
                                "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                                "asset_name": "aws-securityhub-redux",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "findings_id": "container:source_data_identifier",
                                    "note": "format_note:formatted_data",
                                    "overwrite": ""
                                },
                                "has_app": true,
                                "id": 33,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_security_hub",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Findings ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_path": "action_result.parameter.findings_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab",
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab"
                                        ]
                                    },
                                    {
                                        "column_name": "Note",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string",
                                        "example_values": [
                                            "note for findings"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                                        "data_type": "string",
                                        "example_values": [
                                            "keep-alive"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/json"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Fri, 12 Apr 2019 11:26:08 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-apigw-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "123456789abcdefghi1234ab="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-trace-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "Root=1-5cb075cf-123456789abcdefghi1234ab;Sampled=0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.add_note",
                                        "data_type": "string",
                                        "example_values": [
                                            "Success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note added successfully to the provided findings ID"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "findings_id": {
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Identifier of security finding",
                                        "key": "findings_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The text of a note",
                                        "key": "note",
                                        "order": 1,
                                        "primary": false,
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check this box to overwrite the existing notes, otherwise notes will be appended to existing notes",
                                        "key": "overwrite",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Security Hub",
                                "product_vendor": "AWS",
                                "targets": "33",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'add_note_1' call\n    formatted_data_1 = phantom.get_format_data(name='format_note')\n\n    parameters = []\n    \n    # build parameters list for 'add_note_1' call\n    parameters.append({\n        'note': formatted_data_1,\n        'overwrite': \"\",\n        'findings_id': source_data_identifier_value,\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['aws_security_hub'], name=\"add_note_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Add a note to the Security Hub Finding to describe the change that was made.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "54d45cb9-ae79-4710-b1cf-a416d7acf33a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 266,
                        "line_start": 243,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Add a note to the Security Hub Finding to describe the change that was made.",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2060,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "add_note_1",
                        "required_params": {
                            "findings_id": true,
                            "note": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 116
                    },
                    {
                        "action": "assign instance",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "group_id": "sg-009121c0a21b3b2e0",
                            "instance_id": "describe_instance_before:action_result.parameter.instance_ids"
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "assign instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "group_id": "sg-009121c0a21b3b2e0",
                                    "instance_id": "describe_instance_before:action_result.parameter.instance_ids"
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-00c60fd41aea33c09"
                                        ]
                                    },
                                    {
                                        "column_name": "Instance ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3",
                                            "i-002f4fd5cabdf8cf0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "263"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 26 Feb 2019 01:05:03 GMT",
                                            "Fri, 12 Apr 2019 06:54:29 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "5b8d85e9-81c0-4e72-bd9e-90f598508ed1",
                                            "751d6a5c-0b8f-48e0-bb23-3129f897c1a8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully added instance to security group"
                                        ]
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 2,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Status: Successfully added instance to security group"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "group_id": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The security group ID to add",
                                        "key": "group_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "instance_id": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The ID of the instance",
                                        "key": "instance_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add isolation SG"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_isolation_SG(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_isolation_SG() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_isolation_SG' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.parameter.instance_ids', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_isolation_SG' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'group_id': \"sg-009121c0a21b3b2e0\",\n                'instance_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"assign instance\", parameters=parameters, assets=['aws_ec2'], callback=remove_existing_SGs, name=\"add_isolation_SG\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance before",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "add isolation SG",
                        "delay": 0,
                        "description": "Add the isolation security group to the EC2 instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 89,
                        "line_start": 65,
                        "message": "Configuring now",
                        "name": "assign instance",
                        "notes": "Add the isolation security group to the EC2 instance.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_isolation_SG",
                        "required_params": {
                            "group_id": true,
                            "instance_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 117
                    },
                    {
                        "action": "remove instance",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "group_id": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                            "instance_id": "add_isolation_SG:action_result.parameter.instance_id"
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "remove instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "group_id": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                    "instance_id": "add_isolation_SG:action_result.parameter.instance_id"
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-00c60fd41aea33c09"
                                        ]
                                    },
                                    {
                                        "column_name": "Instance ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "263"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 26 Feb 2019 00:58:55 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "cd58da56-a011-4921-98aa-cc8dc333f284"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully removed instance from security group"
                                        ]
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 2,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Status: Successfully removed instance from security group"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "group_id": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The security group ID to remove",
                                        "key": "group_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "instance_id": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The ID of the instance",
                                        "key": "instance_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "remove existing SGs"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def remove_existing_SGs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('remove_existing_SGs() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'remove_existing_SGs' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['add_isolation_SG:action_result.parameter.instance_id', 'add_isolation_SG:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'remove_existing_SGs' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_1[0] and results_item_2[0]:\n                parameters.append({\n                    'group_id': results_item_1[0],\n                    'instance_id': results_item_2[0],\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"remove instance\", parameters=parameters, assets=['aws_ec2'], callback=describe_instance_after, name=\"remove_existing_SGs\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "add isolation SG",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "remove existing SGs",
                        "delay": 0,
                        "description": "Remove any pre-existing security groups that were part of the insecure configuration.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 118,
                        "line_start": 92,
                        "message": "Configuring now",
                        "name": "remove instance",
                        "notes": "Remove any pre-existing security groups that were part of the insecure configuration.",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "remove_existing_SGs",
                        "required_params": {
                            "group_id": true,
                            "instance_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 118
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId",
                            "limit": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The maximum number of results to be fetched",
                                        "key": "limit",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe instance before"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_instance_before(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_instance_before() called')\n\n    # collect data for 'describe_instance_before' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId', 'filtered-data:filter_ec2_resource:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'describe_instance_before' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': filtered_artifacts_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_artifacts_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=add_isolation_SG, name=\"describe_instance_before\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe instance before",
                        "delay": 0,
                        "description": "Gather EC2 instance metadata before making any changes.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 62,
                        "line_start": 39,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather EC2 instance metadata before making any changes.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "describe_instance_before",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 119
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - AWS Security Hub (on poll, add note) [asset name = aws_security_hub] - ingest the Finding which initiates this playbook and enrich it with a note at the end\n - AWS EC2 (describe instance, assign instance, remove instance) [asset name = aws_ec2] - gather information about the EC2 instance and change its security group\n - SSH (list connections) [asset name = ssh] - connect to the EC2 instance and check the current network traffic\n\nDeployment Notes:\n - The SSH actions will only work if the EC2 instance is using any of the commonly used linux distributions.\n - This playbook was written to use an AWS Security Hub Finding which contains an EC2 Resource Artifact, but other types of events can be used with minor modifications to the initial filter block and the instance_id parameter in the EC2 actions.\n - The security group that is assigned to the EC2 instance must already exist, and its ID should be used in \"add isolation SG\" to replace the existing hard-coded value. If the Phantom instance still needs access to the instance after the change, the isolation security group should at least allow traffic from the Phantom instance's security group or IP address. If this is not the case, the \"list connections\" action will fail."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-01-19T21:46:32.391950+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": [],
    "misc": {
        "apps_list": [
            "AWS Security Hub",
            "AWS EC2",
            "SSH"
        ]
    }
}