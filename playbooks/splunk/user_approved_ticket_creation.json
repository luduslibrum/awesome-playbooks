{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "This playbook will operate on infected sourceAddress CEF values and determine if it is a new infection or a repeat by checking the sourceAddress against the infected_endpoint custom list, prompting users within a particular role as to whether to contain the infection or not.",
            "hash": "c1f946b1c36e8290101fd41b8798d339ac5c2b5f",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_1' block\n    decision_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "13626a44-8fbc-46ec-b5b7-dd5295544198",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval, add list item, create reinfected ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1eee7548-c82c-4daa-8152-b3d1f16b51b7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 264,
                        "line_start": 251,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 13,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2020,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "04ca8e3b-7e12-4a2c-9825-a943dfff2e73",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "13626a44-8fbc-46ec-b5b7-dd5295544198",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a393c541-797b-4aea-b1c4-f22987e2daff",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6b3ffc88-73ea-4a52-8fbc-961526929952",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a393c541-797b-4aea-b1c4-f22987e2daff",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 15
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f755af0d-c431-48d9-ab7e-0dd01b009632",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6783d3a2-62ae-4e2e-9baa-c9301556e6eb",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 22
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "08880b9c-a6ad-49c5-94ba-73f9d385ecab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "506d0e67-21e5-40c7-b6fc-e148c055bcb3",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 1740,
                                "y": 160
                            }
                        ],
                        "z": 44
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "890b37a5-0f29-4a0e-b364-9a5e2f331007",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1eee7548-c82c-4daa-8152-b3d1f16b51b7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 45
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "357627bd-1f48-4eb4-b5e6-7bac4d33763f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a393c541-797b-4aea-b1c4-f22987e2daff",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "81372d4a-388d-42b5-9dc4-c05cbdd2c69d",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 56
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "730f0e53-3a59-4711-8cbf-804b969e7ada",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "81372d4a-388d-42b5-9dc4-c05cbdd2c69d",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6783d3a2-62ae-4e2e-9baa-c9301556e6eb",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 57
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "19e12582-7286-492e-94b5-aab01ce8322f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6783d3a2-62ae-4e2e-9baa-c9301556e6eb",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fdc78cb1-d042-47ff-a289-485eefe3491b",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 58
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        endpoint_infection_ticket_approval(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_set_status_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a393c541-797b-4aea-b1c4-f22987e2daff",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 36,
                        "line_start": 16,
                        "name": "decision",
                        "notes": "Checks if the cef.sourceAddress field is populated before proceeding.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 78
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "set status",
                        "attrs": {
                            ".api": {
                                "text": "set status"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def set_status_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('set_status_2() called')\n\n    phantom.set_status(container=container, status=\"closed\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "set-status",
                                "setStatusStatus": "closed"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval, add list item, create reinfected ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_set_status_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_set_status_2() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['endpoint_infection_ticket_approval', 'add_list_item', 'create_reinfected_ticket']):\n        \n        # call connected block \"set_status_2\"\n        set_status_2(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 43,
                        "line_end": 54,
                        "line_start": 36,
                        "message": "Configuring now",
                        "name": "set status",
                        "notes": "The status of the container is then set to Resolved.",
                        "number": 2,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 540
                        },
                        "previous_function": "",
                        "previous_name": "set_status_2",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 80
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3f7faae-8920-40aa-9fda-83ce554fcada",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "abd26a78-22e2-4694-aeae-940eb2ea7cec",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0182f69-25aa-44b5-8e39-4404772ceaa7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 1640,
                                "y": 480
                            }
                        ],
                        "z": 105
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e6d7b16d-314b-45f4-b1d1-bf436607e111",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3128d857-3f55-4169-b7b1-9848a0f62933",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "50a147f9-5612-4ee0-adf7-10106e990fd0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 108
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "52be2a7c-6b3a-4d2a-b1f4-3558d2d8612c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "50a147f9-5612-4ee0-adf7-10106e990fd0",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "506d0e67-21e5-40c7-b6fc-e148c055bcb3",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 115
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format list item"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_list_item(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_list_item() called')\n    \n    template = \"\"\"[\\\"{0}\\\"]\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_1:condition_1:artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_list_item\")\n\n    add_list_item(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "create infected ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format list item",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "50a147f9-5612-4ee0-adf7-10106e990fd0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 173,
                        "line_start": 157,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Formats the sourceAddress for it to be added to a custom list.",
                        "number": 3,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_1:condition_1:artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1280,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "format_list_item",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "[\"{0}\"]",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 122
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "76e6091c-b8c0-4f05-a490-72685a0950ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fdc78cb1-d042-47ff-a289-485eefe3491b",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4f3bb5f6-4854-43ac-9eda-766a4c803ee0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 127
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c00e5099-50c2-4fa2-ae42-ada7b17341e5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f3bb5f6-4854-43ac-9eda-766a4c803ee0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3128d857-3f55-4169-b7b1-9848a0f62933",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 146
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "name": "initial_endpoint_infection:formatted_data",
                            "parent_group": "All Cases/All Cases"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "appid": "",
                                "config_type": "asset",
                                "fields": {
                                    "name": "initial_endpoint_infection:formatted_data",
                                    "parent_group": "All Cases/All Cases"
                                },
                                "has_app": true,
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "arcsight_esm",
                                "output": [
                                    {
                                        "column_name": "URI",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.URI",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.inCache",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.localID",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.disabled",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.inactive",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.typeName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.displayID",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.data.*.reference.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.managerID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.isModifiable",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceType",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceString",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.deprecated",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 1,
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.data.*.resourceid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.day",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.hour",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.year",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.month",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.minute",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.second",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.timezoneID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.milliSecond",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.creatorName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.initialized",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.day",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.hour",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.year",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.month",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.minute",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.second",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.timezoneID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.milliSecond",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifierName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reportingLevel",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTimestamp",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modificationCount",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTimestamp",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.isAdditionalLoaded",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.numberOfOccurences",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributeInitializationInProgress",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 3,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.summary.case_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_created",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "arcsight group"
                                        ],
                                        "data_path": "action_result.parameter.parent_group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create infected ticket"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def create_infected_ticket(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_infected_ticket() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'create_infected_ticket' call\n    formatted_data_1 = phantom.get_format_data(name='initial_endpoint_infection')\n\n    parameters = []\n    \n    # build parameters list for 'create_infected_ticket' call\n    parameters.append({\n        'name': formatted_data_1,\n        'parent_group': \"All Cases/All Cases\",\n    })\n\n    phantom.act(action=\"create ticket\", parameters=parameters, assets=['arcsight_esm'], callback=format_list_item, name=\"create_infected_ticket\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "create infected ticket",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3128d857-3f55-4169-b7b1-9848a0f62933",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 37,
                        "line_end": 193,
                        "line_start": 173,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "This block creates an initial infection ticket on HP ArcSight to notify that the endpoint must be contained.",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1040,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "create_infected_ticket",
                        "required_params": {
                            "name": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 147
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "884d6f83-33d6-41bd-a792-00872cf46011",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fdc78cb1-d042-47ff-a289-485eefe3491b",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ae3ba83-340c-4739-8c71-68f7eb337a1b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 148
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "Incident Commander",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def endpoint_infection_ticket_approval(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('endpoint_infection_ticket_approval() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"Incident Commander\"\n    message = \"\"\"Endpoint at {0} has been deemed infected.  Would you like to create a ticket to contain this infection?\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.sourceAddress\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=60, name=\"endpoint_infection_ticket_approval\", parameters=parameters, response_types=response_types, callback=decision_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 93,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "endpoint infection ticket approval",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "81372d4a-388d-42b5-9dc4-c05cbdd2c69d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 84,
                        "line_start": 54,
                        "message": "Endpoint at {0} has been deemed infected.  Would you like to create a ticket to contain this infection?",
                        "name": "prompt",
                        "notes": "Prompts the Incident Commander group as to whether to proceed with the containment steps.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "endpoint_infection_ticket_approval",
                        "respond_in": "60",
                        "response_key": "Yes/No",
                        "response_options": [
                            "Yes",
                            "No"
                        ],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 150
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"endpoint_infection_ticket_approval:action_result.summary.responses.0\", \"==\", \"Yes\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_set_status_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6783d3a2-62ae-4e2e-9baa-c9301556e6eb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 105,
                        "line_start": 84,
                        "name": "decision",
                        "notes": "Continues with the process if the response is yes.",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "endpoint_infection_ticket_approval:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 520,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 155
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"not in\", \"custom_list:infected_endpoints\"],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        initial_endpoint_infection(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"in\", \"custom_list:infected_endpoints\"],\n        ],\n        name=\"filter_1:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        reinfected_endpoint(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fdc78cb1-d042-47ff-a289-485eefe3491b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 136,
                        "line_start": 105,
                        "name": "filter",
                        "notes": "Filters out any endpoints that had already been infected (and presumably contained).",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "not in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "custom_list:infected_endpoints"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "custom_list:infected_endpoints"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 156
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "name": "reinfected_endpoint:formatted_data",
                            "parent_group": "All Cases/All Cases"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "create ticket",
                                "active": true,
                                "app_name": "ArcSight ESM",
                                "app_version": "1.2.33",
                                "appid": "",
                                "asset_name": "arcsight_esm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "name": "reinfected_endpoint:formatted_data",
                                    "parent_group": "All Cases/All Cases"
                                },
                                "has_app": true,
                                "id": 106,
                                "loaded": false,
                                "missing": false,
                                "name": "arcsight_esm",
                                "output": [
                                    {
                                        "column_name": "URI",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.URI",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.inCache",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.localID",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.disabled",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.inactive",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.typeName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.displayID",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.data.*.reference.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.managerID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.isModifiable",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceType",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reference.referenceString",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.deprecated",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 1,
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.data.*.resourceid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.day",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.hour",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.year",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.month",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.minute",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.second",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.timezoneID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTime.milliSecond",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.creatorName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.initialized",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.day",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.hour",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.year",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.month",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.minute",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.second",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.timezoneID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTime.milliSecond",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifierName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reportingLevel",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdTimestamp",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modificationCount",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modifiedTimestamp",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.isAdditionalLoaded",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.numberOfOccurences",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributeInitializationInProgress",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 3,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "arcsight case id"
                                        ],
                                        "data_path": "action_result.summary.case_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_created",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "arcsight group"
                                        ],
                                        "data_path": "action_result.parameter.parent_group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Name",
                                        "key": "name",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "parent_group": {
                                        "contains": [
                                            "arcsight group"
                                        ],
                                        "data_type": "string",
                                        "default": "All Cases/All Cases",
                                        "description": "Group",
                                        "key": "parent_group",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "ArcSight ESM",
                                "product_vendor": "HPE",
                                "targets": "12",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create reinfected ticket"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def create_reinfected_ticket(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_reinfected_ticket() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'create_reinfected_ticket' call\n    formatted_data_1 = phantom.get_format_data(name='reinfected_endpoint')\n\n    parameters = []\n    \n    # build parameters list for 'create_reinfected_ticket' call\n    parameters.append({\n        'name': formatted_data_1,\n        'parent_group': \"All Cases/All Cases\",\n    })\n\n    phantom.act(action=\"create ticket\", parameters=parameters, assets=['arcsight_esm'], callback=join_set_status_2, name=\"create_reinfected_ticket\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "create reinfected ticket",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "abd26a78-22e2-4694-aeae-940eb2ea7cec",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 213,
                        "line_start": 193,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "This block creates a reinfection ticket on HP ArcSight to notify that the endpoint must be contained.",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1040,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "create_reinfected_ticket",
                        "required_params": {
                            "name": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 157
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "reinfected endpoint"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def reinfected_endpoint(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('reinfected_endpoint() called')\n    \n    template = \"\"\"Contain Reinfected Endpoint At {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_1:condition_2:artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"reinfected_endpoint\")\n\n    create_reinfected_ticket(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "reinfected endpoint",
                        "description": "Format ticket name for reinfected endpoint.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ae3ba83-340c-4739-8c71-68f7eb337a1b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 251,
                        "line_start": 235,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format ticket name for reinfected endpoint.",
                        "number": 5,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_1:condition_2:artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "reinfected_endpoint",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Contain Reinfected Endpoint At {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 161
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a86fddd0-b914-46a2-b792-64805a400255",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5ae3ba83-340c-4739-8c71-68f7eb337a1b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "abd26a78-22e2-4694-aeae-940eb2ea7cec",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 162
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "initial endpoint infection"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def initial_endpoint_infection(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('initial_endpoint_infection() called')\n    \n    template = \"\"\"Contain Endpoint At {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"initial_endpoint_infection\")\n\n    create_infected_ticket(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "endpoint infection ticket approval",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "initial endpoint infection",
                        "description": "Format ticket name for initial endpoint infection.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4f3bb5f6-4854-43ac-9eda-766a4c803ee0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 232,
                        "line_start": 216,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format ticket name for initial endpoint infection.",
                        "number": 4,
                        "order": 11,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "initial_endpoint_infection",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Contain Endpoint At {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 164
                    },
                    {
                        "action": "add listitem",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "create": "True",
                            "list": "infected_endpoints",
                            "new_row": "format_list_item:formatted_data"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add listitem",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.0.2",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "create": "True",
                                    "list": "infected_endpoints",
                                    "new_row": "format_list_item:formatted_data"
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.create",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.list",
                                        "data_type": "string",
                                        "example_values": [
                                            "demo_list"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_path": "action_result.parameter.new_row",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"value1\",\"value2\",\"value3\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.failed",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Server: https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "create": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Create list if it does not exist (default: false)",
                                        "key": "create",
                                        "order": 2,
                                        "required": false
                                    },
                                    "list": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Name or ID of a custom list",
                                        "key": "list",
                                        "order": 0,
                                        "required": true
                                    },
                                    "new_row": {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "New Row (string or JSON list)",
                                        "key": "new_row",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "16",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add list item"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def add_list_item(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_list_item() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_list_item' call\n    formatted_data_1 = phantom.get_format_data(name='format_list_item')\n\n    parameters = []\n    \n    # build parameters list for 'add_list_item' call\n    parameters.append({\n        'list': \"infected_endpoints\",\n        'new_row': formatted_data_1,\n        'create': True,\n    })\n\n    phantom.act(action=\"add listitem\", parameters=parameters, assets=['phantom'], callback=join_set_status_2, name=\"add_list_item\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "create infected ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "add list item",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "506d0e67-21e5-40c7-b6fc-e148c055bcb3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 157,
                        "line_start": 136,
                        "message": "Configuring now",
                        "name": "add listitem",
                        "notes": "The infected endpoint is then added to a custom list called \"infected_endpoints\".  This list will be created if it does not already exist.",
                        "number": 2,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1520,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "add_list_item",
                        "required_params": {
                            "list": true,
                            "new_row": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 165
                    }
                ]
            },
            "notes": "This playbook uses the following Apps: \n\n- ArcSight\n\nThis playbook uses the following custom list: \n - infected_endpoints\n\nThe goal of this playbook is to prompt users within a role as to whether to proceed with the containment steps.  By prompting a role before containment, the playbook takes advantage of a collaboration between incident commanders and the automation backend, which creates a ticket on a ticketing app and adds the endpoint to a list for later reference."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-01-26T19:33:14.446194+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": [],
    "misc": {
        "apps_list": [
            "Phantom",
            "ArcSight"
        ]
    }
}