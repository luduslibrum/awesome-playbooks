{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "misc": { "apps_list": ["TruSTAR"] },
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Gather threat intelligence information about IP addresses, domain names, and URLs from TruSTAR to enrich any event containing these indicators.",
            "hash": "82db9a3f9a39e6c2fab3b9b17afb4636b0a69e64",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8c1e09ed-6c1a-4039-8424-68066e29971a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0fcb78ce-1ca7-4774-b942-f89ef3f5699f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e13a9e70-7b53-4d91-aa12-e20d19c8b108",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b803da79-86aa-424d-aa76-1c4a700cb6a0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0fcb78ce-1ca7-4774-b942-f89ef3f5699f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e3d2fc33-d659-4e13-bee1-d1c29758124e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'collect_ip' block\n    collect_ip(container=container)\n\n    # call 'collect_url' block\n    collect_url(container=container)\n\n    # call 'collect_domain' block\n    collect_domain(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0fcb78ce-1ca7-4774-b942-f89ef3f5699f",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 22,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 80,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 15
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "866892ab-36e3-481d-b610-191c13d7e8ef",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0fcb78ce-1ca7-4774-b942-f89ef3f5699f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e3730dd5-1a08-4147-9a7f-737f6cdb8719",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d41a246a-fb37-4652-92e3-9fb9ec6ac7fc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "dcccb7ff-12e7-48fd-81ca-f9ca153ce38f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "970caca9-884b-4eca-8b9f-b3c79c54ae31",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 22
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c0df9e7f-a890-4ceb-affa-370a6825b4ac",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "559dfb6d-75e2-44b5-9b3f-fc1adda1cf0c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb52d208-35be-4969-8a67-80946056721f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 32
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7bbac2b3-e257-47ae-8aaa-1b1b4fc5433b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ca0cdf26-8034-4ca0-8905-c5097e692bc6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb52d208-35be-4969-8a67-80946056721f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 33
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "24c08eaf-b853-44a7-9b73-3ec69342caf5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "aa6c563a-7cf2-452e-901f-2143a72ad0d8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb52d208-35be-4969-8a67-80946056721f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 34
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get ip report, get resolved ip report, get url report",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fb52d208-35be-4969-8a67-80946056721f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 467,
                        "line_start": 454,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 18,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 45
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1b2149e2-eb47-4317-9a9e-72c0db75e391",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e3730dd5-1a08-4147-9a7f-737f6cdb8719",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4f9ae97c-8f67-42ee-94ed-a1b91f973bdb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 52
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "26bc2cce-3e46-48b9-8dc9-1ac2cb3507fa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e3d2fc33-d659-4e13-bee1-d1c29758124e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "40eca7b0-626b-4a9d-a8b7-9459b77604ef",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 58
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9fa9417e-6cb4-4d69-9915-b0de7f49268e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f9ae97c-8f67-42ee-94ed-a1b91f973bdb",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "dcccb7ff-12e7-48fd-81ca-f9ca153ce38f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 60
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c4bd4030-00ee-478d-8bd0-f4cdf19e3871",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "40eca7b0-626b-4a9d-a8b7-9459b77604ef",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3a1201a7-4ba4-4d39-a1f1-2fcc5167b759",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 61
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ea33c3d1-082b-4f64-bf7d-21e991b2bd56",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "970caca9-884b-4eca-8b9f-b3c79c54ae31",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "898593e5-a299-4baa-888a-81149171d0af",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 67
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b3161258-198e-4620-aa06-d3fa80039583",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "898593e5-a299-4baa-888a-81149171d0af",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca0cdf26-8034-4ca0-8905-c5097e692bc6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 69
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "29fc60e6-02f3-4642-82c2-2ebb413df104",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4e40060a-2f1d-40b1-80f0-8c185a179020",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "56d0a76e-46bf-466e-a2c3-52a27f702d57",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 70
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7bd60fd8-3a51-4124-bb65-3600330994ef",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "56d0a76e-46bf-466e-a2c3-52a27f702d57",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "559dfb6d-75e2-44b5-9b3f-fc1adda1cf0c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 73
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "60e371b6-1da2-4ba9-beaf-e5f78c721a7e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3a1201a7-4ba4-4d39-a1f1-2fcc5167b759",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7606b467-d0ad-4ece-bf80-d686e92f15c3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 75
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "38d3828e-f446-486b-a9bd-981b0ec8f80a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7606b467-d0ad-4ece-bf80-d686e92f15c3",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aa6c563a-7cf2-452e-901f-2143a72ad0d8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 77
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "collect ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def collect_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('collect_ip() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"ip\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_property_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'tags': None,\n                'scope': None,\n                'container': item0[0],\n                'data_types': item1[0],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/collect_by_cef_type\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/collect_by_cef_type', parameters=parameters, name='collect_ip', callback=ip_filter_none)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/collect_by_cef_type",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "data_types": {
                                "collectionType": "literal_values",
                                "dataPath": "ip",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "scope": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "tags": {
                                "dataPath": "",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 27,
                        "customFunction": "community/collect_by_cef_type",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "collect ip",
                        "data_types-1": "ip",
                        "delay": 0,
                        "description": "Collect all IP addresses in the container.",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e13a9e70-7b53-4d91-aa12-e20d19c8b108",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 64,
                        "line_start": 25,
                        "message": "Configuring now",
                        "name": "collect_by_cef_type",
                        "notes": "Collect all IP addresses in the container.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "collect_ip",
                        "selectedCustomFunction": {
                            "description": "Collect all artifact values that match the desired CEF data types, such as \"ip\", \"url\", \"sha1\", or \"all\". Optionally also filter for artifacts that have the specified tags.",
                            "draftMode": false,
                            "id": 205,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 205,
                                    "description": "Container ID or container object.",
                                    "id": 827,
                                    "input_type": "item",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "The CEF data type to collect values for. This could be a single string or a comma separated list such as \"hash,filehash,file_hash\". The special value \"all\" can also be used to collect all field values from all artifacts.",
                                    "id": 828,
                                    "input_type": "item",
                                    "name": "data_types",
                                    "placeholder": "data_type1, data_type2, data_type3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "If tags are provided, only return fields from artifacts that have all of the provided tags. This could be an individual tag or a comma separated list.",
                                    "id": 829,
                                    "input_type": "item",
                                    "name": "tags",
                                    "placeholder": "tag1,tag2,tag3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "Defaults to 'new'. Define custom scope. Advanced Settings Scope is not passed to a custom function. Options are 'all' or 'new'.",
                                    "id": 830,
                                    "input_type": "item",
                                    "name": "scope",
                                    "placeholder": "new"
                                }
                            ],
                            "name": "collect_by_cef_type",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_value",
                                    "description": "The value of the field with the matching CEF data type.",
                                    "id": 455
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom artifact id"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_id",
                                    "description": "ID of the artifact that contains the value.",
                                    "id": 456
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 85
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "collect domain"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def collect_domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('collect_domain() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"domain\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_property_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'tags': None,\n                'scope': None,\n                'container': item0[0],\n                'data_types': item1[0],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/collect_by_cef_type\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/collect_by_cef_type', parameters=parameters, name='collect_domain', callback=domain_filter_none)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/collect_by_cef_type",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "data_types": {
                                "collectionType": "literal_values",
                                "dataPath": "domain",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "scope": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "tags": {
                                "dataPath": "",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 27,
                        "customFunction": "community/collect_by_cef_type",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "collect domain",
                        "data_types-1": "domain",
                        "delay": 0,
                        "description": "Collect all domain names in the container.",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e3730dd5-1a08-4147-9a7f-737f6cdb8719",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 223,
                        "line_start": 184,
                        "message": "Configuring now",
                        "name": "collect_by_cef_type",
                        "notes": "Collect all domain names in the container.",
                        "number": 3,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "collect_domain",
                        "selectedCustomFunction": {
                            "description": "Collect all artifact values that match the desired CEF data types, such as \"ip\", \"url\", \"sha1\", or \"all\". Optionally also filter for artifacts that have the specified tags.",
                            "draftMode": false,
                            "id": 205,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 205,
                                    "description": "Container ID or container object.",
                                    "id": 827,
                                    "input_type": "item",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "The CEF data type to collect values for. This could be a single string or a comma separated list such as \"hash,filehash,file_hash\". The special value \"all\" can also be used to collect all field values from all artifacts.",
                                    "id": 828,
                                    "input_type": "item",
                                    "name": "data_types",
                                    "placeholder": "data_type1, data_type2, data_type3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "If tags are provided, only return fields from artifacts that have all of the provided tags. This could be an individual tag or a comma separated list.",
                                    "id": 829,
                                    "input_type": "item",
                                    "name": "tags",
                                    "placeholder": "tag1,tag2,tag3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "Defaults to 'new'. Define custom scope. Advanced Settings Scope is not passed to a custom function. Options are 'all' or 'new'.",
                                    "id": 830,
                                    "input_type": "item",
                                    "name": "scope",
                                    "placeholder": "new"
                                }
                            ],
                            "name": "collect_by_cef_type",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_value",
                                    "description": "The value of the field with the matching CEF data type.",
                                    "id": 455
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom artifact id"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_id",
                                    "description": "ID of the artifact that contains the value.",
                                    "id": 456
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 86
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "collect url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def collect_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('collect_url() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"url\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_property_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'tags': None,\n                'scope': None,\n                'container': item0[0],\n                'data_types': item1[0],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/collect_by_cef_type\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/collect_by_cef_type', parameters=parameters, name='collect_url', callback=url_filter_none)\n\n    return",
                        "callback_code": "",
                        "callback_start": 141,
                        "callsback": true,
                        "cfDisplayPath": "community/collect_by_cef_type",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "data_types": {
                                "collectionType": "literal_values",
                                "dataPath": "url",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "scope": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "tags": {
                                "dataPath": "",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 27,
                        "customFunction": "community/collect_by_cef_type",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "collect url",
                        "data_types-1": "url",
                        "delay": 0,
                        "description": "Collect all URLs in the container.",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e3d2fc33-d659-4e13-bee1-d1c29758124e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 157,
                        "line_start": 118,
                        "message": "Configuring now",
                        "name": "collect_by_cef_type",
                        "notes": "Collect all URLs in the container.",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "collect_url",
                        "selectedCustomFunction": {
                            "description": "Collect all artifact values that match the desired CEF data types, such as \"ip\", \"url\", \"sha1\", or \"all\". Optionally also filter for artifacts that have the specified tags.",
                            "draftMode": false,
                            "id": 205,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 205,
                                    "description": "Container ID or container object.",
                                    "id": 827,
                                    "input_type": "item",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "The CEF data type to collect values for. This could be a single string or a comma separated list such as \"hash,filehash,file_hash\". The special value \"all\" can also be used to collect all field values from all artifacts.",
                                    "id": 828,
                                    "input_type": "item",
                                    "name": "data_types",
                                    "placeholder": "data_type1, data_type2, data_type3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "If tags are provided, only return fields from artifacts that have all of the provided tags. This could be an individual tag or a comma separated list.",
                                    "id": 829,
                                    "input_type": "item",
                                    "name": "tags",
                                    "placeholder": "tag1,tag2,tag3"
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [],
                                    "custom_function": 205,
                                    "description": "Defaults to 'new'. Define custom scope. Advanced Settings Scope is not passed to a custom function. Options are 'all' or 'new'.",
                                    "id": 830,
                                    "input_type": "item",
                                    "name": "scope",
                                    "placeholder": "new"
                                }
                            ],
                            "name": "collect_by_cef_type",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_value",
                                    "description": "The value of the field with the matching CEF data type.",
                                    "id": 455
                                },
                                {
                                    "_pretty_custom_function": "collect_by_cef_type",
                                    "contains_type": [
                                        "phantom artifact id"
                                    ],
                                    "custom_function": 205,
                                    "data_path": "*.artifact_id",
                                    "description": "ID of the artifact that contains the value.",
                                    "id": 456
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 87
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2c8bdd97-5822-4131-888d-72f833da86a1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e13a9e70-7b53-4d91-aa12-e20d19c8b108",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9e40b313-91eb-44d2-999f-ade26a11a39f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 93
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "58947bb2-1428-4d43-ae2d-d254f13fc3eb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9e40b313-91eb-44d2-999f-ade26a11a39f",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e40060a-2f1d-40b1-80f0-8c185a179020",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 96
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ip_filter_none(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ip_filter_none() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"collect_ip:custom_function_result.data.*.artifact_value\", \"!=\", \"\"],\n        ],\n        name=\"ip_filter_none:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        hunt_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "collect ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ip_filter_none",
                        "description": "Filter out nonexistent IP addresses.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9e40b313-91eb-44d2-999f-ade26a11a39f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 454,
                        "line_start": 436,
                        "name": "filter",
                        "notes": "Filter out nonexistent IP addresses.",
                        "number": 7,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "collect_ip:custom_function_result.data.*.artifact_value",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "ip_filter_none",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 97
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def domain_filter_none(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('domain_filter_none() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"collect_domain:custom_function_result.data.*.artifact_value\", \"!=\", \"\"],\n        ],\n        name=\"domain_filter_none:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        lookup_domain_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "collect domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "domain_filter_none",
                        "description": "Filter out nonexistent domain names.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4f9ae97c-8f67-42ee-94ed-a1b91f973bdb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 349,
                        "line_start": 331,
                        "name": "filter",
                        "notes": "Filter out nonexistent domain names.",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "collect_domain:custom_function_result.data.*.artifact_value",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "domain_filter_none",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 98
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def url_filter_none(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('url_filter_none() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"collect_url:custom_function_result.data.*.artifact_value\", \"!=\", \"\"],\n        ],\n        name=\"url_filter_none:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        hunt_url_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "collect url",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "url_filter_none",
                        "description": "Filter out nonexistent URLs.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "40eca7b0-626b-4a9d-a8b7-9459b77604ef",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 370,
                        "line_start": 352,
                        "name": "filter",
                        "notes": "Filter out nonexistent URLs.",
                        "number": 3,
                        "order": 13,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "collect_url:custom_function_result.data.*.artifact_value",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "url_filter_none",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 99
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ip_report_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ip_report_check() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"hunt_ip:action_result.data.*.report_id\", \"!=\", \"\"],\n        ],\n        name=\"ip_report_check:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        get_ip_report(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "hunt ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ip_report_check",
                        "description": "Check if there is a report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "56d0a76e-46bf-466e-a2c3-52a27f702d57",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 412,
                        "line_start": 394,
                        "name": "filter",
                        "notes": "Check if there is a report.",
                        "number": 5,
                        "order": 15,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "hunt_ip:action_result.data.*.report_id",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "ip_report_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 107
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def resolved_ip_report_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('resolved_ip_report_check() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"hunt_resolved_ip:action_result.data.*.report_id\", \"!=\", \"\"],\n        ],\n        name=\"resolved_ip_report_check:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        get_resolved_ip_report(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "hunt resolved ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "resolved_ip_report_check",
                        "description": "Check if there is a report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "898593e5-a299-4baa-888a-81149171d0af",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 391,
                        "line_start": 373,
                        "name": "filter",
                        "notes": "Check if there is a report.",
                        "number": 4,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "hunt_resolved_ip:action_result.data.*.report_id",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1100,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "resolved_ip_report_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 108
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def url_report_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('url_report_check() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"hunt_url_1:action_result.data.*.report_id\", \"!=\", \"\"],\n        ],\n        name=\"url_report_check:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        get_url_report(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "hunt url",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "url_report_check",
                        "description": "Check if there is a report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7606b467-d0ad-4ece-bf80-d686e92f15c3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 433,
                        "line_start": 415,
                        "name": "filter",
                        "notes": "Check if there is a report.",
                        "number": 6,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "hunt_url_1:action_result.data.*.report_id",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "url_report_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 109
                    },
                    {
                        "action": "get report",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id_type": "",
                            "report_id": "hunt_ip:action_result.data.*.report_id"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get report",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id_type": "",
                                    "report_id": "hunt_ip:action_result.data.*.report_id"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.sector.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "information-technology"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sector.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "Information Technology"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.data.*.externalTrackingId",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reportBody",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.created",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlationCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            28
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "WannaCry ransomware used in widespread attacks "
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.distributionType",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMMUNITY"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.timeBegan",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494763210352
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.IP",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CIDR_BLOCK",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.URL",
                                        "data_type": "string",
                                        "example_values": [
                                            "cwwnhwhlz52maqm7.onion"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SOFTWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MD5",
                                        "data_type": "string",
                                        "example_values": [
                                            "8dd63adb68ef053e044a5a2f46e0d2cd"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA256",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.EMAIL_ADDRESS",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar malware"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MALWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar registry key"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.REGISTRY_KEY",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar cve number"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CVE",
                                        "data_type": "string",
                                        "example_values": [
                                            "cve-2017-0147"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar bitcoin address"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.BITCOIN_ADDRESS",
                                        "data_type": "string",
                                        "example_values": [
                                            "13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Extracted indicators count: 26"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.parameter.report_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.id_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.extracted_indicators_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.mimeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/text"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.submitSource",
                                        "data_type": "string",
                                        "example_values": [
                                            "STATION"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicatorsCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID type (Default: internal)",
                                        "key": "id_type",
                                        "order": 1,
                                        "required": false,
                                        "value_list": [
                                            "internal",
                                            "external"
                                        ]
                                    },
                                    "report_id": {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Report ID",
                                        "key": "report_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get ip report"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_ip_report(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_ip_report() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_ip_report' call\n    results_data_1 = phantom.collect2(container=container, datapath=['hunt_ip:action_result.data.*.report_id', 'hunt_ip:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'get_ip_report' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'id_type': \"\",\n                'report_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get report\", parameters=parameters, assets=['trustar'], name=\"get_ip_report\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "hunt ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get ip report",
                        "delay": 0,
                        "description": "Get the TruSTAR report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "559dfb6d-75e2-44b5-9b3f-fc1adda1cf0c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 115,
                        "line_start": 91,
                        "message": "Configuring now",
                        "name": "get report",
                        "notes": "Get the TruSTAR report.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "get_ip_report",
                        "required_params": {
                            "report_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 110
                    },
                    {
                        "action": "hunt url",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "url": "filtered-data:url_filter_none:condition_1:collect_url:custom_function_result.data.*.artifact_value"
                        },
                        "angle": 0,
                        "app": "TruSTAR",
                        "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                        "approver": "",
                        "assets": [
                            {
                                "action": "hunt url",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "url": "filtered-data:url_filter_none:condition_1:collect_url:custom_function_result.data.*.artifact_value"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.report_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_correlated_reports",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "url": {
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to hunt",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt url"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def hunt_url_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('hunt_url_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_url_1' call\n    filtered_custom_function_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:url_filter_none:condition_1:collect_url:custom_function_result.data.*.artifact_value'])\n\n    parameters = []\n    \n    # build parameters list for 'hunt_url_1' call\n    for filtered_custom_function_results_item_1 in filtered_custom_function_results_data_1:\n        if filtered_custom_function_results_item_1[0]:\n            parameters.append({\n                'url': filtered_custom_function_results_item_1[0],\n            })\n\n    phantom.act(action=\"hunt url\", parameters=parameters, assets=['trustar'], callback=url_report_check, name=\"hunt_url_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "collect url",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Collect threat information about the URLs in TruSTAR.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3a1201a7-4ba4-4d39-a1f1-2fcc5167b759",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 181,
                        "line_start": 160,
                        "message": "Configuring now",
                        "name": "hunt url",
                        "notes": "Collect threat information about the URLs in TruSTAR.",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "hunt_url_1",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 111
                    },
                    {
                        "action": "get report",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id_type": "",
                            "report_id": "hunt_url_1:action_result.data.*.report_id"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get report",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id_type": "",
                                    "report_id": "hunt_url_1:action_result.data.*.report_id"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.sector.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "information-technology"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sector.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "Information Technology"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.data.*.externalTrackingId",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reportBody",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.created",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlationCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            28
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "WannaCry ransomware used in widespread attacks "
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.distributionType",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMMUNITY"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.timeBegan",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494763210352
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.IP",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CIDR_BLOCK",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.URL",
                                        "data_type": "string",
                                        "example_values": [
                                            "cwwnhwhlz52maqm7.onion"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SOFTWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MD5",
                                        "data_type": "string",
                                        "example_values": [
                                            "8dd63adb68ef053e044a5a2f46e0d2cd"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA256",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.EMAIL_ADDRESS",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar malware"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MALWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar registry key"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.REGISTRY_KEY",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar cve number"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CVE",
                                        "data_type": "string",
                                        "example_values": [
                                            "cve-2017-0147"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar bitcoin address"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.BITCOIN_ADDRESS",
                                        "data_type": "string",
                                        "example_values": [
                                            "13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Extracted indicators count: 26"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.parameter.report_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.id_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.extracted_indicators_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.mimeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/text"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.submitSource",
                                        "data_type": "string",
                                        "example_values": [
                                            "STATION"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicatorsCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID type (Default: internal)",
                                        "key": "id_type",
                                        "order": 1,
                                        "required": false,
                                        "value_list": [
                                            "internal",
                                            "external"
                                        ]
                                    },
                                    "report_id": {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Report ID",
                                        "key": "report_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get url report"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_url_report(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_url_report() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_url_report' call\n    results_data_1 = phantom.collect2(container=container, datapath=['hunt_url_1:action_result.data.*.report_id', 'hunt_url_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'get_url_report' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'id_type': \"\",\n                'report_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get report\", parameters=parameters, assets=['trustar'], name=\"get_url_report\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "hunt url",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get url report",
                        "delay": "0",
                        "description": "Get the TruSTAR report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aa6c563a-7cf2-452e-901f-2143a72ad0d8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 328,
                        "line_start": 304,
                        "message": "Configuring now",
                        "name": "get report",
                        "notes": "Get the TruSTAR report.",
                        "number": 3,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "get_url_report",
                        "required_params": {
                            "report_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 112
                    },
                    {
                        "action": "get report",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id_type": "",
                            "report_id": "hunt_resolved_ip:action_result.data.*.report_id"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get report",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id_type": "",
                                    "report_id": "hunt_resolved_ip:action_result.data.*.report_id"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.sector.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "information-technology"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sector.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "Information Technology"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.data.*.externalTrackingId",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reportBody",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.created",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494777610386
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlationCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            28
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "WannaCry ransomware used in widespread attacks "
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.distributionType",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMMUNITY"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.enclaves.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.timeBegan",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1494763210352
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.IP",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CIDR_BLOCK",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.URL",
                                        "data_type": "string",
                                        "example_values": [
                                            "cwwnhwhlz52maqm7.onion"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SOFTWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MD5",
                                        "data_type": "string",
                                        "example_values": [
                                            "8dd63adb68ef053e044a5a2f46e0d2cd"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA256",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.EMAIL_ADDRESS",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar malware"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.MALWARE",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar registry key"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.REGISTRY_KEY",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar cve number"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.CVE",
                                        "data_type": "string",
                                        "example_values": [
                                            "cve-2017-0147"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.SHA1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "trustar bitcoin address"
                                        ],
                                        "data_path": "action_result.data.*.indicators.*.BITCOIN_ADDRESS",
                                        "data_type": "string",
                                        "example_values": [
                                            "13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Extracted indicators count: 26"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_path": "action_result.parameter.report_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "74e38d07-aec4-4dc5-8a07-c71a6c2b1046"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.id_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.extracted_indicators_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.mimeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/text"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.submitSource",
                                        "data_type": "string",
                                        "example_values": [
                                            "STATION"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicatorsCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID type (Default: internal)",
                                        "key": "id_type",
                                        "order": 1,
                                        "required": false,
                                        "value_list": [
                                            "internal",
                                            "external"
                                        ]
                                    },
                                    "report_id": {
                                        "contains": [
                                            "trustar report id",
                                            "trustar tracking id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Report ID",
                                        "key": "report_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get resolved ip report"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_resolved_ip_report(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_resolved_ip_report() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_resolved_ip_report' call\n    results_data_1 = phantom.collect2(container=container, datapath=['hunt_resolved_ip:action_result.data.*.report_id', 'hunt_resolved_ip:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'get_resolved_ip_report' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'id_type': \"\",\n                'report_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get report\", parameters=parameters, assets=['trustar'], name=\"get_resolved_ip_report\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "hunt resolved ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get resolved ip report",
                        "delay": 0,
                        "description": "Get the TruSTAR report.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca0cdf26-8034-4ca0-8905-c5097e692bc6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 301,
                        "line_start": 277,
                        "message": "Configuring now",
                        "name": "get report",
                        "notes": "Get the TruSTAR report.",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "get_resolved_ip_report",
                        "required_params": {
                            "report_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 113
                    },
                    {
                        "action": "hunt ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "lookup_domain_1:action_result.data.*.record_info_objects.*.record_info"
                        },
                        "angle": 0,
                        "app": "TruSTAR",
                        "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                        "approver": "",
                        "assets": [
                            {
                                "action": "hunt ip",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "lookup_domain_1:action_result.data.*.record_info_objects.*.record_info"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.report_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_correlated_reports",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP/CIDR to hunt",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt resolved ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def hunt_resolved_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('hunt_resolved_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_resolved_ip' call\n    results_data_1 = phantom.collect2(container=container, datapath=['lookup_domain_1:action_result.data.*.record_info_objects.*.record_info', 'lookup_domain_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'hunt_resolved_ip' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'ip': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"hunt ip\", parameters=parameters, assets=['trustar'], callback=resolved_ip_report_check, name=\"hunt_resolved_ip\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "lookup domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "hunt resolved ip",
                        "delay": 0,
                        "description": "Collect threat information about the resolved IP addresses in TruSTAR.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "970caca9-884b-4eca-8b9f-b3c79c54ae31",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 274,
                        "line_start": 251,
                        "message": "Configuring now",
                        "name": "hunt ip",
                        "notes": "Collect threat information about the resolved IP addresses in TruSTAR.",
                        "number": 2,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "hunt_resolved_ip",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 114
                    },
                    {
                        "action": "lookup domain",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "filtered-data:domain_filter_none:condition_1:collect_domain:custom_function_result.data.*.artifact_value",
                            "ip": "collect_domain:custom_function_result.data.*.artifact_value",
                            "type": ""
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "lookup domain",
                                "actions": [
                                    "lookup ip",
                                    "lookup domain",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "DNS",
                                "app_version": "2.0.22",
                                "appid": "876ab991-313e-48e7-bccd-e8c9650c239c",
                                "asset_name": "google_dns",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "filtered-data:domain_filter_none:condition_1:collect_domain:custom_function_result.data.*.artifact_value",
                                    "type": ""
                                },
                                "has_app": true,
                                "id": 1,
                                "loaded": false,
                                "missing": false,
                                "name": "google_dns",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "host name",
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.record_info_objects.*.record_info",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.record_infos",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.cannonical_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "phantomtest.com.",
                                            "test.com."
                                        ]
                                    },
                                    {
                                        "column_order": 3,
                                        "data_path": "action_result.summary.canonical_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Hostname",
                                        "column_order": 2,
                                        "contains": [
                                            "host name",
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.hostname",
                                        "data_type": "string",
                                        "example_values": [
                                            "ffobaaar.com"
                                        ]
                                    },
                                    {
                                        "column_name": "IP Address",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.summary.record_info",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "column_order": 0,
                                        "data_path": "action_result.summary.total_record_infos",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "None of DNS query names exist: ['ffobaaar.com.', 'ffobaaar.com.localdomain.']",
                                            "Record info: 54.239.25.192, Total record infos: 6, Cannonical name: amazon.com."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "host name",
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Record to resolve",
                                        "key": "domain",
                                        "primary": true,
                                        "required": true
                                    },
                                    "type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "DNS Record Type",
                                        "key": "type",
                                        "required": false,
                                        "value_list": [
                                            "A",
                                            "AAAA",
                                            "CNAME",
                                            "HINFO",
                                            "ISDN",
                                            "MX",
                                            "NS",
                                            "SOA",
                                            "TXT"
                                        ]
                                    }
                                },
                                "product_name": "DNS",
                                "product_vendor": "Generic",
                                "targets": "1",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "lookup domain"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def lookup_domain_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('lookup_domain_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'lookup_domain_1' call\n    filtered_custom_function_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:domain_filter_none:condition_1:collect_domain:custom_function_result.data.*.artifact_value'])\n\n    parameters = []\n    \n    # build parameters list for 'lookup_domain_1' call\n    for filtered_custom_function_results_item_1 in filtered_custom_function_results_data_1:\n        if filtered_custom_function_results_item_1[0]:\n            parameters.append({\n                'type': \"\",\n                'domain': filtered_custom_function_results_item_1[0],\n            })\n\n    phantom.act(action=\"lookup domain\", parameters=parameters, assets=['google_dns'], callback=hunt_resolved_ip, name=\"lookup_domain_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "collect domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Resolve the domain names to IP addresses using DNS.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "dcccb7ff-12e7-48fd-81ca-f9ca153ce38f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 248,
                        "line_start": 226,
                        "message": "Configuring now",
                        "name": "lookup domain",
                        "notes": "Resolve the domain names to IP addresses using DNS.",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "lookup_domain_1",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 115
                    },
                    {
                        "action": "hunt ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "collect_ip:custom_function_result.data.*.artifact_value"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "hunt ip",
                                "actions": [
                                    "triage email",
                                    "list indicators",
                                    "list emails",
                                    "list enclaves",
                                    "unsafelist ioc",
                                    "safelist ioc",
                                    "update report",
                                    "submit report",
                                    "delete report",
                                    "move report",
                                    "copy report",
                                    "get report",
                                    "hunt bitcoin address",
                                    "hunt registry key",
                                    "hunt malware",
                                    "hunt cve",
                                    "hunt email",
                                    "hunt file",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt ioc",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "TruSTAR",
                                "app_version": "3.0.4",
                                "appid": "536ae6e0-72b2-4ae1-9520-810acaddd2d1",
                                "asset_name": "trustar",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "collect_ip:custom_function_result.data.*.artifact_value"
                                },
                                "has_app": true,
                                "id": 38,
                                "loaded": false,
                                "missing": false,
                                "name": "trustar",
                                "output": [
                                    {
                                        "contains": [
                                            "trustar report id"
                                        ],
                                        "data_path": "action_result.data.*.report_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_correlated_reports",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP/CIDR to hunt",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TruSTAR",
                                "product_vendor": "TruSTAR Technology",
                                "targets": "38",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def hunt_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('hunt_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_ip' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['collect_ip:custom_function_result.data.*.artifact_value'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'hunt_ip' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'ip': custom_function_results_item_1[0],\n            })\n\n    phantom.act(action=\"hunt ip\", parameters=parameters, assets=['trustar'], callback=ip_report_check, name=\"hunt_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "collect ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "hunt ip",
                        "delay": 0,
                        "description": "Collect threat information about the IP addresses in TruSTAR.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4e40060a-2f1d-40b1-80f0-8c185a179020",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 88,
                        "line_start": 67,
                        "message": "Configuring now",
                        "name": "hunt ip",
                        "notes": "Collect threat information about the IP addresses in TruSTAR.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "hunt_ip",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 116
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - TruSTAR (hunt ip, hunt url, and get report) [asset name = trustar] - Query for threat intelligence\n\nDeployment Notes:\n - This playbook dynamically finds indicators based on CEF type, so it should work across a variety of event types."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.6.61906"
    },
    "create_time": "2021-08-24T19:20:06.023712+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}
