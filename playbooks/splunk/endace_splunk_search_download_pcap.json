{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "misc": { "apps_list": ["Endace"] },
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "This playbook demonstrates the integration between Splunk SOAR and EndaceProbe. It operates on syslog messages forwarded by the Phantom App for Splunk. The playbook queries EndaceProbe for packets of interests and on successful match downloads PCAP files in the Splunk SOAR local storage. The downloading of actual files is conditional and depends upon event severity and/or number of Bytes matched (default is 10MB and can be changed). For PCAPs greater than 10MB, a EndaceP2P download link is provided as a 'note' to the user.\n\nThanks to Soumen Chakraborty for this contribution.",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'epoch_to_timestamp' block\n    epoch_to_timestamp(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cb59893e-1757-42b1-8c09-73155e481dd6",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 18,
                        "line_start": 10,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "82ea45ab-cd88-44e1-b727-a33a831103bb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d487a6dc-913e-4d5d-af07-5cca2a0479ce",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "59279ac2-67eb-4fe1-bc38-879a17bd7528",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 8
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3b4559c2-29bf-4c07-a4ac-65faa461af22",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "59279ac2-67eb-4fe1-bc38-879a17bd7528",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "75ca2dd8-ad62-410f-902c-1225a5cc4146",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "56f30427-70b6-4a1e-8495-5c2ca8e15fe6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "75ca2dd8-ad62-410f-902c-1225a5cc4146",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d2122dfa-5f58-4943-b83a-b68b466653ae",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f0bc285b-7761-4df5-902d-813075b04129",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d2122dfa-5f58-4943-b83a-b68b466653ae",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8645aa5b-891f-47d4-ac91-a4067be29186",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 14
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8c6b7a0c-1dc1-4960-b2c6-1da85a1cb888",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "75ca2dd8-ad62-410f-902c-1225a5cc4146",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4a9e847f-7ce3-4af0-a1aa-1315772156ba",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 15
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f5169fff-bfc4-4ba4-8f70-78898193a531",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4a9e847f-7ce3-4af0-a1aa-1315772156ba",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "89cb7d14-0252-4e9e-9449-eabbdd58a797",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1ab64668-c874-4d2f-9df1-b32e4e97c9a0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4a9e847f-7ce3-4af0-a1aa-1315772156ba",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "56b05bbe-5f61-48b3-8b65-10500aa32865",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 25
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "60f3c391-1413-4b23-b0ec-4eeee03ac58b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "56b05bbe-5f61-48b3-8b65-10500aa32865",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8645aa5b-891f-47d4-ac91-a4067be29186",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 29
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3a65af8-6d9a-48dc-bec1-49c34b3494f0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "59279ac2-67eb-4fe1-bc38-879a17bd7528",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1290c99a-fe4b-4589-b771-ce3eba3b6bfc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 30
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Get PCAP, Get PCAP under 10MB, Get PCAP Status, Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8645aa5b-891f-47d4-ac91-a4067be29186",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 329,
                        "line_start": 316,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 15,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2000,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 67
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "847e3ba5-a7b6-4579-a057-2d06c1ceec7a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ef86af52-b60a-4e7f-9913-86668439ef4a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8645aa5b-891f-47d4-ac91-a4067be29186",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 94
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b457afb-ee45-469c-9931-e2d6a759f416",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1290c99a-fe4b-4589-b771-ce3eba3b6bfc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1b52ab6e-56b6-46a0-9bb2-5e91cc70341e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 160
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cfcd7594-8617-4882-a039-9ff8361cbe82",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1b52ab6e-56b6-46a0-9bb2-5e91cc70341e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8645aa5b-891f-47d4-ac91-a4067be29186",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 162
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "61661fe7-df15-4515-8992-f02d6bfc73f1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fff76b64-4c5c-4e9a-9855-b5322bc927c7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ef86af52-b60a-4e7f-9913-86668439ef4a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 184
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "944de76d-7145-44ca-9bf0-2d7ecf669ca2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "89cb7d14-0252-4e9e-9449-eabbdd58a797",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4d7311a3-f63d-46c8-9512-85e4df4186c6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 189
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a011abbd-e1a2-4ef7-9d58-6e3ae4c37ea3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4d7311a3-f63d-46c8-9512-85e4df4186c6",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fff76b64-4c5c-4e9a-9855-b5322bc927c7",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 191
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c933e65c-816e-4f6f-891e-f52686745ecf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cb59893e-1757-42b1-8c09-73155e481dd6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc55005a-4dce-4527-966e-24b92babb127",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 268
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "epoch to timestamp"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def epoch_to_timestamp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('epoch_to_timestamp() called')\n    \n    container_data_0 = phantom.collect2(container=container, datapath=['artifact:*.cef.endaceDateTime', 'artifact:*.id'])\n    literal_values_0 = [\n        [\n            \"epoch\",\n            \"%Y-%m-%dT%H:%M:%SZ\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_data_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'input_datetime': item0[0],\n                'amount_to_modify': None,\n                'modification_unit': None,\n                'input_format_string': item1[0],\n                'output_format_string': item1[1],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/datetime_modify\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/datetime_modify', parameters=parameters, name='epoch_to_timestamp', callback=Query_EndaceProbe)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/datetime_modify",
                        "cfInputs": {
                            "amount_to_modify": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "input_datetime": {
                                "collectionType": "container_data",
                                "dataPath": "artifact:*.cef.endaceDateTime",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "epoch",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "modification_unit": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "output_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%Y-%m-%dT%H:%M:%SZ",
                                "paramName": "item1[1]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 25,
                        "customFunction": "community/datetime_modify",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "epoch to timestamp",
                        "delay": 0,
                        "description": "Convert the epoch time to a timestamp.",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cc55005a-4dce-4527-966e-24b92babb127",
                        "inPorts": [
                            "in"
                        ],
                        "input_datetime-0": "artifact:*.cef.endaceDateTime",
                        "input_format_string-1": "epoch",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 316,
                        "line_start": 279,
                        "message": "Configuring now",
                        "name": "datetime_modify",
                        "notes": "Convert the epoch time to a timestamp.",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "output_format_string-4": "%Y-%m-%dT%H:%M:%SZ",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "epoch_to_timestamp",
                        "selectedCustomFunction": {
                            "description": "Change a timestamp by adding or subtracting minutes, hours, or days.",
                            "draftMode": false,
                            "id": 186,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 186,
                                    "description": "The datetime to modify, which should be provided in a string format determined by input_format_string",
                                    "id": 759,
                                    "input_type": "item",
                                    "name": "input_datetime",
                                    "placeholder": "2020-06-27T14:53:08.219016Z"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "description": "The format string to use for the input according to the Python's datetime.strptime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'. In addition to strptime() formats, the special format \"epoch\" can be used to accept unix epoch timestamps.",
                                    "id": 760,
                                    "input_type": "item",
                                    "name": "input_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 186,
                                    "description": "Choose a unit to modify the date by, which must be either seconds, minutes, hours, or days. If none is provided the default will be 'minutes'",
                                    "id": 761,
                                    "input_type": "item",
                                    "name": "modification_unit",
                                    "placeholder": "minutes"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "description": "The number of seconds, minutes, hours, or days to add or subtract. Use a negative number such as -1.5 to subtract time. Defaults to zero.",
                                    "id": 762,
                                    "input_type": "item",
                                    "name": "amount_to_modify",
                                    "placeholder": "0"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "description": "The format string to use for the output according to the Python's datetime.strftime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'.",
                                    "id": 763,
                                    "input_type": "item",
                                    "name": "output_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                }
                            ],
                            "name": "datetime_modify",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "data_path": "datetime_string",
                                    "description": "The output datetime as formatted by the given output_format_string using Python's datetime.strftime()",
                                    "id": 412
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "data_path": "epoch_time",
                                    "description": "An integer representing the output time as a number of seconds since January 1 1970 assuming a naive UTC timezone. This is easier to use for comparisons to other epoch timestamps.",
                                    "id": 413
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 186,
                                    "data_path": "seconds_modified",
                                    "description": "The number of seconds (positive or negative) by which the input was modified",
                                    "id": 414
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "community/azure_new_user_census",
                                        "draft_mode": false,
                                        "id": 214,
                                        "name": "azure_new_user_census",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/corelight_investigate_dns_alert",
                                        "draft_mode": false,
                                        "id": 83,
                                        "name": "corelight_investigate_dns_alert",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/aws_find_inactive_users_add_artifact",
                                        "draft_mode": false,
                                        "id": 356,
                                        "name": "aws_find_inactive_users_add_artifact",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/aws_find_inactive_users_old",
                                        "draft_mode": false,
                                        "id": 319,
                                        "name": "aws_find_inactive_users_old",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/aws_find_inactive_users",
                                        "draft_mode": false,
                                        "id": 320,
                                        "name": "aws_find_inactive_users",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/aws_find_inactive_users_artifact_create",
                                        "draft_mode": false,
                                        "id": 458,
                                        "name": "aws_find_inactive_users_artifact_create",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/aws_find_inactive_users",
                                        "draft_mode": false,
                                        "id": 483,
                                        "name": "aws_find_inactive_users",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/azure_new_user_census",
                                        "draft_mode": false,
                                        "id": 486,
                                        "name": "azure_new_user_census",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 270
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2aae060b-3e71-41ec-a8e3-528fa87783ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cc55005a-4dce-4527-966e-24b92babb127",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d487a6dc-913e-4d5d-af07-5cca2a0479ce",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 271
                    },
                    {
                        "action": "get pcap",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                        },
                        "angle": 0,
                        "app": "Endace",
                        "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get pcap",
                                "actions": [
                                    "test connectivity",
                                    "get pcap",
                                    "delete pcap",
                                    "get status",
                                    "run query"
                                ],
                                "active": true,
                                "app_name": "Endace",
                                "app_version": "1.1.4",
                                "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                                "asset_name": "endaceprobe",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "endace_probe",
                                "output": [
                                    {
                                        "column_name": "PCAP ID",
                                        "column_order": 0,
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.parameter.pcap_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesTotal",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1979711440
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesRead",
                                        "data_type": "numeric",
                                        "example_values": [
                                            536842225
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesWritten",
                                        "data_type": "numeric",
                                        "example_values": [
                                            69255168
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.destinationFormat",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap",
                                            "erf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.progressPercentage",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.079115472451523
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Download"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Completed",
                                            "Running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.timeCreated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402559070
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines/f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "getDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.datamineID",
                                        "data_type": "string",
                                        "example_values": [
                                            "f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.timeCreated3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-12T07:44:30.989Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.rotationFiles",
                                        "data_type": "string",
                                        "example_values": [
                                            "beda7946-7bca-5756-9040-f37b481434a0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.deduplicate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.endTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T03:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.startTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402367830
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.endTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402371429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.startTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file size"
                                        ],
                                        "data_path": "action_result.data.*.vault.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15799219
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "vault id"
                                        ],
                                        "data_path": "action_result.data.*.vault.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2fd4e1c67a2d28fced849ee1bb76e7391b93eb12"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.vault.filename",
                                        "data_type": "string",
                                        "example_values": [
                                            "71a28c03-37fb-45f2-a63a-7167c4c7efa4.pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.contains",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.app_run_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2340
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.action",
                                        "data_type": "string",
                                        "example_values": [
                                            "get pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesTotalToWriteEstimate",
                                        "data_type": "numeric",
                                        "example_values": [
                                            875368191
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.status.timeStarted3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:07:36.049Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.stateUpdateTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981659
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.stateUpdateTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:07:39.896Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.timeStarted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981656
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.filterAppsInclude",
                                        "data_type": "string",
                                        "example_values": [
                                            "HTTP"
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "PCAP downloaded to Vault: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12.",
                                            "Error downloading file. State: RUNNING"
                                        ]
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "vault id"
                                        ],
                                        "data_path": "action_result.summary.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2fd4e1c67a2d28fced849ee1bb76e7391b93eb12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.file_availability",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "pcap_id": {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "PCAP ID",
                                        "key": "pcap_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Endace",
                                "product_vendor": "Endace",
                                "targets": "11",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Get PCAP under 10MB"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Get_PCAP_under_10MB(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_PCAP_under_10MB() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Get_PCAP_under_10MB' call\n    results_data_1 = phantom.collect2(container=container, datapath=['Query_EndaceProbe:action_result.summary.pcap_id', 'Query_EndaceProbe:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'Get_PCAP_under_10MB' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'pcap_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get pcap\", parameters=parameters, assets=['endace_probe'], name=\"Get_PCAP_under_10MB\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Get PCAP under 10MB",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "56b05bbe-5f61-48b3-8b65-10500aa32865",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 215,
                        "line_start": 192,
                        "message": "Configuring now",
                        "name": "get pcap",
                        "notes": "",
                        "number": 2,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "Get_PCAP_under_10MB",
                        "required_params": {
                            "pcap_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 288
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Extract_PCAP_Links(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Extract_PCAP_Links() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"downloadPcap\", \"in\", \"Get_PCAP_Status:action_result.data.*.datamine.links.*.name\"],\n        ],\n        name=\"Extract_PCAP_Links:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        PCAP_Links(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Get PCAP Status",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Extract PCAP Links",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4d7311a3-f63d-46c8-9512-85e4df4186c6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 276,
                        "line_start": 258,
                        "name": "filter",
                        "notes": "",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "downloadPcap",
                                        "value": "Get_PCAP_Status:action_result.data.*.datamine.links.*.name"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1360,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Extract_PCAP_Links",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 294
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "end_time": "",
                            "host1": "artifact:*.cef.sourceAddress",
                            "host2": "artifact:*.cef.destinationAddress",
                            "port1": "artifact:*.cef.sourcePort",
                            "port2": "artifact:*.cef.destinationPort",
                            "protocol": "artifact:*.cef.transportProtocol",
                            "span_after": 30,
                            "span_before": "3600",
                            "start_time": "",
                            "time": "epoch_to_timestamp:custom_function_result.data.datetime_string"
                        },
                        "angle": 0,
                        "app": "Endace",
                        "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "test connectivity",
                                    "get pcap",
                                    "delete pcap",
                                    "get status",
                                    "run query"
                                ],
                                "active": true,
                                "app_name": "Endace",
                                "app_version": "1.1.4",
                                "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                                "asset_name": "endaceprobe",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "end_time": "",
                                    "host1": "artifact:*.cef.sourceAddress",
                                    "host2": "artifact:*.cef.destinationAddress",
                                    "port1": "artifact:*.cef.sourcePort",
                                    "port2": "artifact:*.cef.destinationPort",
                                    "protocol": "artifact:*.cef.transportProtocol",
                                    "span_after": 30,
                                    "span_before": "3600",
                                    "start_time": "",
                                    "time": "epoch_to_timestamp:custom_function_result.data.datetime_string"
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "endace_probe",
                                "output": [
                                    {
                                        "data_path": "action_result.parameter.span_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "30"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.parameter.time",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:43:23.1234Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.span_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "30"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.port2",
                                        "data_type": "string",
                                        "example_values": [
                                            "80"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.port1",
                                        "data_type": "string",
                                        "example_values": [
                                            "80"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.protocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "tcp",
                                            "udp"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "endace ip network"
                                        ],
                                        "data_path": "action_result.parameter.host1",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.0.0.1",
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.parameter.start_time",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:18:42.1234Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "endace ip network"
                                        ],
                                        "data_path": "action_result.parameter.host2",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.0.0.5",
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.parameter.end_time",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:43:23.1234Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.messages.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.messages.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "datamineCreated"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.messages.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Datamine 983c5fd4-ea17-4e3a-b11f-78bc281644f9 created"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.data.*.datamine.results.*.datamineID",
                                        "data_type": "string",
                                        "example_values": [
                                            "983c5fd4-ea17-4e3a-b11f-78bc281644f9"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.datamine.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines/983c5fd4-ea17-4e3a-b11f-78bc281644f9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "getDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.meta.protocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "tcp"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.meta.startTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402366722
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.meta.port2",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.flow.meta.endTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:43:23.1234Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "endace ip network"
                                        ],
                                        "data_path": "action_result.data.*.flow.meta.host2",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.0.0.5",
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "endace ip network"
                                        ],
                                        "data_path": "action_result.data.*.flow.meta.host1",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.0.0.1",
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.meta.endTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402368203
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.flow.meta.startTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:18:42.1234Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.meta.port1",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.flowPacketCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            5288
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.totalByteCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            76367448
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.links.*.fields.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "String"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.links.*.fields.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "rotationFiles"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.links.*.fields.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "localhost:data,localhost:capture"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.flow.results.total.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "createDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.flowByteCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1977002
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.total.totalPacketCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            74980
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.rotationFileID",
                                        "data_type": "string",
                                        "example_values": [
                                            "0f73e00a-92fa-cbb2-72d5-b5e3419b6b37"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.fields.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "String"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.fields.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "rotationFiles"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.fields.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "localhost:data"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "createDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.rotationFileName",
                                        "data_type": "string",
                                        "example_values": [
                                            "data"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.flowPacketCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            349
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.probe",
                                        "data_type": "string",
                                        "example_values": [
                                            "localhost"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.flowByteCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            127034
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.totalPacketCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4623
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flow.results.rotationFiles.*.totalByteCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3777138
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Datamine 983c5fd4-ea17-4e3a-b11f-78bc281644f9 created"
                                        ]
                                    },
                                    {
                                        "column_name": "Estimated Size",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.flow_byte_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1977002
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.message_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "column_name": "PCAP ID",
                                        "column_order": 0,
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.summary.pcap_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "983c5fd4-ea17-4e3a-b11f-78bc281644f9"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "end_time": {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The end time of the data, in RFC-3339 format",
                                        "key": "end_time",
                                        "order": 2,
                                        "required": false
                                    },
                                    "host1": {
                                        "contains": [
                                            "ip",
                                            "ip network"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The flow initiator, expressed as <IP Address>[/<CIDR prefix>]",
                                        "key": "host1",
                                        "order": 5,
                                        "primary": true,
                                        "required": true
                                    },
                                    "host2": {
                                        "contains": [
                                            "ip",
                                            "ip network"
                                        ],
                                        "data_type": "string",
                                        "default": "0.0.0.0/0",
                                        "description": "The flow target, expressed as <IP Address>[/<CIDR prefix>]. Use 0.0.0.0/0 for directionless IP of host2",
                                        "key": "host2",
                                        "order": 6,
                                        "required": true
                                    },
                                    "port1": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The flow initiator port number",
                                        "key": "port1",
                                        "order": 7,
                                        "required": false
                                    },
                                    "port2": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The flow target port number",
                                        "key": "port2",
                                        "order": 8,
                                        "required": false
                                    },
                                    "protocol": {
                                        "data_type": "string",
                                        "default": "tcp",
                                        "description": "The name of the IP protocol; for example, 'udp', 'tcp'",
                                        "key": "protocol",
                                        "order": 9,
                                        "required": true
                                    },
                                    "span_after": {
                                        "data_type": "numeric",
                                        "default": 30,
                                        "description": "The span, in seconds, after the value specified by the 'time' parameter",
                                        "key": "span_after",
                                        "order": 4,
                                        "required": false
                                    },
                                    "span_before": {
                                        "data_type": "numeric",
                                        "default": 30,
                                        "description": "The span, in seconds, before the value specified by the 'time' parameter",
                                        "key": "span_before",
                                        "order": 3,
                                        "required": false
                                    },
                                    "start_time": {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The start time of the data, in RFC-3339 format",
                                        "key": "start_time",
                                        "order": 1,
                                        "required": false
                                    },
                                    "time": {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The time of interest, in RFC-3339 format",
                                        "key": "time",
                                        "order": 0,
                                        "required": false
                                    }
                                },
                                "product_name": "Endace",
                                "product_vendor": "Endace",
                                "targets": "11",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Query EndaceProbe"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Query_EndaceProbe(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Query_EndaceProbe() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Query_EndaceProbe' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.sourceAddress', 'artifact:*.cef.destinationAddress', 'artifact:*.cef.sourcePort', 'artifact:*.cef.destinationPort', 'artifact:*.cef.transportProtocol', 'artifact:*.id'])\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['epoch_to_timestamp:custom_function_result.data.datetime_string'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'Query_EndaceProbe' call\n    for container_item in container_data:\n        for custom_function_results_item_1 in custom_function_results_data_1:\n            if container_item[0] and container_item[1] and container_item[4]:\n                parameters.append({\n                    'time': custom_function_results_item_1[0],\n                    'host1': container_item[0],\n                    'host2': container_item[1],\n                    'port1': container_item[2],\n                    'port2': container_item[3],\n                    'end_time': \"\",\n                    'protocol': container_item[4],\n                    'span_after': 30,\n                    'start_time': \"\",\n                    'span_before': 3600,\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': container_item[5]},\n                })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['endace_probe'], callback=Query_Success, name=\"Query_EndaceProbe\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "epoch to timestamp",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Query EndaceProbe",
                        "delay": "0",
                        "description": "Search for PCAP on EndaceProbe",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d487a6dc-913e-4d5d-af07-5cca2a0479ce",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 55,
                        "line_start": 21,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "Search for PCAP on EndaceProbe",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "Query_EndaceProbe",
                        "required_params": {
                            "host1": true,
                            "host2": true,
                            "protocol": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 304
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Query_Success(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Query_Success() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Query_EndaceProbe:action_result.data.*.flow.results.total.flowByteCount\", \">\", 27],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        High_Severity_Event(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Failed_Status(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Query Success",
                        "description": "Check whether the PCAP has more than 27 bytes, which is the size of an empty PCAP.",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "59279ac2-67eb-4fe1-bc38-879a17bd7528",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 79,
                        "line_start": 58,
                        "name": "decision",
                        "notes": "Check whether the PCAP has more than 27 bytes, which is the size of an empty PCAP.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Query_EndaceProbe:action_result.data.*.flow.results.total.flowByteCount",
                                        "value": "27"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 720,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "Query_Success",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 310
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def PCAP_size_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('PCAP_size_check() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Query_EndaceProbe:action_result.data.*.flow.results.total.flowByteCount\", \">\", 10000000],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Get_PCAP_Status(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Get_PCAP_under_10MB(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "PCAP size check",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4a9e847f-7ce3-4af0-a1aa-1315772156ba",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 150,
                        "line_start": 129,
                        "name": "decision",
                        "notes": "Default limit is 10MB",
                        "number": 3,
                        "order": 6,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Query_EndaceProbe:action_result.data.*.flow.results.total.flowByteCount",
                                        "value": "10000000"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "PCAP_size_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 312
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def High_Severity_Event(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('High_Severity_Event() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.severity\", \"==\", \"high\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Get_PCAP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    PCAP_size_check(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "High Severity Event",
                        "description": "Automatically get the PCAP if the event is high severity.",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "75ca2dd8-ad62-410f-902c-1225a5cc4146",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 103,
                        "line_start": 82,
                        "name": "decision",
                        "notes": "Automatically get the PCAP if the event is high severity.",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.severity",
                                        "value": "high"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "High_Severity_Event",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 313
                    },
                    {
                        "action": "get status",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                        },
                        "angle": 0,
                        "app": "Endace",
                        "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get status",
                                "actions": [
                                    "test connectivity",
                                    "get pcap",
                                    "delete pcap",
                                    "get status",
                                    "run query"
                                ],
                                "active": true,
                                "app_name": "Endace",
                                "app_version": "1.1.4",
                                "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                                "asset_name": "endaceprobe",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "endace_probe",
                                "output": [
                                    {
                                        "column_name": "PCAP ID",
                                        "column_order": 0,
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.parameter.pcap_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "17147e4b-e73e-4888-9599-f38d43e814f0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.bytesTotal",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1979711440
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "download"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.bytesRead",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1073676191
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.bytesWritten",
                                        "data_type": "numeric",
                                        "example_values": [
                                            302485752
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.destinationFormat",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap",
                                            "erf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.progressPercentage",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.34555259730702
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Download"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Completed",
                                            "Running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.timeCreated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981924
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.datamine.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines/17147e4b-e73e-4888-9599-f38d43e814f0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "getDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.data.*.datamine.datamineID",
                                        "data_type": "string",
                                        "example_values": [
                                            "17147e4b-e73e-4888-9599-f38d43e814f0"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.datamine.timeCreated3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:12:04.802Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.rotationFiles",
                                        "data_type": "string",
                                        "example_values": [
                                            "beda7946-7bca-5756-9040-f37b481434a0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.deduplicate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.endTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T03:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.startTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402367830
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.endTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402371429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.startTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.bytesTotalToWriteEstimate",
                                        "data_type": "numeric",
                                        "example_values": [
                                            875368191
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.datamine.status.timeStarted3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:12:04.808Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.stateUpdateTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981929
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.stateUpdateTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:12:09.909Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.status.timeStarted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981924
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.datamine.filterAppsInclude",
                                        "data_type": "string",
                                        "example_values": [
                                            "HTTP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING; 35% complete"
                                        ]
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.progress",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.34555259730702
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "pcap_id": {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "PCAP ID",
                                        "key": "pcap_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Endace",
                                "product_vendor": "Endace",
                                "targets": "11",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Get PCAP Status"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Get_PCAP_Status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_PCAP_Status() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Get_PCAP_Status' call\n    results_data_1 = phantom.collect2(container=container, datapath=['Query_EndaceProbe:action_result.summary.pcap_id', 'Query_EndaceProbe:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'Get_PCAP_Status' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'pcap_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get status\", parameters=parameters, assets=['endace_probe'], callback=Extract_PCAP_Links, name=\"Get_PCAP_Status\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 191,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Get PCAP Status",
                        "delay": 0,
                        "description": "Only get the status if the PCAP is too large.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "89cb7d14-0252-4e9e-9449-eabbdd58a797",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 176,
                        "line_start": 153,
                        "message": "Configuring now",
                        "name": "get status",
                        "notes": "Only get the status if the PCAP is too large.",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Get_PCAP_Status",
                        "required_params": {
                            "pcap_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 314
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "Add Links to note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Links_to_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Links_to_note() called')\n\n    formatted_data_1 = phantom.get_format_data(name='PCAP_Links')\n\n    note_title = \"EndaceP2P Link\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "PCAP_Links:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteNoteFormat_display": "markdown",
                                "addNoteTitle": "EndaceP2P Link",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Get PCAP Status",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Links to note",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ef86af52-b60a-4e7f-9913-86668439ef4a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 265,
                        "line_end": 246,
                        "line_start": 234,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Add_Links_to_note",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 315
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "PCAP Links"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def PCAP_Links(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('PCAP_Links() called')\n    \n    template = \"\"\"{0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Extract_PCAP_Links:condition_1:Get_PCAP_Status:action_result.data.*.datamine.links.2.href\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"PCAP_Links\", separator=\", \")\n\n    Add_Links_to_note(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Get PCAP Status",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "PCAP Links",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fff76b64-4c5c-4e9a-9855-b5322bc927c7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 192,
                        "line_start": 176,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 2,
                                "type": "",
                                "value": "filtered-data:Extract_PCAP_Links:condition_1:Get_PCAP_Status:action_result.data.*.datamine.links.2.href"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1500,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "PCAP_Links",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 316
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_6() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Failed_Status')\n\n    note_title = \"Search Status\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Failed_Status:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Search Status",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1b52ab6e-56b6-46a0-9bb2-5e91cc70341e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 258,
                        "line_start": 246,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 6,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1360,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "add_note_6",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 318
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Failed Status"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Failed_Status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Failed_Status() called')\n    \n    template = \"\"\"Search Failed with Status - {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Query_EndaceProbe:action_result.status\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Failed_Status\", separator=\", \")\n\n    add_note_6(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Failed Status",
                        "delimiter": ", ",
                        "description": "Document the failed search when the byte count shows an empty PCAP.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1290c99a-fe4b-4589-b771-ce3eba3b6bfc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 234,
                        "line_start": 218,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Document the failed search when the byte count shows an empty PCAP.",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Query_EndaceProbe:action_result.status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "Failed_Status",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Search Failed with Status - {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 319
                    },
                    {
                        "action": "get pcap",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                        },
                        "angle": 0,
                        "app": "Endace",
                        "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get pcap",
                                "actions": [
                                    "test connectivity",
                                    "get pcap",
                                    "delete pcap",
                                    "get status",
                                    "run query"
                                ],
                                "active": true,
                                "app_name": "Endace",
                                "app_version": "1.1.4",
                                "appid": "3c681976-e5d1-4ccc-84de-4232fd25acbc",
                                "asset_name": "endaceprobe",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "pcap_id": "Query_EndaceProbe:action_result.summary.pcap_id"
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "endace_probe",
                                "output": [
                                    {
                                        "column_name": "PCAP ID",
                                        "column_order": 0,
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.parameter.pcap_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesTotal",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1979711440
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesRead",
                                        "data_type": "numeric",
                                        "example_values": [
                                            536842225
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesWritten",
                                        "data_type": "numeric",
                                        "example_values": [
                                            69255168
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.destinationFormat",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap",
                                            "erf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.progressPercentage",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.079115472451523
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Download"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Completed",
                                            "Running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.timeCreated",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402559070
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.links.*.href",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://endace-probe-101/api/v5/datamines/f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.links.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "getDatamine"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.links.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.datamineID",
                                        "data_type": "string",
                                        "example_values": [
                                            "f411b785-2507-4320-bbf3-83d3ecf69290"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.timeCreated3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-12T07:44:30.989Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.rotationFiles",
                                        "data_type": "string",
                                        "example_values": [
                                            "beda7946-7bca-5756-9040-f37b481434a0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.deduplicate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.endTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T03:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.startTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402367830
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.endTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402371429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.startTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-10T02:37:09.500Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file size"
                                        ],
                                        "data_path": "action_result.data.*.vault.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15799219
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "vault id"
                                        ],
                                        "data_path": "action_result.data.*.vault.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2fd4e1c67a2d28fced849ee1bb76e7391b93eb12"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.vault.filename",
                                        "data_type": "string",
                                        "example_values": [
                                            "71a28c03-37fb-45f2-a63a-7167c4c7efa4.pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.contains",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.app_run_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2340
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.action",
                                        "data_type": "string",
                                        "example_values": [
                                            "get pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.vault.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "pcap"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.bytesTotalToWriteEstimate",
                                        "data_type": "numeric",
                                        "example_values": [
                                            875368191
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "rfc3339"
                                        ],
                                        "data_path": "action_result.data.*.status.datamine.status.timeStarted3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:07:36.049Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.stateUpdateTime",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981659
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.stateUpdateTime3339",
                                        "data_type": "string",
                                        "example_values": [
                                            "2014-06-17T05:07:39.896Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.status.timeStarted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1402981656
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status.datamine.filterAppsInclude",
                                        "data_type": "string",
                                        "example_values": [
                                            "HTTP"
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "PCAP downloaded to Vault: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12.",
                                            "Error downloading file. State: RUNNING"
                                        ]
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMPLETED",
                                            "RUNNING"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "vault id"
                                        ],
                                        "data_path": "action_result.summary.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2fd4e1c67a2d28fced849ee1bb76e7391b93eb12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.file_availability",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "pcap_id": {
                                        "contains": [
                                            "pcap id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "PCAP ID",
                                        "key": "pcap_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Endace",
                                "product_vendor": "Endace",
                                "targets": "11",
                                "type": "investigative"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Get PCAP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Get_PCAP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_PCAP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Get_PCAP' call\n    results_data_1 = phantom.collect2(container=container, datapath=['Query_EndaceProbe:action_result.summary.pcap_id', 'Query_EndaceProbe:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'Get_PCAP' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'pcap_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get pcap\", parameters=parameters, assets=['endace_probe'], name=\"Get_PCAP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Query EndaceProbe",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Get PCAP",
                        "delay": 0,
                        "description": "Download PCAP from EndaceProbe",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d2122dfa-5f58-4943-b83a-b68b466653ae",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 129,
                        "line_start": 106,
                        "message": "Configuring now",
                        "name": "get pcap",
                        "notes": "",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "Get_PCAP",
                        "required_params": {
                            "pcap_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 320
                    }
                ]
            },
            "notes": "1. Configure Endace to forward syslog messages to Splunk and use a saved search to forward those messages to Splunk SOAR.\n2. Configure Splunk SOAR to connect to Endace Probe using the Endace app on Splunk SOAR.\n3. User can change the bytes match limit. \n4. Playbook uses a custom function called datetime_modify for timestamp conversion from epoch time to a timestamp."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.6.61906"
    },
    "create_time": "2021-08-24T20:50:32.087544+00:00",
    "draft_mode": false,
    "labels": [
        "splunk"
    ],
    "tags": []
}
