{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "This playbook responds to results from a Splunk correlation search by gathering more context about the relevant network indicators and blocking access to them if approved by an analyst. By comparing traffic monitoring data with Recorded Future bulk threat feeds, Splunk identifies high-risk network connection and forwards them to Phantom. Phantom queries Recorded Future for details about why the network indicators are on the threat list, and presents a decision to the analyst about whether the ip addresses and domain names should be blocked. In the is example, Layer 4 Traffic Monitoring by Cisco WSA is used as the network monitoring data source, and both Cisco Firepower NGFW and Cisco Umbrella can be used to enforce blocking actions at the perimeter and using DNS sinkholes.",
            "hash": "84540827082476945d694577642ab7f520e85c5d",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "block_recorded_future_ip_and_domain, block domain, block ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cc91f391-7d74-492b-be0b-2f3850273fad",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 283,
                        "line_start": 270,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 12,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1280,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'rule_name_decision' block\n    rule_name_decision(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c249ea1f-f6c1-48b8-8299-31598ca3d36f",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 107
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2588f6c1-1f10-4d16-aa55-8542e36a8899",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c249ea1f-f6c1-48b8-8299-31598ca3d36f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "08bc6cb9-976b-40e1-84e1-eb08fc498cb8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 114
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9423cff4-d2e5-41e8-92ef-e593f733d8e4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "08bc6cb9-976b-40e1-84e1-eb08fc498cb8",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5e2a2361-56db-4065-b61d-169394127263",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 131
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "996aa6cc-1c45-4237-b753-822a4e086890",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e2a2361-56db-4065-b61d-169394127263",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "311dcad6-6c6f-44a3-8d90-1a308cf90bc4",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 135
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9ebda256-50bd-4193-85c3-99ad553c5535",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e2a2361-56db-4065-b61d-169394127263",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e1093e4-0cdf-4459-a5b5-236105073984",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 137
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ec975bb1-119a-4f51-8d58-902ebbc64de5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "311dcad6-6c6f-44a3-8d90-1a308cf90bc4",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "287dff77-e2e5-4d63-a4ae-17877e92b0fb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 141
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "24e3b1c1-b0bb-496e-a3ce-c88da47d620d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e1093e4-0cdf-4459-a5b5-236105073984",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "287dff77-e2e5-4d63-a4ae-17877e92b0fb",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 143
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dff5716a-2f95-4b7e-8b78-66c6cc541a51",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "287dff77-e2e5-4d63-a4ae-17877e92b0fb",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e226308f-cd50-451e-b0ea-fe1aa89cdb3f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 146
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6e4119fa-1acb-4f04-b07b-087df4df13a8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e226308f-cd50-451e-b0ea-fe1aa89cdb3f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fc9ae829-fca2-4d3f-84e7-866c9db9c079",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 148
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "356aa550-ae50-45ef-adcf-c548cc10ed96",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc9ae829-fca2-4d3f-84e7-866c9db9c079",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "662ae9a9-ab59-447e-9476-aea9aff7d283",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 151
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "04dfead8-1501-4e1d-9341-f9246383557a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc9ae829-fca2-4d3f-84e7-866c9db9c079",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "acbb6867-08d1-4923-9638-06de93992e13",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 155
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "99d561d4-3e50-40c6-a78a-8eccc9aa0351",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc9ae829-fca2-4d3f-84e7-866c9db9c079",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "31607a37-f278-4729-92b7-82c7a9de8047",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 158
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dcff1616-beb5-4536-9ab8-775a9bf2784e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "662ae9a9-ab59-447e-9476-aea9aff7d283",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc91f391-7d74-492b-be0b-2f3850273fad",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 160
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8447d19d-2abc-4399-a7a3-6a13f1ecb45f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "31607a37-f278-4729-92b7-82c7a9de8047",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc91f391-7d74-492b-be0b-2f3850273fad",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 161
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "534adde2-cd3a-4b0f-a213-199cdc1f939a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "acbb6867-08d1-4923-9638-06de93992e13",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc91f391-7d74-492b-be0b-2f3850273fad",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 162
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def block_recorded_future_ip_and_domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_recorded_future_ip_and_domain() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"{0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"format_prompt_question:formatted_data\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"block_recorded_future_ip_and_domain\", parameters=parameters, response_types=response_types, callback=decide_prompt_response)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "ip intelligence, domain intelligence",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "block_recorded_future_ip_and_domain",
                        "description": "Send the prompt to block the playbook until a response is received",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e226308f-cd50-451e-b0ea-fe1aa89cdb3f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 190,
                        "line_start": 160,
                        "message": "{0}",
                        "name": "prompt",
                        "notes": "Send the prompt to block the playbook until a response is received",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "format_prompt_question:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "block_recorded_future_ip_and_domain",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 185
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format prompt question"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_prompt_question(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_prompt_question() called')\n    \n    template = \"\"\"A Splunk correlation search ({0}) detected an internal system opening a network connection to a potentially malicious IP address based on traffic monitoring from Cisco WSA and threat intelligence from Recorded Future:\n\nIP address: {1}\nRecorded Future Intel Card for IP address: {2}\n\nAssociated domain name: {3}\nRecorded Future Intel Card for domain: {4}\n\nShould Phantom use Cisco Firepower to block connections to that IP address and use Cisco Umbrella to block DNS resolutions of that domain?\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"container:name\",\n        \"deduplicate_inputs:custom_function:ip\",\n        \"ip_intelligence_1:action_result.data.*.intelCard\",\n        \"deduplicate_inputs:custom_function:domain\",\n        \"domain_intelligence_1:action_result.data.*.intelCard\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_prompt_question\")\n\n    block_recorded_future_ip_and_domain(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ip intelligence, domain intelligence",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format prompt question",
                        "description": "Use the source data and the threat context to build the prompt text asking the analyst whether or not to block the IP and domain",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "287dff77-e2e5-4d63-a4ae-17877e92b0fb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_format_prompt_question(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_format_prompt_question() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['ip_intelligence_1', 'domain_intelligence_1']):\n        \n        # call connected block \"format_prompt_question\"\n        format_prompt_question(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 146,
                        "line_end": 157,
                        "line_start": 118,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Use the source data and the threat context to build the prompt text asking the analyst whether or not to block the IP and domain",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:name"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "deduplicate_inputs:custom_function:ip"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "ip_intelligence_1:action_result.data.*.intelCard"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "deduplicate_inputs:custom_function:domain"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "domain_intelligence_1:action_result.data.*.intelCard"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 520,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "format_prompt_question",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "A Splunk correlation search ({0}) detected an internal system opening a network connection to a potentially malicious IP address based on traffic monitoring from Cisco WSA and threat intelligence from Recorded Future:\n\nIP address: {1}\nRecorded Future Intel Card for IP address: {2}\n\nAssociated domain name: {3}\nRecorded Future Intel Card for domain: {4}\n\nShould Phantom use Cisco Firepower to block connections to that IP address and use Cisco Umbrella to block DNS resolutions of that domain?",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 186
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "no block add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def no_block_add_comment(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('no_block_add_comment() called')\n\n    phantom.comment(container=container, comment=\"Analyst chose not to continue with blocking IP and domain\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Analyst chose not to continue with blocking IP and domain",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "block_recorded_future_ip_and_domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "no block add comment",
                        "description": "Leave a comment so it is clear that the analyst chose not to block",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "662ae9a9-ab59-447e-9476-aea9aff7d283",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 225,
                        "line_start": 218,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Leave a comment so it is clear that the analyst chose not to block",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1040,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "no_block_add_comment",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 193
                    },
                    {
                        "action": "block ip",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "deduplicate_inputs:custom_function:ip"
                        },
                        "angle": 0,
                        "app": "Cisco Firepower",
                        "appid": "F501CF42-46D4-4023-A156-208640865AA8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block ip",
                                "actions": [
                                    "unblock ip",
                                    "block ip",
                                    "list networks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Cisco Firepower",
                                "app_version": "1.2.2",
                                "appid": "F501CF42-46D4-4023-A156-208640865AA8",
                                "asset_name": "cisco_firepower",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "deduplicate_inputs:custom_function:ip"
                                },
                                "has_app": true,
                                "id": 27,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco_firepower",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ip network"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP/network to block (X.X.X.X/NM)",
                                        "key": "ip",
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Cisco Firepower",
                                "product_vendor": "Cisco Systems",
                                "targets": "27",
                                "type": "firewall"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_ip_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_ip_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    deduplicate_inputs__ip = json.loads(phantom.get_run_data(key='deduplicate_inputs:ip'))\n    # collect data for 'block_ip_1' call\n\n    parameters = []\n    \n    # build parameters list for 'block_ip_1' call\n    parameters.append({\n        'ip': deduplicate_inputs__ip,\n    })\n\n    phantom.act(action=\"block ip\", parameters=parameters, assets=['cisco_firepower'], name=\"block_ip_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "block_recorded_future_ip_and_domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Block all of the IP addresses in the deduplicated list by adjusting the firewall policy",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "acbb6867-08d1-4923-9638-06de93992e13",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 247,
                        "line_start": 228,
                        "message": "Configuring now",
                        "name": "block ip",
                        "notes": "Block all of the IP addresses in the deduplicated list by adjusting the firewall policy",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1040,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "block_ip_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 195
                    },
                    {
                        "action": "block domain",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "disable_safeguards": "False",
                            "domain": "deduplicate_inputs:custom_function:domain"
                        },
                        "angle": 0,
                        "app": "OpenDNS Umbrella",
                        "appid": "5cc62f57-dbf5-4c20-88ab-f16ace3bbf0b",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block domain",
                                "actions": [
                                    "unblock domain",
                                    "block domain",
                                    "list blocked domains",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "OpenDNS Umbrella",
                                "app_version": "1.2.20",
                                "appid": "5cc62f57-dbf5-4c20-88ab-f16ace3bbf0b",
                                "asset_name": "opendns_umbrella",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "disable_safeguards": "False",
                                    "domain": "deduplicate_inputs:custom_function:domain"
                                },
                                "has_app": true,
                                "id": 28,
                                "loaded": false,
                                "missing": false,
                                "name": "opendns_umbrella",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.disable_safeguards",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Domain",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "disable_safeguards": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Disable safeguards while blocking the domain",
                                        "key": "disable_safeguards",
                                        "order": 1,
                                        "required": false,
                                        "value": false
                                    },
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to block",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "OpenDNS Umbrella",
                                "product_vendor": "OpenDNS",
                                "targets": "28",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block domain"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_domain_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_domain_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    deduplicate_inputs__domain = json.loads(phantom.get_run_data(key='deduplicate_inputs:domain'))\n    # collect data for 'block_domain_1' call\n\n    parameters = []\n    \n    # build parameters list for 'block_domain_1' call\n    parameters.append({\n        'domain': deduplicate_inputs__domain,\n        'disable_safeguards': False,\n    })\n\n    phantom.act(action=\"block domain\", parameters=parameters, assets=['opendns_umbrella'], name=\"block_domain_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "block_recorded_future_ip_and_domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Block all of the domain names in the deduplicated list using a DNS sinkhole",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "31607a37-f278-4729-92b7-82c7a9de8047",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 270,
                        "line_start": 250,
                        "message": "Configuring now",
                        "name": "block domain",
                        "notes": "Block all of the domain names in the deduplicated list using a DNS sinkhole",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1040,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "block_domain_1",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 196
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def rule_name_decision(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('rule_name_decision() called')\n    \n    name_param = container.get('name', None)\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [name_param, \"==\", \"Threat - Cisco WSA L4TM Correlation Against Recorded Future IP Threat List - Rule\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        deduplicate_inputs(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "rule name decision",
                        "description": "Only continue the playbook if this event was created by the appropriate Splunk correlation search",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "08bc6cb9-976b-40e1-84e1-eb08fc498cb8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 78,
                        "line_start": 59,
                        "name": "decision",
                        "notes": "Only continue the playbook if this event was created by the appropriate Splunk correlation search",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "container:name",
                                        "value": "Threat - Cisco WSA L4TM Correlation Against Recorded Future IP Threat List - Rule"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -100,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "rule_name_decision",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 197
                    },
                    {
                        "action": "ip intelligence",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "deduplicate_inputs:custom_function:ip"
                        },
                        "angle": 0,
                        "app": "Recorded Future",
                        "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip intelligence",
                                "actions": [
                                    "ip reputation",
                                    "ip intelligence",
                                    "domain reputation",
                                    "domain intelligence",
                                    "file reputation",
                                    "file intelligence",
                                    "vulnerability reputation",
                                    "vulnerability intelligence",
                                    "url reputation",
                                    "url intelligence",
                                    "alert rule lookup",
                                    "alert data lookup",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Recorded Future",
                                "app_version": "2.0.0",
                                "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                                "asset_name": "recorded-future",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "deduplicate_inputs:custom_function:ip"
                                },
                                "has_app": true,
                                "id": 6,
                                "loaded": false,
                                "missing": false,
                                "name": "recorded_future",
                                "output": [
                                    {
                                        "contains": [
                                            "recordedfuture result status"
                                        ],
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity id"
                                        ],
                                        "data_path": "action_result.data.*.entity.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.data.*.entity.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity type"
                                        ],
                                        "data_path": "action_result.data.*.entity.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture intelligence card url"
                                        ],
                                        "data_path": "action_result.data.*.intelCard",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location asn"
                                        ],
                                        "data_path": "action_result.data.*.location.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location cidr id"
                                        ],
                                        "data_path": "action_result.data.*.location.cidr.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location cidr name"
                                        ],
                                        "data_path": "action_result.data.*.location.cidr.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location cidr type"
                                        ],
                                        "data_path": "action_result.data.*.location.cidr.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location city"
                                        ],
                                        "data_path": "action_result.data.*.location.location.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location continent"
                                        ],
                                        "data_path": "action_result.data.*.location.location.continent",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location country"
                                        ],
                                        "data_path": "action_result.data.*.location.location.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture location organization"
                                        ],
                                        "data_path": "action_result.data.*.location.organization",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture metrics type"
                                        ],
                                        "data_path": "action_result.data.*.metrics.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture metrics value"
                                        ],
                                        "data_path": "action_result.data.*.metrics.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture related entities count"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity id"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity name"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity type"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture related entity type"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality"
                                        ],
                                        "data_path": "action_result.data.*.risk.criticality",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.data.*.risk.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Very Malicious"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.criticality",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unusual"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence string"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.evidenceString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture mitigation string"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.mitigationString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence rule"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.rule",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence timestamp"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk string"
                                        ],
                                        "data_path": "action_result.data.*.risk.riskString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk summary"
                                        ],
                                        "data_path": "action_result.data.*.risk.riskSummary",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk rules"
                                        ],
                                        "data_path": "action_result.data.*.risk.rules",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk score"
                                        ],
                                        "data_path": "action_result.data.*.risk.score",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence firstseen"
                                        ],
                                        "data_path": "action_result.data.*.timestamps.firstSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence lastseen"
                                        ],
                                        "data_path": "action_result.data.*.timestamps.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.summary.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Very Malicious"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence lastseen"
                                        ],
                                        "data_path": "action_result.summary.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk summary"
                                        ],
                                        "data_path": "action_result.summary.riskSummary",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture result message"
                                        ],
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects"
                                        ],
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects successful"
                                        ],
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Recorded Future App for Phantom",
                                "product_vendor": "Recorded Future, Inc",
                                "targets": "6",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "ip intelligence"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def ip_intelligence_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ip_intelligence_1() called')\n\n    deduplicate_inputs__ip = json.loads(phantom.get_run_data(key='deduplicate_inputs:ip'))\n    # collect data for 'ip_intelligence_1' call\n\n    parameters = []\n    \n    # build parameters list for 'ip_intelligence_1' call\n    parameters.append({\n        'ip': deduplicate_inputs__ip,\n    })\n\n    phantom.act(action=\"ip intelligence\", parameters=parameters, assets=['recorded_future'], callback=join_format_prompt_question, name=\"ip_intelligence_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Gather all known threat intelligence about the IP from Recorded Future",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "311dcad6-6c6f-44a3-8d90-1a308cf90bc4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 36,
                        "line_start": 19,
                        "message": "Configuring now",
                        "name": "ip intelligence",
                        "notes": "Gather all known threat intelligence about the IP from Recorded Future",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "ip_intelligence_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 199
                    },
                    {
                        "action": "domain intelligence",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "deduplicate_inputs:custom_function:domain"
                        },
                        "angle": 0,
                        "app": "Recorded Future",
                        "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain intelligence",
                                "actions": [
                                    "ip reputation",
                                    "ip intelligence",
                                    "domain reputation",
                                    "domain intelligence",
                                    "file reputation",
                                    "file intelligence",
                                    "vulnerability reputation",
                                    "vulnerability intelligence",
                                    "url reputation",
                                    "url intelligence",
                                    "alert rule lookup",
                                    "alert data lookup",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Recorded Future",
                                "app_version": "1.2.0",
                                "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                                "asset_name": "recorded_future",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "deduplicate_inputs:custom_function:domain"
                                },
                                "has_app": true,
                                "id": 14,
                                "loaded": false,
                                "missing": false,
                                "name": "recorded_future",
                                "output": [
                                    {
                                        "contains": [
                                            "recordedfuture result status"
                                        ],
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity id"
                                        ],
                                        "data_path": "action_result.data.*.entity.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.entity.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity type"
                                        ],
                                        "data_path": "action_result.data.*.entity.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture intelligence card url"
                                        ],
                                        "data_path": "action_result.data.*.intelCard",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture metrics type"
                                        ],
                                        "data_path": "action_result.data.*.metrics.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture metrics value"
                                        ],
                                        "data_path": "action_result.data.*.metrics.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture related entities count"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity id"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity name"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture entity type"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.entities.*.entity.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Hash"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture related entity type"
                                        ],
                                        "data_path": "action_result.data.*.relatedEntities.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality"
                                        ],
                                        "data_path": "action_result.data.*.risk.criticality",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.data.*.risk.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Very Malicious"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.criticality",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unusual"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence string"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.evidenceString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture mitigation string"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.mitigationString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence rule"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.rule",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence timestamp"
                                        ],
                                        "data_path": "action_result.data.*.risk.evidenceDetails.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk string"
                                        ],
                                        "data_path": "action_result.data.*.risk.riskString",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk summary"
                                        ],
                                        "data_path": "action_result.data.*.risk.riskSummary",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk rules"
                                        ],
                                        "data_path": "action_result.data.*.risk.rules",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk score"
                                        ],
                                        "data_path": "action_result.data.*.risk.score",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture threatlist description"
                                        ],
                                        "data_path": "action_result.data.*.threatLists.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture threatlist id"
                                        ],
                                        "data_path": "action_result.data.*.threatLists.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture threatlist name"
                                        ],
                                        "data_path": "action_result.data.*.threatLists.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture threatlist type"
                                        ],
                                        "data_path": "action_result.data.*.threatLists.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence firstseen"
                                        ],
                                        "data_path": "action_result.data.*.timestamps.firstSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence lastseen"
                                        ],
                                        "data_path": "action_result.data.*.timestamps.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk criticality label"
                                        ],
                                        "data_path": "action_result.summary.criticalityLabel",
                                        "data_type": "string",
                                        "example_values": [
                                            "Very Malicious"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture evidence lastseen"
                                        ],
                                        "data_path": "action_result.summary.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture risk summary"
                                        ],
                                        "data_path": "action_result.summary.riskSummary",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture result message"
                                        ],
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects"
                                        ],
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "recordedfuture total objects successful"
                                        ],
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Recorded Future App for Phantom",
                                "product_vendor": "Recorded Future, Inc",
                                "targets": "14",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "domain intelligence"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def domain_intelligence_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('domain_intelligence_1() called')\n\n    deduplicate_inputs__domain = json.loads(phantom.get_run_data(key='deduplicate_inputs:domain'))\n    # collect data for 'domain_intelligence_1' call\n\n    parameters = []\n    \n    # build parameters list for 'domain_intelligence_1' call\n    parameters.append({\n        'domain': deduplicate_inputs__domain,\n    })\n\n    phantom.act(action=\"domain intelligence\", parameters=parameters, assets=['recorded_future'], callback=join_format_prompt_question, name=\"domain_intelligence_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Gather all known threat intelligence about the domain from Recorded Future",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e1093e4-0cdf-4459-a5b5-236105073984",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 56,
                        "line_start": 39,
                        "message": "Configuring now",
                        "name": "domain intelligence",
                        "notes": "Gather all known threat intelligence about the domain from Recorded Future",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "domain_intelligence_1",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 200
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "deduplicate inputs"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def deduplicate_inputs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('deduplicate_inputs() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationAddress', 'artifact:*.cef.dest_domain', 'artifact:*.id'])\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n\n    deduplicate_inputs__ip = None\n    deduplicate_inputs__domain = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    deduplicate_inputs__ip = container_item_0[0]\n    deduplicate_inputs__domain = container_item_1[0]\n    \n    if not deduplicate_inputs__ip or not deduplicate_inputs__domain:\n        failure_message = \"stopping the playbook because either the IP address or domain name was missing from the event\"\n        phantom.comment(container=container, comment=failure_message)\n        phantom.error(failure_message)\n        exit(1)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='deduplicate_inputs:ip', value=json.dumps(deduplicate_inputs__ip))\n    phantom.save_run_data(key='deduplicate_inputs:domain', value=json.dumps(deduplicate_inputs__domain))\n    ip_intelligence_1(container=container)\n    domain_intelligence_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 9,
                        "customCodeStartLine": 13,
                        "custom_callback": "",
                        "custom_code": "def deduplicate_inputs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('deduplicate_inputs() called')\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationAddress', 'artifact:*.cef.dest_domain', 'artifact:*.id'])\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n\n    deduplicate_inputs__ip = None\n    deduplicate_inputs__domain = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    deduplicate_inputs__ip = container_item_0[0]\n    deduplicate_inputs__domain = container_item_1[0]\n    \n    if not deduplicate_inputs__ip or not deduplicate_inputs__domain:\n        failure_message = \"stopping the playbook because either the IP address or domain name was missing from the event\"\n        phantom.comment(container=container, comment=failure_message)\n        phantom.error(failure_message)\n        exit(1)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='deduplicate_inputs:ip', value=json.dumps(deduplicate_inputs__ip))\n    phantom.save_run_data(key='deduplicate_inputs:domain', value=json.dumps(deduplicate_inputs__domain))\n    ip_intelligence_1(container=container)\n    domain_intelligence_1(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "deduplicate inputs",
                        "description": "Each matching Recorded Future threat rule will create a nearly identical artifact, so deduplicate these artifacts by just extracting the IP and domain name from the first artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e2a2361-56db-4065-b61d-169394127263",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 115,
                        "line_start": 81,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Each matching Recorded Future threat rule will create a nearly identical artifact, so deduplicate these artifacts by just extracting the IP and domain name from the first artifact",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "ip"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "domain"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.dest_domain"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "deduplicate_inputs",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    deduplicate_inputs__ip = container_item_0[0]\n    deduplicate_inputs__domain = container_item_1[0]\n    \n    if not deduplicate_inputs__ip or not deduplicate_inputs__domain:\n        failure_message = \"stopping the playbook because either the IP address or domain name was missing from the event\"\n        phantom.comment(container=container, comment=failure_message)\n        phantom.error(failure_message)\n        exit(1)\n",
                        "warn": false,
                        "z": 201
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decide_prompt_response(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decide_prompt_response() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"block_recorded_future_ip_and_domain:action_result.summary.responses.0\", \"==\", \"Yes\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        block_ip_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        block_domain_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    no_block_add_comment(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "block_recorded_future_ip_and_domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decide_prompt_response",
                        "description": "Determine the next action based on the analyst's response",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fc9ae829-fca2-4d3f-84e7-866c9db9c079",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 215,
                        "line_start": 193,
                        "name": "decision",
                        "notes": "Determine the next action based on the analyst's response",
                        "number": 2,
                        "order": 8,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "block_recorded_future_ip_and_domain:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "decide_prompt_response",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 202
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - Recorded Future (ip intelligence, domain intelligence) [asset name = recorded_future] - gather context about why the indicators were placed on the threat feed to inform the analyst decision\n - Cisco Firepower [block ip] [asset name = cisco_firepower] - block IP addresses with a firewall policy change\n - OpenDNS Umbrella [block domain] asset name = opendns_umbrella] - sinkhole domain names using DNS\n\nDeployment Notes:\n - This playbook was designed to work with a specific Splunk correlation search that uses Layer 4 Traffic Monitoring in Cisco WSA to correlate against the rf_ip_threatfeed lookup from Recorded Future, but it could be used for any search checking network traffic against a threat list\n - The artifact CEF fields are expected to be destinationAddress for IP addresses and dest_domain for domain names\n - The prompt is hard-coded to use \"admin\" as the user, so change it to the correct user or role\n - The SLA can be changed from the default to suit the needs of the team\n - One area of future improvement for this playbook would be to use a custom list, Splunk lookup, or other method to support a list of approved exceptions and a process to add exceptions to this threat feed and to stop playbooks early when run against those IP addresses or domain names"
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-01-25T22:22:18.992852+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": [],
    "misc": {
        "apps_list": [
            "Recorded Future",
            "Cisco Firepower",
            "OpenDNS Umbrella"
        ]
    }
}