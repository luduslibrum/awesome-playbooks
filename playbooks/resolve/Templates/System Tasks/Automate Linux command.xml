<TotalExport sourceSystem="NG">
  <Workflows>
    <WorkflowInfo Pnumber="113" Name="Automate Linux command" Description="Execute Linux commnd on list of servers" Xoml="&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:ReadXLS;Assembly=ReadXLS, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:StartSSHSession;Assembly=StartSSHSession, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:SendSSHCommand;Assembly=SendSSHCommand, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:TerminateSSHSession;Assembly=TerminateSSHSession, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&#xD;&#xA;  &lt;ns0:ReadXLS IsValid=&quot;True&quot; x:Name=&quot;readXLS1&quot; HostName=&quot;localhost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Read Excel&quot; Path=&quot;c:\Servers.xls&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Read excel file&quot; HostId=&quot;1&quot; TypeName=&quot;ReadXLS&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;  &lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%readXLS1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&#xD;&#xA;  &lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&#xD;&#xA;    &lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&#xD;&#xA;      &lt;ns2:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&#xD;&#xA;      &lt;ns3:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;ServerName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns4:StartSSHSession Password=&quot;6C5561636A35564A747A476757685932386A516F2B773D3D&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; HostName=&quot;%ServerName%&quot; DisplayName=&quot;Start SSH Session&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; Port=&quot;22&quot; TypeName=&quot;StartSSHSession&quot; OSType=&quot;0&quot; TimeInSeconds=&quot;0&quot; MaxSessionTime=&quot;00:10:00&quot; x:Name=&quot;startSSHSession1&quot; Timeout=&quot;00:01:00&quot; UserName=&quot;root&quot; Description=&quot;Starts SSH Session.&quot; StartSession=&quot;SSH&quot; /&gt;&#xD;&#xA;      &lt;ns5:SendSSHCommand Comm=&quot;cp /etc/hosts /etc/hosts_backup&quot; x:Name=&quot;sendSSHCommand1&quot; HostName=&quot;{x:Null}&quot; Prompt=&quot;&quot; SessionName=&quot;startSSHSession1&quot; Timeout=&quot;00:01:00&quot; IsValid=&quot;True&quot; DisplayName=&quot;Send SSH Command&quot; OSType=&quot;0&quot; TimeInSeconds=&quot;0&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Send SSH command.&quot; HostId=&quot;0&quot; TypeName=&quot;SendSSHCommand&quot; /&gt;&#xD;&#xA;      &lt;ns6:TerminateSSHSession SessionName=&quot;startSSHSession1&quot; x:Name=&quot;terminateSSHSession1&quot; TimeInSeconds=&quot;0&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;{x:Null}&quot; DisplayName=&quot;Terminate SSH Session&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Terminate SSH session.&quot; HostId=&quot;0&quot; TypeName=&quot;TerminateSSHSession&quot; /&gt;&#xD;&#xA;    &lt;/SequenceActivity&gt;&#xD;&#xA;  &lt;/WhileActivity&gt;&#xD;&#xA;&lt;/SequentialWorkflowActivity&gt;" XomlStatus="0" Details="" WorkflowType="2" WorkflowFolderId="14" CurrentRevisionNumber="1" WorkflowParentId="0" DateCreated="2021-03-22T16:44:59" DateCreatedUser="1" DateModified="2021-03-22T16:44:59" DateModifiedUser="1" />
  </Workflows>
  <Objects>
    <Hosts>
      <Host Hnumber="1" Hname="LocalHost" Hdescription="" Deleted="0" DeviceType="0" Site="0" IPAddress="127.0.0.1" Platform="1" InstanceMode="0" CredentialsInherit="0" ExecutorID="0" AutoCreated="0" IsHidden="0" />
    </Hosts>
    <ErrorHandlers />
    <ErrorMessages />
    <MessageTemplates />
    <Sites />
    <Developments />
    <Users />
    <Groups />
    <UsersGroupsArray />
    <Domains />
    <Commands />
    <Classifications />
    <Incidents />
    <TimeFrames />
    <Variables />
    <Modules />
    <Conditions />
    <ConditionArrays />
    <ConditionObjects />
    <SoapWebServices />
    <Triggers />
    <TriggerConditionArrays />
    <LogCategory />
    <LogTriggerCategory />
    <Schedules />
    <CustomActivities />
    <ActivitiesSource />
    <ScheduleCategoriesRelations />
  </Objects>
  <ObjectsRelations>
    <ObjectRelation ObjectID="1" Type="Host" ParentWorkFlowID="113" />
  </ObjectsRelations>
  <ExportKeys />
</TotalExport>