<TotalExport sourceSystem="NG">
  <Workflows>
    <WorkflowInfo Pnumber="24" Name="Reset password by sending text message to eyeShare" Description="Reset password by sending SMS to eyeShare with pre-define phrase" Xoml="&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:ADSearchUserLogonName;Assembly=ADSearchUserLogonName, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:ADUserExists;Assembly=ADUserExists, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:PasswordGenerator;Assembly=PasswordGenerator, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:ADPasswordReset;Assembly=ADPasswordReset, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:ADSetPasswordProperties;Assembly=ADSetPasswordProperties, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:SendSMS;Assembly=SendSMS, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:Terminate;Assembly=Terminate, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&#xD;&#xA;  &lt;ns0:ADSearchUserLogonName IsValid=&quot;True&quot; x:Name=&quot;UserName&quot; HostName=&quot;AD-SERVER&quot; ADResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&amp;lt;Settings&amp;gt;&amp;lt;Settings mobile=&amp;quot;%source%&amp;quot; /&amp;gt;&amp;lt;/Settings&amp;gt;&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;AD Search User Logon Name&quot; Path=&quot;{x:Null}&quot; Password=&quot;&quot; TimeInSeconds=&quot;0&quot; Description=&quot;Active directory search user logon name.&quot; HostId=&quot;40&quot; TypeName=&quot;ADSearchUserLogonName&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;  &lt;ns1:ADUserExists IsValid=&quot;True&quot; x:Name=&quot;adUserExists1&quot; ADUserName=&quot;%UserName%&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;AD-SERVER&quot; DisplayName=&quot;AD User Exists&quot; Path=&quot;{x:Null}&quot; Password=&quot;&quot; Description=&quot;Active directory check if user account exists.&quot; HostId=&quot;40&quot; TypeName=&quot;ADUserExists&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;  &lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&#xD;&#xA;    &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&#xD;&#xA;      &lt;ns2:ReturnValue Value=&quot;True&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,True)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;      &lt;ns3:PasswordGenerator NumberOccurences=&quot;1&quot; x:Name=&quot;passwordGenerator1&quot; IncludeSpecial=&quot;0&quot; IsValid=&quot;True&quot; SpecialOccureneces=&quot;0&quot; DisplayName=&quot;Generate Password&quot; AllowReoccuring=&quot;0&quot; PassLength=&quot;8&quot; Description=&quot;Strong password generator&quot; TypeName=&quot;PasswordGenerator&quot; LetterCase=&quot;Upper and Lower case&quot; IncludeNumbers=&quot;1&quot; /&gt;&#xD;&#xA;      &lt;ns4:ADPasswordReset IsValid=&quot;True&quot; x:Name=&quot;adPasswordReset1&quot; ADUserName=&quot;%UserName%&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;AD-SERVER&quot; NewPassword=&quot;704E6C50344352715956426968645950696F4561326A377648712F41455A6F327A754A336C7067594337343D&quot; DisplayName=&quot;AD Password Reset&quot; Path=&quot;{x:Null}&quot; PasswordEncrypt=&quot;False&quot; Password=&quot;&quot; Description=&quot;Active directory reset user password.&quot; HostId=&quot;40&quot; TypeName=&quot;ADPasswordReset&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;      &lt;ns5:ADSetPasswordProperties NeverExpires=&quot;0&quot; IsValid=&quot;True&quot; x:Name=&quot;adSetPasswordProperties1&quot; ChangeNextLogon=&quot;1&quot; HostId=&quot;40&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;AD-SERVER&quot; ADUserName=&quot;%UserName%&quot; Path=&quot;{x:Null}&quot; Password=&quot;&quot; TimeInSeconds=&quot;0&quot; Description=&quot;Active directory set a user's password properties.&quot; DisplayName=&quot;AD Set Password Properties&quot; TypeName=&quot;ADSetPasswordProperties&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;      &lt;ns6:SendSMS Channel=&quot;SMS&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;&quot; DestinationNumber=&quot;0&quot; DisplayName=&quot;Send SMS&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; TemplateNumber=&quot;0&quot; TemplateName=&quot;&quot; TypeName=&quot;SendSMS&quot; SendRN=&quot;False&quot; x:Name=&quot;sendSMS1&quot; Timeout=&quot;00:00:00&quot; DestinationType=&quot;User&quot; Description=&quot;Send SMS to a user, a group or a duty.&quot; Continue=&quot;False&quot; Body=&quot;Your password has been reset&amp;#xD;&amp;#xA;The new password is:&amp;#xD;&amp;#xA;%passwordGenerator1.password%&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;You will have to change it at your next logon&quot; To=&quot;%source%&quot; MessageType=&quot;Custom&quot; /&gt;&#xD;&#xA;    &lt;/IfElseBranchActivity&gt;&#xD;&#xA;    &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&#xD;&#xA;      &lt;ns2:ReturnValue Value=&quot;False&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,False)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;      &lt;ns7:Terminate DisplayName=&quot;Terminate&quot; x:Name=&quot;terminate1&quot; TerminationReason=&quot;No such user in the AD&quot; IsValid=&quot;True&quot; TypeName=&quot;Terminate&quot; Description=&quot;Terminate the current branch in workflow&quot; /&gt;&#xD;&#xA;    &lt;/IfElseBranchActivity&gt;&#xD;&#xA;  &lt;/IfElseActivity&gt;&#xD;&#xA;&lt;/SequentialWorkflowActivity&gt;" XomlStatus="0" Details="" WorkflowType="2" WorkflowFolderId="2" CurrentRevisionNumber="1" WorkflowParentId="0" DateCreated="2021-03-22T16:44:58" DateCreatedUser="1" DateModified="2021-03-22T16:44:58" DateModifiedUser="1" />
  </Workflows>
  <Objects>
    <Hosts />
    <ErrorHandlers />
    <ErrorMessages />
    <MessageTemplates />
    <Sites />
    <Developments />
    <Users />
    <Groups />
    <UsersGroupsArray />
    <Domains />
    <Commands />
    <Classifications />
    <Incidents />
    <TimeFrames />
    <Variables>
      <Variable Number="11" Name="Source" Type="1" Value="" Layout="" OwnerType="0" ContentType="0" CreateDate="2022-09-02T08:56:30.553" />
    </Variables>
    <Modules />
    <Conditions />
    <ConditionArrays />
    <ConditionObjects />
    <SoapWebServices />
    <Triggers />
    <TriggerConditionArrays />
    <LogCategory />
    <LogTriggerCategory />
    <Schedules />
    <CustomActivities />
    <ActivitiesSource />
    <ScheduleCategoriesRelations />
  </Objects>
  <ObjectsRelations>
    <ObjectRelation ObjectID="11" Type="Variable" ParentWorkFlowID="24" />
  </ObjectsRelations>
  <ExportKeys />
</TotalExport>