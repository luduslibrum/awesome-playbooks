<TotalExport sourceSystem="NG">
  <Workflows>
    <WorkflowInfo Pnumber="61" Name="Compare folders content" Description="Compare folders and copy and create new folders that contains the differemt files" Xoml="&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:ReadXLS;Assembly=ReadXLS, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:FolderList;Assembly=FolderList, Version=1.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:FileExist;Assembly=FileExist, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:FileCheckSumComparison;Assembly=FileCheckSumComparison, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:FileCopy;Assembly=FileCopy, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&#xD;&#xA;  &lt;ns0:ReadXLS IsValid=&quot;True&quot; x:Name=&quot;readXLS1&quot; HostName=&quot;localhost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Read Excel&quot; Path=&quot;c:\CompareFolders.xls&quot; Password=&quot;&quot; Description=&quot;Read excel file&quot; HostId=&quot;1&quot; TypeName=&quot;ReadXLS&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;  &lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; ResultSet=&quot;%readXLS1%&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; DisplayName=&quot;Get Rows Count&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&#xD;&#xA;  &lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&#xD;&#xA;    &lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&#xD;&#xA;      &lt;ns2:ExitWhile DisplayName=&quot;Exit While&quot; x:Name=&quot;exitWhile1&quot; Description=&quot;Exit current while activity&quot; IsValid=&quot;True&quot; TypeName=&quot;ExitWhile&quot; Counter=&quot;%getRowsCount1%&quot; /&gt;&#xD;&#xA;      &lt;ns3:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;Folder1&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns3:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;Folder2&quot; ColumnNumber=&quot;2&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns3:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;NewFolder&quot; ColumnNumber=&quot;3&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns4:FolderList Password=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; TimeInSeconds=&quot;0&quot; HostName=&quot;localhost&quot; DisplayName=&quot;List Folder&quot; IsValid=&quot;True&quot; HostId=&quot;1&quot; TimeSelection=&quot;00:00:00&quot; Path=&quot;%Folder1%&quot; Filter=&quot;0&quot; TypeName=&quot;FolderList&quot; x:Name=&quot;folderList1&quot; isRecursive=&quot;0&quot; Condition=&quot;0&quot; Timeout=&quot;00:01:00&quot; UserName=&quot;administrator&quot; Description=&quot;List the contents of the specified folder.&quot; FilterSelection=&quot;False&quot; MapDrive=&quot;False&quot; /&gt;&#xD;&#xA;      &lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount2&quot; ResultSet=&quot;%folderList1%&quot; ResultSetName=&quot;folderList1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; DisplayName=&quot;Get Rows Count&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&#xD;&#xA;      &lt;WhileActivity x:Name=&quot;whileActivity2&quot; Condition=&quot;{x:Null}&quot;&gt;&#xD;&#xA;        &lt;SequenceActivity x:Name=&quot;sequenceActivity2&quot;&gt;&#xD;&#xA;          &lt;ns2:ExitWhile DisplayName=&quot;Exit While&quot; x:Name=&quot;exitWhile2&quot; Description=&quot;Exit current while activity&quot; IsValid=&quot;True&quot; TypeName=&quot;ExitWhile&quot; Counter=&quot;%getRowsCount2%&quot; /&gt;&#xD;&#xA;          &lt;ns3:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;FileName&quot; ColumnNumber=&quot;2&quot; ResultSet=&quot;%folderList1%&quot; RowNumber=&quot;%exitWhile2%&quot; ResultSetName=&quot;folderList1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;          &lt;ns3:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;FilePath&quot; ColumnNumber=&quot;3&quot; ResultSet=&quot;%folderList1%&quot; RowNumber=&quot;%exitWhile2%&quot; ResultSetName=&quot;folderList1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;          &lt;ns5:FileExist IsValid=&quot;True&quot; x:Name=&quot;fileExist1&quot; HostName=&quot;localhost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;File Exists&quot; Path=&quot;%Folder2%\%FileName%&quot; Password=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; Description=&quot;Checks if file exists.&quot; HostId=&quot;1&quot; TypeName=&quot;FileExist&quot; UserName=&quot;administrator&quot; /&gt;&#xD;&#xA;          &lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&#xD;&#xA;            &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&#xD;&#xA;              &lt;ns6:ReturnValue Value=&quot;True&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,True)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;              &lt;ns7:FileCheckSumComparison DstHostName=&quot;localhost&quot; DstPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; x:Name=&quot;fileCheckSumComparison1&quot; IsValid=&quot;True&quot; Timeout=&quot;00:02:00&quot; SrcUserName=&quot;administrator&quot; SrcHostName=&quot;localhost&quot; DstPath=&quot;%Folder2%\%FileName%&quot; SrcPath=&quot;%FilePath%&quot; Description=&quot;Compares the check sum of two files and returns whether or not they are equal&quot; DisplayName=&quot;File CheckSum Comparison&quot; SrcPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; DstUserName=&quot;administrator&quot; RequiresMap=&quot;True&quot; TypeName=&quot;FileCheckSumComparison&quot; /&gt;&#xD;&#xA;              &lt;IfElseActivity x:Name=&quot;ifElseActivity2&quot;&gt;&#xD;&#xA;                &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity3&quot;&gt;&#xD;&#xA;                  &lt;ns6:ReturnValue Value=&quot;True&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue3&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,True)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;                &lt;/IfElseBranchActivity&gt;&#xD;&#xA;                &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity4&quot;&gt;&#xD;&#xA;                  &lt;ns6:ReturnValue Value=&quot;False&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue4&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,False)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;                  &lt;ns8:FileCopy DstHostName=&quot;localhost&quot; DstPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; x:Name=&quot;fileCopy2&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; SrcUserName=&quot;administrator&quot; SrcHostName=&quot;localhost&quot; DstPath=&quot;%NewFolder%\%FileName%&quot; SrcPath=&quot;%FilePath%&quot; Description=&quot;Copy a file from a source location to a destination location&quot; DisplayName=&quot;Copy File&quot; SrcPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; DstUserName=&quot;administrator&quot; TypeName=&quot;FileCopy&quot; /&gt;&#xD;&#xA;                &lt;/IfElseBranchActivity&gt;&#xD;&#xA;              &lt;/IfElseActivity&gt;&#xD;&#xA;            &lt;/IfElseBranchActivity&gt;&#xD;&#xA;            &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&#xD;&#xA;              &lt;ns6:ReturnValue Value=&quot;False&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,False)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;              &lt;ns8:FileCopy DstHostName=&quot;localhost&quot; DstPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; x:Name=&quot;fileCopy1&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; SrcUserName=&quot;administrator&quot; SrcHostName=&quot;localhost&quot; DstPath=&quot;%NewFolder%\%FileName%&quot; SrcPath=&quot;%FilePath%&quot; Description=&quot;Copy a file from a source location to a destination location&quot; DisplayName=&quot;Copy File&quot; SrcPassword=&quot;3274462B436643684C467A46704D744E464B4A6846773D3D&quot; DstUserName=&quot;administrator&quot; TypeName=&quot;FileCopy&quot; /&gt;&#xD;&#xA;            &lt;/IfElseBranchActivity&gt;&#xD;&#xA;          &lt;/IfElseActivity&gt;&#xD;&#xA;        &lt;/SequenceActivity&gt;&#xD;&#xA;      &lt;/WhileActivity&gt;&#xD;&#xA;    &lt;/SequenceActivity&gt;&#xD;&#xA;  &lt;/WhileActivity&gt;&#xD;&#xA;&lt;/SequentialWorkflowActivity&gt;" XomlStatus="0" Details="" WorkflowType="2" WorkflowFolderId="7" CurrentRevisionNumber="1" WorkflowParentId="0" DateCreated="2021-03-22T16:44:59" DateCreatedUser="1" DateModified="2021-03-22T16:44:59" DateModifiedUser="1" />
  </Workflows>
  <Objects>
    <Hosts>
      <Host Hnumber="1" Hname="LocalHost" Hdescription="" Deleted="0" DeviceType="0" Site="0" IPAddress="127.0.0.1" Platform="1" InstanceMode="0" CredentialsInherit="0" ExecutorID="0" AutoCreated="0" IsHidden="0" />
    </Hosts>
    <ErrorHandlers />
    <ErrorMessages />
    <MessageTemplates />
    <Sites />
    <Developments />
    <Users />
    <Groups />
    <UsersGroupsArray />
    <Domains />
    <Commands />
    <Classifications />
    <Incidents />
    <TimeFrames />
    <Variables />
    <Modules />
    <Conditions />
    <ConditionArrays />
    <ConditionObjects />
    <SoapWebServices />
    <Triggers />
    <TriggerConditionArrays />
    <LogCategory />
    <LogTriggerCategory />
    <Schedules />
    <CustomActivities />
    <ActivitiesSource />
    <ScheduleCategoriesRelations />
  </Objects>
  <ObjectsRelations>
    <ObjectRelation ObjectID="1" Type="Host" ParentWorkFlowID="61" />
  </ObjectsRelations>
  <ExportKeys />
</TotalExport>