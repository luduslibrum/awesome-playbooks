<TotalExport sourceSystem="NG">
  <Workflows>
    <WorkflowInfo Pnumber="63" Name="Compress files larger than 5MB" Description="Compress files with size larger than 5MB" Xoml="&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:FolderList;Assembly=FolderList, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRows;Assembly=GetRows, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:FileSize;Assembly=FileSize, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ZipCompress;Assembly=ZipCompress, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&#xD;&#xA;  &lt;ns0:FolderList Password=&quot;&quot; TimeInSeconds=&quot;0&quot; HostName=&quot;LocalHost&quot; x:Name=&quot;folderList1&quot; DisplayName=&quot;List Folder&quot; IsValid=&quot;True&quot; HostId=&quot;1&quot; TimeSelection=&quot;30.00:00:00&quot; Path=&quot;c:\logs&quot; Filter=&quot;0&quot; TypeName=&quot;FolderList&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; isRecursive=&quot;1&quot; Condition=&quot;0&quot; Timeout=&quot;00:05:00&quot; UserName=&quot;&quot; Description=&quot;List the     contents of the specified folder.&quot; FilterSelection=&quot;False&quot; MapDrive=&quot;True&quot; /&gt;&#xD;&#xA;  &lt;ns1:GetRows RowNumber=&quot;&quot; x:Name=&quot;getRows1&quot; HostName=&quot;{x:Null}&quot; RowContains=&quot;File&quot; ResultSet=&quot;%folderList1%&quot; Timeout=&quot;00:01:00&quot; IsValid=&quot;True&quot; isRowNumber=&quot;1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;Get Rows&quot; ResultSetName=&quot;folderList1&quot; TimeInSeconds=&quot;0&quot; Description=&quot;Gets     specified rows from a resultset.&quot; HostId=&quot;0&quot; TypeName=&quot;GetRows&quot; /&gt;&#xD;&#xA;  &lt;ns2:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%getRows1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;getRows1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&#xD;&#xA;  &lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&#xD;&#xA;    &lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&#xD;&#xA;      &lt;ns3:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit     current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&#xD;&#xA;      &lt;ns4:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;FileName&quot; ColumnNumber=&quot;3&quot; ResultSet=&quot;%getRows1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;getRows1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell     value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns4:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;FilePath&quot; ColumnNumber=&quot;4&quot; ResultSet=&quot;%getRows1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;getRows1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell     value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&#xD;&#xA;      &lt;ns5:FileSize IsValid=&quot;True&quot; x:Name=&quot;fileSize1&quot; HostName=&quot;LocalHost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Get File Size&quot; Path=&quot;%FilePath%&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the selected     file size.&quot; HostId=&quot;1&quot; TypeName=&quot;FileSize&quot; UserName=&quot;&quot; /&gt;&#xD;&#xA;      &lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&#xD;&#xA;        &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&#xD;&#xA;          &lt;ns6:ReturnValue Value=&quot;5&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;=&amp;gt;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=&amp;amp;&amp;amp;&amp;amp; =&amp;gt; 5&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;          &lt;ns7:ZipCompress SrcPassword=&quot;&quot; TimeInSeconds=&quot;0&quot; DstHostName=&quot;Localhost&quot; HostName=&quot;LocalHost&quot; DisplayName=&quot;Zip     Compression&quot; IsValid=&quot;True&quot; HostId=&quot;1&quot; x:Name=&quot;zipCompress1&quot; TypeName=&quot;ZipCompress&quot; DstPath=&quot;%FilePath%.zip&quot; SrcHostName=&quot;Localhost&quot; EncryptionType=&quot;Standard&quot; DstPassword=&quot;&quot; Timeout=&quot;00:01:00&quot; SrcPath=&quot;%FilePath%&quot; ArchivePassword=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Creates a Zip Compressed file     with the specified compression type.&quot; DstUserName=&quot;&quot; isPasswordEnabled=&quot;0&quot; ZipCompressionLevel=&quot;Super Fast&quot; SrcUserName=&quot;&quot; /&gt;&#xD;&#xA;        &lt;/IfElseBranchActivity&gt;&#xD;&#xA;        &lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&#xD;&#xA;          &lt;ns6:ReturnValue Value=&quot;5&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;&amp;lt;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=&amp;amp;&amp;amp;&amp;amp; &amp;lt; 5&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&#xD;&#xA;        &lt;/IfElseBranchActivity&gt;&#xD;&#xA;      &lt;/IfElseActivity&gt;&#xD;&#xA;    &lt;/SequenceActivity&gt;&#xD;&#xA;  &lt;/WhileActivity&gt;&#xD;&#xA;&lt;/SequentialWorkflowActivity&gt;" XomlStatus="0" Details="" WorkflowType="2" WorkflowFolderId="7" CurrentRevisionNumber="1" WorkflowParentId="0" DateCreated="2021-03-22T16:44:59" DateCreatedUser="1" DateModified="2021-03-22T16:44:59" DateModifiedUser="1" />
  </Workflows>
  <Objects>
    <Hosts>
      <Host Hnumber="1" Hname="LocalHost" Hdescription="" Deleted="0" DeviceType="0" Site="0" IPAddress="127.0.0.1" Platform="1" InstanceMode="0" CredentialsInherit="0" ExecutorID="0" AutoCreated="0" IsHidden="0" />
    </Hosts>
    <ErrorHandlers />
    <ErrorMessages />
    <MessageTemplates />
    <Sites />
    <Developments />
    <Users />
    <Groups />
    <UsersGroupsArray />
    <Domains />
    <Commands />
    <Classifications />
    <Incidents />
    <TimeFrames />
    <Variables />
    <Modules />
    <Conditions />
    <ConditionArrays />
    <ConditionObjects />
    <SoapWebServices />
    <Triggers />
    <TriggerConditionArrays />
    <LogCategory />
    <LogTriggerCategory />
    <Schedules />
    <CustomActivities />
    <ActivitiesSource />
    <ScheduleCategoriesRelations />
  </Objects>
  <ObjectsRelations>
    <ObjectRelation ObjectID="1" Type="Host" ParentWorkFlowID="63" />
  </ObjectsRelations>
  <ExportKeys />
</TotalExport>